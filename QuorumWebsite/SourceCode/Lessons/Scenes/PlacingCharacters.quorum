use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Containers.Array
use Libraries.Web.Page.Section

class PlacingCharacters is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Placing Characters - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division leftDiv = divs:Get(0)
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        AddHeading(headDiv, "Placing Characters", 1)
        headDiv:AddParagraph("Prepare Characters for a holy quest of doom ...")
        bodyDiv:Add(headDiv)

        Section introSection
        introSection:AddClassAttribute("flex flex-col gap-y-2")

        AddHeading(introSection, "Learning Objectives", 2)
        introSection:AddParagraph("Once we have a map for our game, we are ready to populate it with characters and have them take actions on command. All of us should feel free to be creative and create a game that is designed how we wish. While a quest will be outlined here as an exemplar, being creative and having fun is part of the process.")

        introSection:AddParagraph("You will:")
        Array<text> objectives
        objectives:Add("Learn about compiling and running programs")
        objectives:Add("Learn about Types and Output")
        objectives:Add("Practice using the Scene Editor")
        OrderedList ol = GenerateList(objectives)
        introSection:Add(ol)

        AddHeading(introSection, "Place a Character (10 minutes)", 2)
        bodyDiv:AddParagraph("By default, Quorum Studio comes with some stock art, including monsters and player characters, that can be used inside of an application. We will be using this stock art here as a demonstration, but keep in mind that we can add our own art and even use it from the Palette if we wish.")
        AddHeading(introSection, "For 2D", 3)
        introSection:AddParagraph("Inside of the Palette, there are several options for our character. First, there is an item in the Palette labeled Characters 2D. Inside is a boy and a girl that we could use. Alternatively, we could make our character be any of the monsters under Dungeon 2D. Second, once we have chosen our character, we need a second one, which will be a non-player character (NPC). This character will serve as a quest giver. In later tutorials, we will make our player move and eventually add a monster.")

        AddHeading(introSection, "For 3D", 3)
        introSection:AddParagraph("Under the Scene Tab, if we look under the Items tree there are several items which have been added to the tree. There are all the Items that we need to have the buildings (as in previous solutions) plus we have added two Items that will represent our characters. The first is a green person in the center, this will represent the player. Second inside the building on the left, we have another character. This will be our quest-giver, also known as a Non-Player-Character (NPC). Alternatively, we could make our character be any of the other items that are in the 3D Palette section. In later tutorials, we will make our player move and maybe eventually add a monster.")bodyDiv:AddHeading("Design a Quest (15 minutes)",2)
        introSection:AddParagraph("Next, we need to design a quest. Any quest is fine, but to keep things simple, the one in this tutorial has the following steps:")
        Array<text> quest
        quest:Add("We walk to our NPC and press a button on the keyboard")
        quest:Add("This triggers a conversation with our NPC. We need a script for that conversation")
        quest:Add("Gather items that have appeared throughout our map")
        quest:Add("A monster appears once we have gathered the items")
        introSection:Add(GenerateList(quest))
        introSection:AddParagraph("In order to complete this quest, we should generate a unique name for our player and for the NPC. We also need dialog for the conversation and we need to decide on what the item is that we will be collecting, in addition to choosing a monster and creating some dialog for when that monster appears. We should make all these decisions in collaboration with our partner and write them down in a shared document. We highly recommend coordinating directly on Slack, Zoom, or Github, although whatever works is fine. Finally, this tutorial will not specify what our monster does. That is for you to decide. You and your partner can have it attack, do stand-up comedy, dance a jig, or whatever else you wish, at your discretion.")

        AddHeading(introSection, "Types and Output in Quorum (25 minutes)",2)
        Paragraph types = introSection:AddParagraph("We have placed our characters on the screen and generated a preliminary script for our quest. The next step is to start learning a little bit about code. The reason we care about this is because the Scene Editor in Quorum Studio creates static scenes, but if we want our game to do anything in real-time, or to be accessible, we need to write code that makes it so. To do this, we first need to learn about keywords in Quorum, specifically we need to learn about ")
        types:AddLink("types and output","/tutorials/language/types.html")
        types:AddText(". In the next tutorial, we will use this information to get information, like coordinates, about our characters. ")

        AddHeading(introSection, "Wrap-up with a Partner (10 minutes)",2)
        introSection:AddParagraph("For the last 5 minutes, see if you can add one of the output statements to the Main.quorum file in Quorum Studio. Your output statement might look something like:")

        introSection:Add(
            preformatter:GeneratePreformattedCode(
            GetTextFromSource("/html/sources/lessons/scenes/Bunnykins.quorum")
            )
        )
        
        bodyDiv:Add(introSection)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    

    action GetMetaDescription returns text
        return "Learn to Place Characters and Design a Quest with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Introducing Character Placement in the Scene Editor"
    end

    action GetName returns text
        return "Place Characters"
    end

    action GetShortDescription returns text
        return " placing characters and designing a quest."
    end

    action GetLocation returns text
        return "lessons/Scenes/characters.html"
    end
end