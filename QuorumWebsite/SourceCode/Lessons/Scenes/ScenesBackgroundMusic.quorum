use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Containers.Array
use Libraries.Web.Page.Section

class ScenesBackgroundMusic is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Add Background Music - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division leftDiv = divs:Get(0)
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        AddHeading(headDiv, "Add Background Music", 1)
        headDiv:AddParagraph("Games need a cool jam")
        bodyDiv:Add(headDiv)

        Section introSection
        introSection:AddClassAttribute("flex flex-col gap-y-2")

        AddHeading(introSection, "Add Background Music", 1)
        introSection:AddParagraph("Making games fun and accessible often involves visual and auditory features. In the next three lessons, we will be adding sound to our game. In this one, we focus on streamed sound, which we use for background music.")

        introSection:AddParagraph("Learning Objectives")
        Array<text> objectives
        objectives:Add("Learn about sound programming")
        objectives:Add("Learn about music streaming")
        objectives:Add("Learn about Audacity and audio formats")
        OrderedList ol = GenerateList(objectives)
        introSection:Add(ol)

        AddHeading(introSection, "Warm up (20 minutes)",2)
        Paragraph warm = introSection:AddParagraph("First, we need to find a cool jam. Use whatever is appropriate for you, but one source for license free music is ")
        warm:AddLink("https://freepd.com/","https://freepd.com/")
        warm:AddText(". To the best of our knowledge, all of this work is under the ")
        warm:AddLink("CC0 license","https://creativecommons.org/share-your-work/public-domain/cc0/")
        warm:AddText(". This means that no rights are reserved and that the music is in the public domain.")
        
        warm:AddText("Once we have found our perfect song, we need to convert it into a form suitable for Quorum to use. This is called ")
        warm:AddLink("Ogg","https://wiki.audacityteam.org/wiki/OGG")
        warm:AddText(". Ogg is an open source format commonly used in games. We recommend using ")
        warm:AddLink("Audacity","https://www.audacityteam.org/")
        warm:AddText(" for the conversion.")

        AddHeading(introSection, "Activity (30 minutes)",2)
        Paragraph sound = introSection:AddParagraph("Once we have our sound, we need to place our converted file into our game folder on disk. We do not do this in Quorum Studio and can use plain old Finder on Mac or Windows Explorer on Windows. For the sake of this tutorial, we placed the file at <My Folder>/Resources/Funshine.ogg. Once we have our sound in a place of our choosing, we will use the ")
        sound:AddLink("streaming tutorial","/tutorials/dsp/audioplaylongeraudiotutorial.html")
        sound:AddText(" to learn how to add background music.")

        AddHeading(introSection, "Wrap-up (10 minutes)", 2)
        introSection:AddParagraph("When streaming, we have to do a weird thing: call an action named Stream inside of another action named Update. There are three parts to this wrap-up that we encourage each group to attempt: 1) Describe in your own words to your group what stream does, 2) because Stream is in the Update action, it is called for every frame of animation. Try to reason out why that is, and 3) Explore other actions that are available in the Audio class and explain which you think might be useful for accessibility to your group.")

        bodyDiv:Add(introSection)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn how to Add Background Music with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Add Background Music"
    end

    action GetName returns text
        return "Add Background Music"
    end

    action GetShortDescription returns text
        return " finding and adding background music."
    end

    action GetLocation returns text
        return "lessons/Scenes/music.html"
    end
end