use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Containers.Array

class BuildRoleplaying is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Build a Roleplaying Game - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Build a Roleplaying Game", 1)
        headDiv:AddText("Learn the Scene Editor by Creating a Map")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("Build a Roleplaying Game", 1)
        bodyDiv:AddParagraph("When learning computer science, creating larger projects can be motivational and help students learn the big picture about the field. No one project is necessarily better or worse than another. While learning about games is not magic, they are naturally complicated enough to be interesting, while also giving students a payoff in the sense that they can play what they have created while being creative. Notably, in this session, we will be learning about Quorum Studio's Scene Editor in order to build our own role playing game.")

        bodyDiv:AddParagraph("Learning Objectives")
        Array<text> objectives
        objectives:Add("Learn about the Scene Editor")
        objectives:Add("Learn about the Palette and the Grid")
        objectives:Add("Learn how to create a game")
        OrderedList ol = GenerateList(objectives)
        bodyDiv:Add(ol)

        bodyDiv:AddHeading("What is a roleplaying game?", 2)
        bodyDiv:AddParagraph("Role Playing games come in many shapes and sizes. Throughout the next few sessions, we are going to focus on putting together a game with the following properties:")
        
        Array<text> gameList
        gameList:Add("Map: role playing games often have a background map that can be traversed by monsters and a player character")
        gameList:Add("Things: games often have decorations, like potions or flags, characters like a boy or a girl, and other items that a character might want to interact with")
        gameList:Add("Quests: role Playing games often have things to do, like a royal quest to destroy Evil Lord Bunnykins and his band of carrot-loving cultists.")
        gameList:Add("Sounds and Effects: Often we might have background music, sounds, and other effects to indicate what is happening in our game.")
        gameList:Add("Movement and triggers: typically a player can control the action, but the game also might take action at various points during a game")

        OrderedList ol2 = GenerateList(gameList)
        bodyDiv:Add(ol2)

        bodyDiv:AddParagraph("Over the next few days, we will be making a game with these ideas in mind. At each step, we will walk through what kind of operations Quorum Studio can do for us and where we have to step in, get our hands dirty, and write the code.")

        bodyDiv:AddHeading("Introduction to the Scene Editor (10 minutes)",2)
        Paragraph warm = bodyDiv:AddParagraph("In the first ten minutes, we will first go over the primary components of the scene editor in Quorum Studio, including the Palette, the Scene Tab, and the Grid. More information on these components can be found in the ")
        warm:AddLink("scene editor introductory tutorial.","/tutorials/Scenes/components.html")

        bodyDiv:AddHeading("Pick a Theme (10 minutes)",2)
        bodyDiv:AddParagraph("Once we know the basics of using the scene editor, we need to pick a theme for our game. Individuals that want to create a game on their own are free to do so, but creating computer games is sometimes more fun with a friend. For this reason, while it is not required, we encourage participants to consider choosing one or more partners and creating a game together. We recommend, but also do not require, using Slack for communication and Github to share code with each other.")

        Paragraph partner = bodyDiv:AddParagraph("Once you know if you have a partner, it is time to pick a theme! Anything you find fun will do, but Quorum Studio comes with default art and inventing a story that does not require new art assets is easier. For those that want to develop their own art assets, and make that art accessible, it is possible to do that in Quorum Studio, although it is not part of our lessons for the week. More information on that can be found in the tutorial on ")
        partner:AddLink("changing the palette.","/tutorials/Scenes/palette.html")

        bodyDiv:AddHeading("Activity (30 minutes)",2)
        Paragraph theme = bodyDiv:AddParagraph("Now that we have a theme, we are going to use the Plane to add and remove items from our map, focusing on just the background of our level. We will first go over using the grid, including how it is used accessibly, and then provide everyone time to create a map of their own design. More information on adding and removing items from a scene can be found in the ")
        theme:AddLink("tutorial on adding and removing items.", "/tutorials/Scenes/manipulate.html")
        
        bodyDiv:AddHeading("Wrap-up (10 minutes)", 2)
        Paragraph wrap = bodyDiv:AddParagraph("For the final few minutes, we are going to go into breakout rooms and share our map with our partner. The goal is to present a brief idea on your theme, show the map where it stands, and to provide encouragement and ideas to each other as a group. Note that partners that want to work together on the same scene can share their scene files and source code with each other however they see fit. We again recommend using ")
        wrap:AddLink("github.com","https://www.github.com")
        wrap:AddText(", but even emailing back and forth, using Slack, or any other mechanism that works for you and your partner, will get the job done for this training. Those that would like extra help on using github are welcome to ask about it during office hours.")

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    

    action GetMetaDescription returns text
        return "Learn to code a Role-Playing Game with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Introducing Role-Playing Games"
    end

    action GetName returns text
        return "Build a Role-Playing Game"
    end

    action GetShortDescription returns text
        return " the first step in game creation: building a theme and a map."
    end

    action GetLocation returns text
        return "lessons/Scenes/roleplaying.html"
    end
end