use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.all

class Challenge3_2 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Challenge 3.2: Trivia Challenge - Audio - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Challenge 3.2: Trivia Challenge - Audio", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("In this assignment, you will practice the following computer science concepts:")
        
        UnorderedList goalsList
        goalsList:AddListItem("Reading Files")
        goalsList:AddListItem("Using Control Structures")
        bodyDiv:Add(goalsList)


        bodyDiv:AddHeading("Computer Science Principles Curriculum", 2)

        UnorderedList list
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.1, LO 1.1.1, EK 1.1.1A, EU 1.2, LO 1.2.1, EK 1.2.1E")
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EU 4.1, LO 4.1.1, EK 4.1.1B")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.3, LO 5.3.1, EK 5.3.1I, EU 5.5, LO 5.5.1, EK 5.5.1H, EK 5.5.1I, EK 5.5.1J")
        bodyDiv:Add(list)

        bodyDiv:AddHeading("Common Core Standards", 2)
        UnorderedList ccList
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards Â» Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.9-10.1, CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.8, CCSS.ELA-Literacy.RST.9-10.9")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8, CCSS.Math.Content.HSF.IF.A.1  ")
        bodyDiv:Add(ccList)


        bodyDiv:AddHeading("Overview", 2)

        Paragraph p1
        Bold mainBold
        mainBold:AddText("main.quorum")
        p1:AddText("In this assignment, you will create a program that plays a simple trivia game. 
                    This assignment allows you to create your own questions and answers for the game. 
                    Download this ")
        p1:AddLink( "zip file" , "/files/lessons/chapter3/Challenge3_2Template.zip")
        p1:AddText(" for a template to help you get started. 
                    Open the provided project template and navigate to the ") 
        p1:Add(mainBold)
        p1:AddText(" file.")        
        bodyDiv:Add(p1)

//        SideBySideIDE writeQuestionsIDE
//        writeQuestionsIDE:SetUniqueIdentifier("writeQuestions")
//        writeQuestionsIDE:Setup()
//        writeQuestionsIDE:GetIDETitle():AddText("Activity 1: Write The Questions (And Answers)")
//        writeQuestionsIDE:GetIDESubtitle():AddText(" ")
//        bodyDiv:Add(writeQuestionsIDE)

       Paragraph activity1Paragraph
       Bold activity1Bold
       activity1Bold:AddText("Activity 1: Write the questions and answers.")
       activity1Paragraph:Add(activity1Bold)
       bodyDiv:Add(activity1Paragraph)

        

        Paragraph p2
        Bold txtBold
        txtBold:AddText( dq + ".txt" + dq )
        p2:AddText("This assignment stores the questions and answers for your game in separate " )
        p2:Add(txtBold)
        p2:AddText(" files. 
                    This allows you to update or change your questions/answers without having to modify your program code. 
                    Create two " )
        p2:Add(txtBold)
        p2:AddText(" files, one for the questions and one for the answers. 
                    Come up with the questions and answers for your game and put them in the appropriate files, one per line.")  
        bodyDiv:Add(p2)


        bodyDiv:AddHeading("Understanding FileReaders", 3)

        Paragraph p3
        CodeBlock librariesSystemCode
        CodeBlock fileReaderCode
        CodeBlock arrayCode
        CodeBlock librariesContainersCode
        librariesSystemCode:AddText("Libraries.System.FileReader")
        fileReaderCode:AddText("FileReader")
        arrayCode:AddText("Array")
        librariesContainersCode:AddText("Libraries.Containers.Array")
        p3:AddText("Because your questions and answers are stored in separate ")
        p3:Add(txtBold)
        p3:AddText(" files, your program needs to read those files in order to access your questions. 
                    To do this, you need to use the ")
        p3:AddLink( "FileReader" , "libraries/System/FileReader.html")
        p3:AddText(" object from the ") 
        p3:Add(librariesSystemCode)
        p3:AddText(" library. The ") 
        p3:Add(fileReaderCode)
        p3:AddText(" object reads a Quorum ") 
        p3:AddLink( "File" , "libraries/System/File.html")
        p3:AddText(" object sequentially starting from the beginning of the file. 
                    To store the questions and answers during the program you use an object known in Quorum as an ") 
        p3:AddLink( "Array" , "libraries/System/FileReader.html")
        p3:AddText(". An ") 
        p3:Add(arrayCode)
        p3:AddText(" is simply a container that stores items in a contiguous block of memory. To use the ") 
        p3:Add(arrayCode)
        p3:AddText(" object, you need to include the ")  
        p3:Add(librariesContainersCode)
        p3:AddText(" library.")        
        bodyDiv:Add(p3)


//        SideBySideIDE createObjectsIDE
//        createObjectsIDE:SetUniqueIdentifier("createObjects")
//        createObjectsIDE:GetIDETitle():AddText("Activity: ")
//        Paragraph p4
        CodeBlock fileCode
        fileCode:AddText("File")
//        p4:AddText("Tell Quorum you want to use the ")
//        p4:Add(fileReaderCode)
//        p4:AddText(", ")
//        p4:Add(fileCode)
//        p4:AddText(" and ")
//        p4:Add(arrayCode)
//        p4:AddText(" libraries, declare the ")
//        p4:Add(fileReaderCode)
//        p4:AddText(" and ")
//        p4:Add(fileCode)
//        p4:AddText(" objects for the questions and answers, and set the paths of the files.")
//        createObjectsIDE:SetIDESubtitle(p4)
//        createObjectsIDE:Setup()
//        bodyDiv:Add(createObjectsIDE)

        Paragraph activity2Paragraph
        Bold activity2Bold
        activity2Bold:AddText("Activity 2: Tell Quorum you want to use the ")
        activity2Bold:Add(fileReaderCode)
        activity2Bold:AddText(", ")
        activity2Bold:Add(fileCode)
        activity2Bold:AddText(" and ")
        activity2Bold:Add(arrayCode)
        activity2Bold:AddText(" libraries, declare the ")
        activity2Bold:Add(fileReaderCode)
        activity2Bold:AddText(" and ")
        activity2Bold:Add(fileCode)
        activity2Bold:AddText(" objects for the questions and answers, and set the paths of the files.")
        activity2Paragraph:Add(activity2Bold)
        bodyDiv:Add(activity2Paragraph)


        Paragraph p5
        Bold questionsTxtBold
        Bold answersTxtBold
        questionsTxtBold:AddText( dq + "questions.txt" + dq )  
        answersTxtBold:AddText( dq + "answers.txt" + dq )
        p5:AddText("In order to use ")
        p5:Add(fileReaderCode)
        p5:AddText(" objects, you first need to declare both ")
        p5:Add(fileCode)
        p5:AddText(" and ") 
        p5:Add(fileReaderCode)
        p5:AddText(" objects. Since you have 2 files, one for questions and one for answers, you need two ") 
        p5:Add(fileCode)
        p5:AddText(" objects, one that represents the ") 
        p5:Add(questionsTxtBold)
        p5:AddText(" file and another that represents the ")  
        p5:Add(answersTxtBold)
        p5:AddText(" file. You also need two ")  
        p5:Add(fileReaderCode)
        p5:AddText(" objects, one to read the ")  
        p5:Add(questionsTxtBold)
        p5:AddText(" file and another to read the ")   
        p5:Add(answersTxtBold)
        p5:AddText(" file. You also need to set the paths of the ")  
        p5:Add(fileCode)
        p5:AddText(" objects to your questions and answers files.")        
        bodyDiv:Add(p5)

        bodyDiv:AddParagraph("Your program needs a place to store the questions and answers read from the files. 
                            To do this, you use arrays.")


        bodyDiv:Add(break)

        Paragraph example1Paragraph
        Bold example1Bold
        example1Bold:AddText("Example: Declare ")
        example1Bold:Add(arrayCode)
        example1Bold:AddText(" objects to store the questions and answers.")
        example1Paragraph:Add(example1Bold)
        bodyDiv:Add(example1Paragraph)

        CodeBlock example1Code
        Span s1
        Span s2
        Span s3
        s1:AddText(     "// this line declares an array called questions. The &#60text&#62 part tells the Array" + cr 
                    +   "// that it will store text" + cr  )
        s1:SetClassAttribute("comment")
        example1Code:Add(s1)
        example1Code:AddText(   "Array&#60text&#62 questions" + cr + cr )
        s2:AddText(     "// this line sets the y position of our birds audio object." + cr 
                    +   "// the sound will be coming from above our heads" + cr )
        s2:SetClassAttribute("comment")
        example1Code:Add(s2)
        example1Code:AddText(   "birds:SetY(0.9)" + cr + cr )
        s3:AddText(     "// this line declares an array called answers. The &#60text&#62 part tells the Array" + cr 
                    +   "// that it will store text" + cr )
        s3:SetClassAttribute("comment")
        example1Code:Add(s3)
        example1Code:AddText(   "Array&#60text&#62 answers" + cr + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example1Code))


        bodyDiv:AddHeading("Goal 1: Reading Files", 2)
        Paragraph p6
        CodeBlock openForReadCode
        openForReadCode:AddText( "OpenForRead" )  
        p6:AddText("To get your questions and answers from their files into your program, you need to tell your program to read the files. 
                    In order to read a file, it must first be opened. 
                    In Quorum, you must also tell files what they are being opened for (reading, writing, reading and writing). 
                    Since we are going to be reading our file once it has been opened, we use the ")
        p6:Add(openForReadCode)
        p6:AddText(" action on our ")
        p6:Add(fileReaderCode)
        p6:AddText(" objects. This action takes a single parameter that represents the ") 
        p6:Add(fileCode)
        p6:AddText(" object we want to open for read.")        
        bodyDiv:Add(p6)



//        SideBySideIDE openQuestionsIDE
//        openQuestionsIDE:SetUniqueIdentifier("openQuestions")
//        openQuestionsIDE:GetIDETitle():AddText("Activity: ")
//        Paragraph p7
//        p7:AddText("Open the questions and answers files for read using the ")
//        p7:Add(openForReadCode)
//        p7:AddText(" action on your ")
//        p7:Add(fileReaderCode)
//        p7:AddText(" objects.")
//        openQuestionsIDE:SetIDESubtitle(p7)
//        openQuestionsIDE:Setup()
//        bodyDiv:Add(openQuestionsIDE)
        Paragraph activity3Paragraph
        Bold activity3Bold
        activity3Bold:AddText("Activity 3: Open the questions and answers files for read using the ")
        activity3Bold:Add(openForReadCode)
        activity3Bold:AddText(" action on your ")
        activity3Bold:Add(fileReaderCode)
        activity3Bold:AddText(" objects.")
        activity3Paragraph:Add(activity3Bold)
        bodyDiv:Add(activity3Paragraph)


        Paragraph p8
        CodeBlock readCode
        CodeBlock readLineCode
        CodeBlock readLinesCode
        CodeBlock isAtEndOfFileCode
        CodeBlock trueCode
        CodeBlock falseCode
        readCode:AddText( "Read" )  
        readLineCode:AddText( "ReadLine" )  
        readLinesCode:AddText( "ReadLines" )  
        isAtEndOfFileCode:AddText( "IsAtEndOfFile" )  
        trueCode:AddText( "true" )  
        falseCode:AddText( "false" )  
        p8:AddText("Now, your file is open and ready to read. 
                    There are many options for actions to read your file. 
                    The ")
        p8:Add(readCode)
        p8:AddText(" action reads and returns the entire contents of the file. The ")
        p8:Add(readLineCode)
        p8:AddText(" action reads and returns a single line from the file. The ") 
        p8:Add(readLinesCode)
        p8:AddText(" action reads and returns all the remaining lines of the file starting from the current position. 
                    You can know if you have read the entire file or not by calling the ")  
        p8:Add(isAtEndOfFileCode)
        p8:AddText(" action. This action returns ")  
        p8:Add(trueCode)
        p8:AddText(" if the end of the file has been reached and ") 
        p8:Add(falseCode)
        p8:AddText(" otherwise.")        
        bodyDiv:Add(p8)


        bodyDiv:Add(break)

        Paragraph example2Paragraph
        Bold example2Bold
        CodeBlock questionsReaderCode
        questionsReaderCode:AddText( "questionsReader" ) 
        example2Bold:AddText("Example: Use the ")
        example2Bold:Add(questionsReaderCode)
        example2Bold:AddText(" object to read the questions file one line at a time into the questions array until the end of the file has been reached.")
        example2Paragraph:Add(example2Bold)
        bodyDiv:Add(example2Paragraph)

        CodeBlock example2Code
        Span s4
        Span s5
        Span s6
        Span s7
        Span s8
        s4:AddText(     "// This line initially reads the file. This is needed before calling the " + cr 
                    +   "// IsAtEndOfFile action" + cr  )
        s4:SetClassAttribute("comment")
        example2Code:Add(s4)
        example2Code:AddText(   "text question = questionsReader:ReadLine()" + cr + cr )
        s5:AddText(     "// this line adds the question we just read into the questions Array" + cr )
        s5:SetClassAttribute("comment")
        example2Code:Add(s5)
        example2Code:AddText(   "questions:Add(question)" + cr + cr )
        s6:AddText(     "// this repeat statement reads the rest of the file until the end of the file is" + cr 
                    +   "// reached" + cr )
        s6:SetClassAttribute("comment")
        example2Code:Add(s6)
        example2Code:AddText(   "repeat until questionsReader:IsAtEndOfFile()" + cr + cr )
        s7:AddText(     "   // this line reads in another line from the file" + cr )
        s7:SetClassAttribute("comment")
        example2Code:Add(s7)
        example2Code:AddText(   "   question = questionsReader:ReadLine()" + cr + cr )
        s8:AddText(     "   // this line adds the question we just read into the questions Array" + cr )
        s8:SetClassAttribute("comment")
        example2Code:Add(s8)
        example2Code:AddText(   "   questions:Add(question)" + cr 
                            +   "end" )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example2Code))

        bodyDiv:AddParagraph("The answers file is read in the exact same way.")

//        SideBySideIDE closeIDE
//        closeIDE:SetUniqueIdentifier("close")
//        closeIDE:Setup()
//        closeIDE:GetIDETitle():AddText("Activity: Close the FileReader objects.")
//        closeIDE:GetIDESubtitle():AddText(" ")
//        bodyDiv:Add(closeIDE)
        Paragraph activity4Paragraph
        Bold activity4Bold
        activity4Bold:AddText("Activity 4: Close the ")
        activity4Bold:Add(fileReaderCode)
        activity4Bold:AddText(" objects.")
        activity4Paragraph:Add(activity4Bold)
        bodyDiv:Add(activity4Paragraph)

       

        Paragraph p9
        CodeBlock closeCode
        closeCode:AddText( "Close" )   
        p9:AddText("Once you have read the contents of your questions and answers files into their respective arrays, you are done with those files and ")
        p9:Add(fileReaderCode)
        p9:AddText(" objects. In Quorum, once you are done using a file that you have opened in your program, you need to tell Quorum that you are done with it and that it is okay to close the file. You can do this by calling the ")
        p9:Add(closeCode)
        p9:AddText(" action on your ") 
        p9:Add(fileReaderCode)
        p9:AddText(" objects.")        
        bodyDiv:Add(p9)


        bodyDiv:AddHeading("Goal 2: Using Control Structures", 2)
        Paragraph p10
        CodeBlock inputCode
        CodeBlock trimCode
        inputCode:AddText( "input" )   
        trimCode:AddText( "Trim" )   
        p10:AddText("Once the program has read all of the questions and answers, it should start the game. Your program should output all of the questions and ask the user for answers. The user input is captured using the ")
        p10:Add(inputCode)
        p10:AddText(" command. The user input should be checked against the answer, and if the answer is correct, a sound should be played. If the answer is not correct, a different sound should be played. For the convenience of whoever is playing your game, you may want to ignore any whitespace before and after their answer. Calling the ")
        p10:Add(trimCode)
        p10:AddText(" action on the text they inputted will accomplish this.")        
        bodyDiv:Add(p10)


        bodyDiv:Add(break)

        bodyDiv:AddHeading("Example: Repeatedly ask the user questions and get their answers, checking the userâs entered answer against the correct answer. If the user is correct, output a message and play a sound. If the user is incorrect, output a different message and play a different sound.", 4)

        CodeBlock example3Code
        Span s9
        Span s10
        Span s11
        Span s12
        Span s13
        Span s14
        Span s15
        Span s16
        example3Code:AddText(   "integer counter = 0        " )
        s9:AddText(     "   // this variable keeps track of where we are in our arrays" + cr + cr 
                    +   "// the GetSize action returns the number of elements in an array. We want to" + cr 
                    +   "// go through each element in the array in order to ask each question." + cr )
        s9:SetClassAttribute("comment")
        example3Code:Add(s9)
        example3Code:AddText(   "repeat questions.GetSize() times" + cr )
        s10:AddText(    "  // the Get action returns the element in the array at the passed integer" + cr 
                    +   "   // index. Counter is the variable we use to keep track of where we are in" + cr 
                    +   "   // the array" + cr )
        s10:SetClassAttribute("comment")
        example3Code:Add(s10)
        example3Code:AddText(   "   output questions:Get(counter)" + cr + cr )
        s11:AddText(    "  // this line gets the userâs input (i.e., their guess)" + cr )
        s11:SetClassAttribute("comment")
        example3Code:Add(s11)
        example3Code:AddText(   "   text guess = input() " + cr + cr )
        s12:AddText(     "   // this line gets the correct answer to the question from the answers array" + cr )
        s12:SetClassAttribute("comment")
        example3Code:Add(s12)
        example3Code:AddText(   "  text correctAnswer = answers:Get(counter)" + cr + cr )
        s13:AddText(     "   // this if statement checks the userâs input against the answer to the" + cr 
                    +   "   // question. The EqualsIgnoringCase action will return true if the userâs" + cr 
                    +   "   // guess is the same as the answer ignoring upper/lowercase." + cr )
        s13:SetClassAttribute("comment")
        example3Code:Add(s13)
        example3Code:AddText(   "   if guess:EqualsIgnoringCase(correctAnswer)" + cr )
        s14:AddText(     "      // output correct message" + cr 
                    +   "       // play correct sound" + cr )
        s14:SetClassAttribute("comment")
        example3Code:Add(s14)
        example3Code:AddText(   "   else" + cr )
        s15:AddText(     "      // output incorrect message" + cr 
                    +   "       // play incorrect sound" + cr )
        s15:SetClassAttribute("comment")
        example3Code:Add(s15)
        example3Code:AddText(   "   end" + cr + cr )
        s16:AddText(     "  // this line updates the counter variable so that we can get the next" + cr 
                    +   "   // element in the arrays" + cr )
        s16:SetClassAttribute("comment")
        example3Code:Add(s16)
        example3Code:AddText(   "   counter = counter + 1" + cr 
                            +   "end" )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example3Code))


        bodyDiv:AddParagraph("Once the user has answered all of the questions, you should output a message that informs them that the game is over.")


        Paragraph p11
        CodeBlock sayCode
        sayCode:AddText( "say" )   
        p11:AddText("Optionally, you may add more sound events to your game or use the Quorum ")
        p11:Add(sayCode)
        p11:AddText(" keyword to have the program read your questions to the user out loud.")        
        bodyDiv:Add(p11)



        bodyDiv:AddHeading("Sample Output", 2)

        bodyDiv:AddParagraph("Because the students create their own questions, the output will vary. Here is one example:")




        CodeBlock example4Code
        example4Code:AddText(   "What statement in Quorum would you use to execute code only under certain conditions?" + cr 
                            +   "if" + cr 
                            +   "You are correct!" + cr + cr
                            +   "What is the name of the type in Quorum that stores numbers with decimal points?" + cr 
                            +   "number" + cr 
                            +   "You are correct!" + cr + cr 
                            +   "What is the name of the type in Quorum that stores whole numbers?" + cr 
                            +   "integer" + cr 
                            +   "You are correct!" + cr + cr 
                            +   "What is the name of the type in Quorum that stores words?" + cr 
                            +   "text" + cr 
                            +   "You are correct!" + cr + cr 
                            +   "Which keyword in Quorum allows you to perform tasks over and over again?" + cr 
                            +   "repeat" + cr 
                            +   "You are correct!" + cr + cr 
                            +   "What is the name of the type in Quorum that stores values that are either true or false?" + cr 
                            +   "boolean" + cr 
                            +   "You are correct!" + cr + cr 
                            +   "What do you call a statement that is ignored by the compiler?" + cr 
                            +   "comment" + cr 
                            +   "You are correct!" + cr + cr 
                            +   "What is the keyword that allows you to include a library in your Quorum project?" + cr 
                            +   "use" + cr 
                            +   "You are correct!" + cr + cr 
                            +   "EGame Over. You got 8/8 questions right!" + cr 
                            +   "Thanks for playing!" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example4Code))


        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)


    end

    action GetMetaDescription returns text
        return "Learn about control structures and reading files by coding an audio trivia game in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Challenge (Trivia Challenge - Audio)"
    end
    action GetName returns text
        return "Challenge 3.2"
    end
    action GetShortDescription returns text
        return "how to do the Trivia Challenge - Audio in Quorum."
    end

    action GetLocation returns text
      if GetNewLocation() not= ""
        return GetNewLocation()
      end
      return "lessons/chapter3/challenge3_2.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Control Structures"
    end
end