use Libraries.Web.Page.all
use Libraries.System.File
use Libraries.Containers.Array

class Challenge3_4 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Challenge 3.4: Robots - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
         Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
         Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Challenge 3.4: Robots", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Challenge 3.4: Robots")
        AddToHeadingArray(h_heading)

        bodyDiv:Add(headDiv)
        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Robot", 2)
        

        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("In this challenge you will practice the following computer science concepts in a team or small group environment:")
        
        UnorderedList goalsList
        goalsList:AddClassAttribute("list-disc list-outside pl-8")
        goalsList:AddListItem("Creating Objects")
        goalsList:AddListItem("Using conditional statements and looping statements")
        section_intro:Add(goalsList)


        AddHeading(section_intro, "Computer Science Principles Curriculum", 3)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.2, LO 1.2.3, EK 1.2.3A, EU 1.3, LO 1.3.1, EK 1.3.1A")
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EU 4.1, LO 4.1.1, EK 4.1.1B")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.1, LO 5.1.1, EK 5.1.1B, EU 5.2, LO 5.2.1, EK 5.2.1C, EK 5.2.1D")
        section_intro:Add(list)

       AddHeading(section_intro, "Common Core Standards", 3)
        UnorderedList ccList
        ccList:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards » Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.9-10.1, CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.8, CCSS.ELA-Literacy.RST.9-10.9")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8, CCSS.Math.Content.HSF.IF.A.1  ")
        section_intro:Add(ccList)

        AddHeading(section_intro, "Vocabulary", 3)
        UnorderedList vocabularyList
        vocabularyList:AddClassAttribute("list-disc list-outside pl-8")
        vocabularyList:AddListItem("Control Structures")
        vocabularyList:AddListItem("If Statement")
        vocabularyList:AddListItem("Loops")
        vocabularyList:AddListItem("Input Manager")
        vocabularyList:AddListItem("Infrared Sensor")
        section_intro:Add(vocabularyList)


               Section section_overview
        section_overview:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_overview)
        AddHeading(section_overview, "Overview", 2)
        

        Paragraph p0 
        CodeBlock motorMiniCode
        CodeBlock infraredSensorMiniCode
        motorMiniCode:AddText("motor")
        infraredSensorMiniCode:AddText("infraredSensor")
        CodeBlock infraredSensorCode
        CodeBlock motorCode
        CodeBlock legoCode
        infraredSensorCode:AddText("InfraredSensor")
        motorCode:AddText("Motor")
        p0:AddText("This challenge will use the ")
        p0:Add(infraredSensorCode)
        p0:AddText(" Library. You will use conditions with the Infrared Sensor in order to avoid the wall.")
        section_overview:Add(p0)  

        AddHeading(section_overview, "Goal 1: Creating Objects", 3)
    

        Paragraph p1
        
        legoCode:AddText("Lego")
        p1:AddText("Create a new Robot project. Name it properly and open the main.quorum file. In the top of the file, type the appropriate code to use the Quorum ") 
        p1:Add(infraredSensorCode)
        p1:AddText(" and ") 
        p1:Add(motorCode)
        p1:AddText(" libraries inside the ") 
        p1:Add(legoCode)
        p1:AddText(" library.")        
        section_overview:Add(p1)

//        SideBySideIDE instantiateObjectsIDE
//        instantiateObjectsIDE:SetUniqueIdentifier("instantiateObjects")
//        instantiateObjectsIDE:Setup()
//        instantiateObjectsIDE:GetIDETitle():AddText("Activity 1: Instantiate the Motor and the InfraredSensor objects.")
//        instantiateObjectsIDE:GetIDESubtitle():AddText(" ")
//        section_overview:Add(instantiateObjectsIDE)
        Paragraph activity1Paragraph
        Bold activity1Bold
        activity1Bold:AddText("Activity 1: Instantiate the Motor and the ")
        activity1Bold:Add(infraredSensorCode)
        activity1Bold:AddText(" objects.")
        activity1Paragraph:Add(activity1Bold)
        section_overview:Add(activity1Paragraph)


        Paragraph p2
        p2:AddText("Call the " )
        p2:Add(motorCode)
        p2:AddText(" object " )
        p2:Add(motorMiniCode)
        p2:AddText(" and the ")  
        p2:Add(infraredSensorCode)
        p2:AddText(" object " )
        p2:Add(infraredSensorMiniCode)
        p2:AddText(".")  
        section_overview:Add(p2)



        Paragraph p3
        CodeBlock setPortCode
        setPortCode:AddText("SetPort")
        p3:AddText("Now you must set the port to work with. That will be the port that the Infrared Sensor is connected to on the robot. You will do that using the ")
        p3:Add(setPortCode)
        p3:AddText(" statement.")        
        section_overview:Add(p3)


        
          Section section_lesson
        section_lesson:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_lesson)
        AddHeading(section_lesson, "Example: Set the port your Infrared Sensor is connected to", 2)
       

        CodeBlock example1Code
        Span s1
        s1:AddText(     "// This line of code will set the port that your robot will work with" + cr  )
        s1:SetClassAttribute("comment")
        example1Code:Add(s1)
        example1Code:AddText(   "infraredSensor:SetPort(4) " )
        section_lesson:Add(preformatter:GeneratePreformattedCode(example1Code))

        section_lesson:AddParagraph("After that you should set the speed of the motors, so despite any condition the motors will work at this speed when they’re active.")


//        SideBySideIDE writeCodeIDE
//        writeCodeIDE:SetUniqueIdentifier("writeCode")
//        writeCodeIDE:Setup()
//        writeCodeIDE:GetIDETitle():AddText("Activity 1: Write the proper code to set the speed of the motors B and C.")
//        writeCodeIDE:GetIDESubtitle():AddText(" ")
//        section_lesson:Add(writeCodeIDE)

        Paragraph activity2Paragraph
        Bold activity2Bold
        activity2Bold:AddText("Activity 2: Write the code to set the speed of motors B and C.")
        activity2Paragraph:Add(activity2Bold)
        section_lesson:Add(activity2Paragraph)


        //section_lesson:AddParagraph("You should start the looping condition:")

        CodeBlock example2Code
        Span s2
        s2:AddText(     "//This line is a looping condition; once the condition doesn’t match anymore the program stops " + cr  )
        s2:SetClassAttribute("comment")
        example1Code:Add(s2)
        example1Code:AddText(   "repeat while true " )
        section_lesson:Add(preformatter:GeneratePreformattedCode(example2Code))

        AddHeading(section_lesson, "Goal 2: Using conditional and looping statements", 3)
   

        section_lesson:AddParagraph("The robot should go forward and, if the infrared sensor detects a wall, it will turn to the right first. If there is a free space the robot will move forward, but if there is also a wall after turning right, it will turn to the left and move forward. If there is also a the wall there, the robot will stop because it has nowhere to go!")

        Paragraph p4
        CodeBlock getDistanceCode
        getDistanceCode:AddText("GetDistance")
        p4:AddText("Let’s start with the conditions now. In order to get the distance between the robot and an obstacle you will use the ")
        p4:Add(getDistanceCode)
        p4:AddText(" command. To make sure we have enough space to turn, let’s use 25 cm as the maximum distance. ")        
        section_lesson:Add(p4)

        
         AddHeading(section_lesson, "Example: Create the conditions that will check the distance between the sensor and the wall and then make the robot move accordingly", 4)


        CodeBlock example3Code
        Span s3
        Span s4
        Span s5
        Span s6
        Span s7
        Span s8
        s3:AddText(     "//Before the conditions, to make it easier, let's set the distance values the sensor will take" + cr  )
        s3:SetClassAttribute("comment")
        example3Code:Add(s3)
        example3Code:AddText(   "distance = infraredSensor:GetDistance()" + cr )
        s4:AddText(     "//This line states that in case the distance is greater than 40 cm" + cr  )
        s4:SetClassAttribute("comment")
        example3Code:Add(s4)
        example3Code:AddText(   "if infraredSensor:GetDistance() > 40" + cr )
        s5:AddText(     "//the robot should move forward" + cr  )
        s5:SetClassAttribute("comment")
        example3Code:Add(s5)
        example3Code:AddText(   "motor:RotateBackward(" + dq + "B" + dq + ")" + cr 
                            +   "motor:RotateBackward(" + dq + "C" + dq + ")" + cr )
        s6:AddText(     "//This line states that in case the distance isn’t greater than 25 cm" + cr  )
        s6:SetClassAttribute("comment")
        example3Code:Add(s6)
        example3Code:AddText(   "else" + cr )
        s7:AddText(     "//the robot will stop and turn right" + cr  )
        s7:SetClassAttribute("comment")
        example3Code:Add(s7)
        example3Code:AddText(   "motor:Stop(" + dq + "B" + dq + ")" + cr 
                            +   "motor:Stop(" + dq + "C" + dq + ")" + cr 
                            +   "motor:RotateByDegrees(" + dq + "C" + dq + ", -655)" + cr 
                            +   "motor:Wait(" + dq + "C" + dq + ")" + cr )
        s8:AddText(     "//You will also use an if statement inside an if statement to measure the distance again after turning right" + cr  
                    +   "//This line of code will do that again" + cr )
        s8:SetClassAttribute("comment")
        example3Code:Add(s8)
        example3Code:AddText(   "distance = infraredSensor:GetDistance()" + cr )
        section_lesson:Add(preformatter:GeneratePreformattedCode(example3Code))


//        SideBySideIDE usingConditionsIDE
//        usingConditionsIDE:SetUniqueIdentifier("usingConditions")
//        usingConditionsIDE:Setup()
//        usingConditionsIDE:GetIDETitle():AddText("Activity 2 : Using if and else do the other conditions.")
//        usingConditionsIDE:GetIDESubtitle():AddText(" ")
//        section_lesson:Add(usingConditionsIDE)

        Paragraph activity3Paragraph
        Bold activity3Bold
        CodeBlock ifCode
        ifCode:AddText("if")
        CodeBlock elseCode
        elseCode:AddText("else")
        activity3Bold:AddText("Activity 3: Using  ")
        activity3Bold:Add(ifCode)
        activity3Bold:AddText(" and ")
        activity3Bold:Add(elseCode)
        activity3Bold:AddText(" statements, create the other conditions.")
        activity3Paragraph:Add(activity3Bold)
        section_lesson:Add(activity3Paragraph)


        Paragraph p5
        Bold ifBold
        Bold elseBold
        ifBold:AddText("If")
        elseBold:AddText("Else")
        p5:AddText("Don’t forget that you can (and in this case will need to) have an ")
        p5:Add(ifCode) 
        p5:AddText(" inside another. You’ll do these conditions now: ")
        p5:Add(ifBold)
        p5:AddText(" after the robot turns to the right, there is a free space, the robot should move forward. ")  
        p5:Add(elseBold)
        p5:AddText(" the robot should turn 180 degrees to the left. ")       
        p5:Add(ifBold)
        p5:AddText(" there is free space the robot should move forward. After these conditions we still need one more: in case the left also has a wall.")        
        section_lesson:Add(p5)

  
            AddHeading(section_lesson, "Example: Last condition: stop the motors", 4)


        section_lesson:AddHeading("Example: Last condition: stop the motors.", 4)

        CodeBlock example4Code
        Span s9
        Span s10
        Span s11
        s9:AddText(     "//This line of code states that in case there is no free space to the left " + cr  )
        s9:SetClassAttribute("comment")
        example4Code:Add(s9)
        example4Code:AddText(   "else" + cr )
        s10:AddText(     "//These lines will make the robot stop" + cr  )
        s10:SetClassAttribute("comment")
        example4Code:Add(s10)
        example4Code:AddText(   "motor:Stop(" + dq + "B" + dq + ")" + cr 
                            +   "motor:Stop(" + dq + "C" + dq + ")" + cr )
        s11:AddText(     "//These lines finish each one of the conditional (if) statements and the looping (repeat) statement" + cr  )
        s11:SetClassAttribute("comment")
        example4Code:Add(s11)
        example4Code:AddText(   "end" + cr 
                            +   "end" + cr 
                            +   "end" + cr 
                            +   "end" + cr )
        section_lesson:Add(preformatter:GeneratePreformattedCode(example4Code))

        section_lesson:AddParagraph("Hopefully your program is running great at this point! Run it and see if you get any errors. If you do, go back and fix them. Otherwise, you just finished your challenge! Congrats!")


  
        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about control structures and loops with LEGO Mindstorms robots in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Challenge (Robots)"
    end
    action GetName returns text
        return "Challenge 3.4"
    end
    action GetShortDescription returns text
        return "how Robots work in Quorum."
    end


        action GetLocation returns text
      if GetNewLocation() not= ""
        return GetNewLocation()
      end
      return "lessons/chapter3/challenge3_4.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Control"
    end
end