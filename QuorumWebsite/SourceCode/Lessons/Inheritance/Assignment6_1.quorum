use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header

class Assignment6_1 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Assignment 6.1: Using Derived Actions")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Assignment 6.1: Using Derived Actions", 1)
        headDiv:AddText("How to use actions we have inherited")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Objectives", 2)
        bodyDiv:AddParagraph("The goal of this assignment is to learn the following concepts:")
        UnorderedList unorderedList0
        bodyDiv:Add(unorderedList0)
        ListItem listItem1
        unorderedList0:Add(listItem1)
        listItem1:AddText("How to create inheritance")
        ListItem listItem2
        unorderedList0:Add(listItem2)
        listItem2:AddText("Creating class actions and using derived actions")
        ListItem listItem3
        unorderedList0:Add(listItem3)
        listItem3:AddText("How to work with source code in multiple files")
        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("In this assignment you will create a program that computes area, volume, and other geometric attributes for a variety of 2D and 3D shapes. To do this, you will create a class hierarchy through inheritance. Your base class, Shape, will have derived classes TwoDShape and ThreeDShape. TwoDShape will have derived classes Circle, Square, Triangle, and 3DShape will have derived classes Sphere, Cube, and Pyramid. Because the 2D shapes and 3D shapes require many of the same things to complete the area and volume formulas, you can use inheritance to reuse the same variables and actions, thus creating a more robust program. In computer science, a robust program is one that that will perform well under undesirable conditions, such as low memory, or receiving invalid input.")
        bodyDiv:AddHeading("Design Criteria", 2)
        UnorderedList unorderedList4
        bodyDiv:Add(unorderedList4)
        ListItem listItem5
        unorderedList4:Add(listItem5)
        listItem5:AddText("Create a new assignment and label it Assignment6_1")
        ListItem listItem6
        unorderedList4:Add(listItem6)
        listItem6:AddText("Create a source file named Shape.quorum")
        ListItem listItem7
        unorderedList4:Add(listItem7)
        listItem7:AddText("Create a source file named TwoDShape.quorum")
        ListItem listItem8
        unorderedList4:Add(listItem8)
        listItem8:AddText("Create a source file named ThreeDShape.quorum")
        ListItem listItem9
        unorderedList4:Add(listItem9)
        listItem9:AddText("Create a source file named Circle.quorum")
        ListItem listItem10
        unorderedList4:Add(listItem10)
        listItem10:AddText("Create a source file named Square.quorum")
        ListItem listItem11
        unorderedList4:Add(listItem11)
        listItem11:AddText("Create a source file named Triangle.quorum")
        ListItem listItem12
        unorderedList4:Add(listItem12)
        listItem12:AddText("Create a source file named Sphere.quorum")
        ListItem listItem13
        unorderedList4:Add(listItem13)
        listItem13:AddText("Create a source file named Cube.quorum")
        ListItem listItem14
        unorderedList4:Add(listItem14)
        listItem14:AddText("Create a source file named Pyramid.quorum")
        bodyDiv:AddHeading("Class Shape", 3)
        bodyDiv:AddParagraph("Class Shape will contain Getter and Setter actions for the following variables:")
        UnorderedList unorderedList15
        bodyDiv:Add(unorderedList15)
        ListItem listItem16
        unorderedList15:Add(listItem16)
        listItem16:AddText("number side - the length of a side of a square or cube.")
        ListItem listItem17
        unorderedList15:Add(listItem17)
        listItem17:AddText("number height - the height of a triangle")
        ListItem listItem18
        unorderedList15:Add(listItem18)
        listItem18:AddText("number radius - half the diameter of a circle")
        ListItem listItem19
        unorderedList15:Add(listItem19)
        listItem19:AddText("number base - the length of the base of a triangle")
        bodyDiv:AddParagraph("This class should also have a static variable, number pi = 3.1415.")
        bodyDiv:AddHeading("Class TwoDShape", 3)
        bodyDiv:AddParagraph("Class TwoDShape will contain actions that will ask for user input and use that input as the arguments for the Setter actions from base class Employee. Note: you will need to cast the input as type number, otherwise you will receive a compiler error.")
        bodyDiv:AddHeading("Class ThreeDShape", 3)
        bodyDiv:AddParagraph("Class ThreeDShape will do the same as class TwoDShape, except that the user should be queried to enter input for cube, pyramid, and sphere, instead of for square, triangle, and circle.")
        bodyDiv:AddHeading("Class Circle", 3)
        bodyDiv:AddParagraph("Class Circle is a derived class from class TwoDShape. It will have two actions:")
        PreformattedText pre20
        bodyDiv:Add(pre20)
        pre20:AddAttribute("class", "code")
        CodeBlock code21
        code21:AddText("action CalculateArea(number radius) returns number")
        pre20:Add(code21)
        bodyDiv:AddParagraph("and")
        PreformattedText pre22
        bodyDiv:Add(pre22)
        pre22:AddAttribute("class", "code")
        CodeBlock code23
        code23:AddText("action CalculateCircumference(number radius) returns number")
        pre22:Add(code23)
        bodyDiv:AddHeading("Class Square", 3)
        bodyDiv:AddParagraph("Class Square is a derived class from TwoDShape. It will have two actions:")
        PreformattedText pre24
        bodyDiv:Add(pre24)
        pre24:AddAttribute("class", "code")
        CodeBlock code25
        code25:AddText("action CalculateArea(number side) returns number")
        pre24:Add(code25)
        bodyDiv:AddParagraph("and")
        PreformattedText pre26
        bodyDiv:Add(pre26)
        pre26:AddAttribute("class", "code")
        CodeBlock code27
        code27:AddText("action CalculatePerimeter(number side) returns number")
        pre26:Add(code27)
        bodyDiv:AddHeading("Class Triangle", 3)
        bodyDiv:AddParagraph("Class Triangle is a derived class from TwoDShape. It will have one action:")
        PreformattedText pre28
        bodyDiv:Add(pre28)
        pre28:AddAttribute("class", "code")
        CodeBlock code29
        code29:AddText("action CalculateArea(number base, number height) returns number")
        pre28:Add(code29)
        bodyDiv:AddHeading("Class Cube", 3)
        bodyDiv:AddParagraph("Class Cube is derived from ThreeDShape. It will have two actions, one to calculate the volume of a cube, and one to calculate surface area of a cube.")
        bodyDiv:AddHeading("Class Sphere", 3)
        bodyDiv:AddParagraph("Class Sphere is derived from ThreeDShape. It will have two actions, one to calculate the volume of a sphere, and one to calculate the surface area of a sphere. Note: the variable pi that you made in class Shape can be accessed using the parent: keyword.")
        bodyDiv:AddHeading("Class Pyramid", 3)
        bodyDiv:AddParagraph("Class Pyramid is derived from ThreeDShape. It will have one action that calculates the volume of a pyramid.")
        bodyDiv:AddHeading("Class Main", 3)
        bodyDiv:AddParagraph("Class Main will have three actions. One will call all the actions from Circle, Square, and Triangle, and will report the calculations of each to the user. The second action will do the same as above, except will call the Sphere, Cube, and Pyramid actions, and report those calculations to the user. The third is action Main, which will call the previous two actions. When run, the program should prompt the user to input numbers for the variables created in class Shape. After receiving input, the program will do the various calculations, then output (say) the results to the user.")
        bodyDiv:AddHeading("Sample Output", 2)
        bodyDiv:AddParagraph("Report the calculations from all six classes. For example, the actions from Circle, Square, and Triangle may look similar to this:")
        PreformattedText pre30
        bodyDiv:Add(pre30)
        pre30:AddAttribute("class", "code")
        CodeBlock code31
        code31:AddText(
"The area of a square with side lengths of 5 is 25
The perimeter of a square with side lengths of 5 is 20
The area of a triangle with a base of 10 and a height of 5 is 25
The area of a circle with radius of 10 is 314
The circumference of a circle with a diameter of 10 is 31")
        pre30:Add(code31)
        bodyDiv:AddHeading("Relevant Formulas", 2)
        UnorderedList unorderedList32
        bodyDiv:Add(unorderedList32)
        ListItem listItem33
        unorderedList32:Add(listItem33)
        listItem33:AddText("Area of a square: side * side")
        ListItem listItem34
        unorderedList32:Add(listItem34)
        listItem34:AddText("Area of a circle: pi * radius2")
        ListItem listItem35
        unorderedList32:Add(listItem35)
        listItem35:AddText("Circumference of a circle: pi * 2 * radius")
        ListItem listItem36
        unorderedList32:Add(listItem36)
        listItem36:AddText("Area of a triangle: 1/2base * height")
        ListItem listItem37
        unorderedList32:Add(listItem37)
        listItem37:AddText("Volume of a cube: side3")
        ListItem listItem38
        unorderedList32:Add(listItem38)
        listItem38:AddText("Surface area of a cube: 6 * side2")
        ListItem listItem39
        unorderedList32:Add(listItem39)
        listItem39:AddText("Volume of a sphere: 4/3 * pi * radius3")
        ListItem listItem40
        unorderedList32:Add(listItem40)
        listItem40:AddText("Surface area of a sphere: 4 * pi * radius2")
        ListItem listItem41
        unorderedList32:Add(listItem41)
        listItem41:AddText("Volume of a pyramid: 1/3 * (area of the base) * height")


        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetSummaryName returns text
        return "Using Derived Actions"
    end
    action GetName returns text
        return "Assignment 6.1"
    end
    action GetShortDescription returns text
        return "an introduction to using derived actions"
    end
    action GetLocation returns text
        return "lessons/chapter6/assignment6_1.html"
    end
end