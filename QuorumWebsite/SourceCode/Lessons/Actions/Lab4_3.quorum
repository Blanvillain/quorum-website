use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header

class Lab4_3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Lab 4.3:  Robotic Actions")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Lab 4.3: Robotic Actions", 1)
        headDiv:AddText("Using Actions with Robots")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("In this lab, we will learn the following computer science concepts:")
        UnorderedList unorderedList0
        bodyDiv:Add(unorderedList0)
        ListItem listItem1
        unorderedList0:Add(listItem1)
        listItem1:AddText("Creating actions")
        ListItem listItem2
        unorderedList0:Add(listItem2)
        listItem2:AddText("Using actions")

        bodyDiv:AddHeading("Computer Science Principles Curriculum", 2)

        UnorderedList list
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.2, LO 1.2.3, EK 1.2.3A, EU 1.3, LO 1.3.1, EK 1.3.1A")
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EU 4.1, LO 4.1.1, EK 4.1.1B")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.1, LO 5.1.1, EK 5.1.1B, EU 5.2, LO 5.2.1, EK 5.2.1C, EK 5.2.1D")
        bodyDiv:Add(list)

        bodyDiv:AddHeading("Common Core Standards", 2)
        UnorderedList ccList
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards Â» Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.9-10.1, CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.8, CCSS.ELA-Literacy.RST.9-10.9")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8, CCSS.Math.Content.HSF.IF.A.1  ")
        bodyDiv:Add(ccList)
        

        bodyDiv:AddHeading("Vocabulary", 2)
        UnorderedList unorderedList9
        bodyDiv:Add(unorderedList9)
        ListItem listItem10
        unorderedList9:Add(listItem10)
        listItem10:AddText("Actions")
        ListItem listItem11
        unorderedList9:Add(listItem11)
        listItem11:AddText("Color Sensor")
        ListItem listItem12
        unorderedList9:Add(listItem12)
        listItem12:AddText("Conditionals")
        ListItem listItem12a
        listItem12a:AddText("Control Structures")
        unorderedList9:Add(listItem12a)
        ListItem listItem13
        unorderedList9:Add(listItem13)
        listItem13:AddText("If Statement")
        ListItem listItem14
        unorderedList9:Add(listItem14)
        listItem14:AddText("Loops")
        ListItem listItem15
        unorderedList9:Add(listItem15)
        listItem15:AddText("Parameter")
        

        
        bodyDiv:AddHeading("Overview", 2)
        CodeBlock colorSensorCode
        CodeBlock actionColorCode
        CodeBlock colorObjectCode
        CodeBlock classMainCode
        CodeBlock mainCode
        colorSensorCode:AddText("ColorSensor")
        actionColorCode:AddText("action ColorSensor")
        colorObjectCode:AddText("colorSensor")
        classMainCode:AddText("class Main")
        mainCode:AddText("Main")
        bodyDiv:AddParagraph("This lab demonstrates how to create and use actions with robots. You will move the robot and use the Color Sensor to tell what color it is reading, indicating that on the screen and with different sounds.")
        Paragraph o1
        o1:AddText("First, open the provided template and click on the main.quorum file. You will see that the libraries are all declared and also a ")
        o1:Add(colorSensorCode)
        o1:AddText(" object called ")
        o1:Add(colorObjectCode)
        o1:AddText(". The ")
        o1:Add(colorSensorCode)
        o1:AddText(" object is before the action because all the objects that are going to be used in more than one action should be declared in the class before all the actions. Inside the ")
        o1:Add(classMainCode)
        o1:AddText(", is the action called ")
        o1:Add(mainCode)
        o1:AddText(" and two other actions that you are going to created.")
        bodyDiv:Add(o1)

        Paragraph activity1
        Bold activity1Bold
        CodeBlock motorCode
        CodeBlock soundCode
        CodeBlock screenCode
        motorCode:AddText("Motor")
        soundCode:AddText("Sound")
        screenCode:AddText("Screen")
        activity1Bold:AddText("Activity: Declare a ")
        activity1Bold:Add(motorCode)
        activity1Bold:AddText(", ")
        activity1Bold:Add(soundCode)
        activity1Bold:AddText(", ")
        activity1Bold:Add(screenCode)
        activity1Bold:AddText(" objects under the ")
        activity1Bold:Add(colorSensorCode)
        activity1Bold:AddText(" object." + cr)
        activity1:Add(activity1Bold)
        activity1:Add(break)
        activity1:AddText("You will use these objects later in your program.")
        bodyDiv:Add(activity1)


        bodyDiv:AddHeading("Goal 1: Creating actions", 3)
        bodyDiv:AddParagraph("The Main action is where the principal code is going to be, so we will leave it for after you've created the other two actions. We will start creating the second action, on line 21, that we will call Move and it will take two text parameters, that we will call motor1 and motor2.")
        bodyDiv:AddHeading("Example: Create the action Move and declare the parameters.", 4)
        CodeBlock example2
        Span e2a
        e2a:AddText(     "//This line will create an action called Move." + cr + "//The parentheses declare two parameters" + cr)
        e2a:SetClassAttribute("comment")
        example2:Add(e2a)
        example2:AddText(   "action Move(text motor1, text motor2)" + cr + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example2))

        Paragraph p1
        CodeBlock actionMoveCode
        actionMoveCode:AddText("action Move")
        p1:AddText("We will call this action to move the robot, so you will have to write the code to move the robot inside ")
        p1:Add(actionMoveCode)
        p1:AddText(".")
        bodyDiv:Add(p1)

        Paragraph activity2
        Bold activity2Bold
        CodeBlock rotateByCode
        rotateByCode:AddText("RotateByDegrees")
        activity2Bold:AddText("Activity: Write the proper code to move the robot forward.")
        activity2:Add(activity2Bold)
        activity2:Add(break)
        activity2:AddText("Use the ")
        activity2:Add(rotateByCode)
        activity2:AddText(" statement to move your robot.")
        bodyDiv:Add(activity2)

        bodyDiv:AddParagraph("The robot should stop before reading the color. Add this line to your action, so the program will wait for the motor to stop before continuing.")
        PreformattedText pre18
        bodyDiv:Add(pre18)
        pre18:AddAttribute("class", "code")
        CodeBlock code19
        code19:AddText("motor:Wait(motor1)")
        pre18:Add(code19)

        Paragraph p2
        p2:AddText("You have completed the first action. Let's create the ")
        p2:Add(actionColorCode)
        p2:AddText(". This action won't take a parameter.")
        bodyDiv:Add(p2)

        Paragraph activity3
        CodeBlock endCode
        endCode:AddText("end")
        Bold activity3Bold
        activity3Bold:AddText("Activity: Create ")
        activity3Bold:Add(actionColorCode)
        activity3Bold:AddText(".")
        activity3:Add(activity3Bold)
        activity3:Add(break)
        activity3:AddText("Create the action. Remember to use an ")
        activity3:Add(endCode)
        activity3:AddText(".")
        bodyDiv:Add(activity3)

        Paragraph p4
        CodeBlock getColorCode
        getColorCode:AddText("GetColor")
        p4:AddText("To read the colors using the Color Sensor we will need to use the ")
        p4:Add(getColorCode)
        p4:AddText(" command. Remember that the sensor can return only 8 colors options: none, black, white, brown, red, green, blue and yellow. In the example below you can see the first two conditional statements.")
        bodyDiv:Add(p4)

        Paragraph example4
        Bold example4Bold
        example4Bold:AddText("Example: Start the conditional statements.")
        example4:Add(example4Bold)
        bodyDiv:Add(example4)


        CodeBlock example4Code
        Span e4a
        Span e4b
        Span e4c
        Span e4d
        e4a:AddText(     "//This line gives the text returned from GetColor to the variable color" + cr)
        e4a:SetClassAttribute("comment")
        example4Code:Add(e4a)
        example4Code:AddText(   "text color = colorSensor:GetColor()" + cr)
        e4b:AddText(     "//This is the first conditional statement. It checks the color " + dq + "none." + dq + cr)
        e4b:SetClassAttribute("comment")
        example4Code:Add(e4b)
        example4Code:AddText("if color = " + dq + "none" + dq + cr +
                             "     sound:Buzz()" + cr +
                             "     screen:Output(" + dq + "No color read!" + dq + cr)
        e4c:AddText("//This line is a second conditional statement to check if the color is " + dq + "black" + dq + "." + cr)
        e4c:SetClassAttribute("comment")
        example4Code:Add(e4c)
        example4Code:AddText("elseif color = " + dq + "black" + dq + cr +
                             "     sound:PlayTone(20, 250)" + cr +
                             "     screen:Output(" + dq + "The color is:" + dq + " + color, 4)" + cr)
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example4Code))

        Paragraph activity4
        Bold activity4Bold
        CodeBlock elseifCode
        elseifCode:AddText("elseif")
        activity4Bold:AddText("Activity: Write six more conditional statements.")
        activity4:Add(activity4Bold)
        activity4:Add(break)
        activity4:AddText("Add ")
        activity4:Add(elseifCode)
        activity4:AddText(" statements for the six other color possibilities. Make each sound unique, and remember to output information to the screen. Also, remember to ")
        activity4:Add(endCode)
        activity4:AddText(" the conditional.")
        bodyDiv:Add(activity4)

        Paragraph activity5
        Bold activity5Bold
        CodeBlock utilityCode
        CodeBlock   setPortCode
        utilityCode:AddText("Utility")
        setPortCode:AddText("SetPort")
        activity5Bold:AddText("Activity: Create a ")
        activity5Bold:Add(utilityCode)
        activity5Bold:AddText(" object. Also use ")
        activity5Bold:Add(setPortCode)
        activity5Bold:AddText(" to set the Color Sensor.")
        activity5:Add(activity5Bold)
        bodyDiv:Add(activity5)
        
//        bodyDiv:Add(break)

        bodyDiv:AddHeading("Goal 2: Using actions", 3)

        Paragraph p5
        CodeBlock actionMainCode
        CodeBlock repeatCode
        actionMainCode:AddText("action Main")
        repeatCode:AddText("repeat")
        p5:AddText("Go to ")
        p5:Add(actionMainCode)
        p5:AddText(" to write the code to run the robot. You will use actions to make the robot move, stop, read and tell the color 5 times.")
        p5:Add(break)
        p5:AddText("To call an action, you write the action name with any parameters in the parentheses. If there are no parameters, you leve the parentheses empty. () Use the name of your ")
        p5:Add(motorCode)
        p5:AddText(" objects in the parentheses of the Move action. You can use a ")
        p5:Add(repeatCode)
        p5:AddText(" statement to simplify your program.")
        bodyDiv:Add(p5)

        Paragraph activity6
        Bold activity6Bold
        CodeBlock delayCode
        delayCode:AddText("DelayMilliseconds()")
        activity6Bold:AddText("Activity: Use actions to make the robot move, stop, read and report color five times.")
        activity6:Add(activity6Bold)
        activity6:Add(break)
        activity6:AddText("You may want to use the ")
        activity6:Add(utilityCode)
        activity6:AddText(" object with the ")
        activity6:Add(delayCode)
        activity6:AddText(" action to make your robot pause.")
        bodyDiv:Add(activity6)

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about actions while coding LEGO Mindstorms robots using the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Creating Actions with Robots"
    end
    action GetName returns text
        return "Lab 4.3"
    end
    action GetShortDescription returns text
        return "creating actions for robots."
    end
    action GetLocation returns text
        return "lessons/chapter4/lab4_3.html"
    end
end