use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header

class Lab5_1 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Lab 5.1:  Practicing Classes")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Lab 5.1: Practicing Classes", 1)
        headDiv:AddText("An Introduction to Classes and Objects")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("The goals of this lab are to learn the following:")
        UnorderedList unorderedList0
        bodyDiv:Add(unorderedList0)

        ListItem listItem3
        unorderedList0:Add(listItem3)
        listItem3:AddText("How to create a class")

        ListItem listItem1
        unorderedList0:Add(listItem1)
        listItem1:AddText("How to write actions for an existing class")
        ListItem listItem2
        unorderedList0:Add(listItem2)
        listItem2:AddText("How to understand class & action syntax")

        bodyDiv:AddHeading("Computer Science Principles Curriculum", 2)
        UnorderedList list
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", " EK 5.1.2B, EK 5.1.2E, EK 5.2.1F, EK 5.1.2J, EK 5.2.1C, EK 5.3.1D, EK 5.3.1I, EK 5.4.1")
        bodyDiv:Add(list)
        bodyDiv:AddHeading("Common Core Standards ", 2)
        UnorderedList ccList
        
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards Â» Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8")
        bodyDiv:Add(ccList) 


        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("In this lab you will learn about classes and how they can be used. You will start by looking at the code for a basic class named Animal. You will then code a few simple lines for the class and can then observe how you're able to change the class's attributes. The goal of this lab is to give you a foundation in classes needed for moving onto the next labs and subsequent programming assignments.")

        SideBySideIDE usersComputerIDE
        usersComputerIDE:SetUniqueIdentifier("lab5_1IDE")
        usersComputerIDE:Setup()
        usersComputerIDE:GetIDETitle():AddText("Activity:")
        usersComputerIDE:GetIDESubtitle():AddText("You can use this IDE (Integrated Development Environment) for all your coding in this lesson instead of using Sodbeans:")
        bodyDiv:Add(usersComputerIDE)

        bodyDiv:AddHeading("Task 1: Getting started", 2)
        bodyDiv:AddParagraph("First, start Sodbeans. You will create a new project; however, you will not be creating a blank application this time. Instead, in the New Project dialog, select " + dq + "Quorum Application." + dq + " You must select this option when using actions due to the way Quorum understands your programs. (We will discuss this later in Chapter 5). Name the project " + dq + "FunWithAnimals" + dq + ".")
        bodyDiv:AddParagraph("When your project opens in Sodbeans, main.quorum will contain the code listed below. You will be typing your code in two different locations--between action Main and the first end, and between class Main and the second end.")
        PreformattedText pre3
        bodyDiv:Add(pre3)
        pre3:AddAttribute("class", "code")
        CodeBlock code4
        code4:AddText(
"class Main
    action Main
    end
end")
        pre3:Add(code4)
        bodyDiv:AddHeading("Task 2: Creating Basic Actions", 2)
        bodyDiv:AddParagraph("First, you will create the foundation of your code.")
        PreformattedText pre5
        bodyDiv:Add(pre5)
        pre5:AddAttribute("class", "code")
        CodeBlock code6
        code6:AddText(
"class Animal
    action Main
    end
end")
        pre5:Add(code6)
        bodyDiv:AddParagraph("This sets your class name to Animal. Now you will code a few characteristics of animals. You will start with common things like number of arms, and the animal's color.")
        PreformattedText pre7
        bodyDiv:Add(pre7)
        pre7:AddAttribute("class", "code")
        CodeBlock code8
        code8:AddText(
"class Animal
    integer arms = 2
    text color = " + dq + "brown" + dq + "
    action Main
    end
end")
        pre7:Add(code8)
        bodyDiv:AddParagraph("So now your animal has two arms and is brown. From this point you want to output the animal's existing characteristics, so you are going to put an output line in Main that has some text in it, as well as the variables you just coded. We have coded the output statement to show the number of arms the animal has, but it's your job to code the output statement for it's color.")
        PreformattedText pre9
        bodyDiv:Add(pre9)
        pre9:AddAttribute("class", "code")
        CodeBlock code10
        code10:AddText(
"class Animal
    integer arms = 2
    text color = " + dq + "brown" + dq + "
    action Main
        output " + dq + "The animal has " + dq + " + arms + " + dq + " arms." + dq + "
    end
end")
        pre9:Add(code10)
        bodyDiv:AddParagraph("So now you're telling the user a few things about your animal. Add legs and adjust your output statement as well.")
        bodyDiv:AddParagraph("But what if the user would like to change the animal?")
        bodyDiv:AddParagraph("Next you're going to code a few actions for your class that will change the variables. These are called methods when they're actions for a class, and they're an integral part of class development.")
        bodyDiv:AddParagraph("Reusability is a fundamental part of programming, so you're going to move the output statements into their own method (called actions in Quorum), called Display. The skeleton code is provided for you. Don't forget to call the Display method once you're finished.")
        PreformattedText pre11
        bodyDiv:Add(pre11)
        pre11:AddAttribute("class", "code")
        CodeBlock code12
        code12:AddText(
"class Animal
    integer arms = 2
    text color = " + dq + "brown" + dq + "
    action Main
        output " + dq + "The animal has " + dq + " + arms + " + dq + " arms and " + dq + " + legs + " + dq + " legs." + dq + "
    end
    action Display
    end
end")
        pre11:Add(code12)
        bodyDiv:AddParagraph("So now your program has the same functionality as before, but it's been decomposed into a method. One great benefit of this is that you're able to reuse that method now, without having to type it all out again. Reusability is a big time-saver and really simplifies your program.")
        bodyDiv:AddParagraph("The next thing that you're going to do is create three more methods that change the characteristics of the animal. This way the user can create their own animal with any number of legs, arms, and color.")
        bodyDiv:AddParagraph("So you're going to name the actions " + dq + "Change(NameOfAttribute)" + dq + "...ChangeArms for example. Inside these actions you're going to ask the user to enter a number or text. Then you're going to reassign the already created variables to what the user entered. Before you can do that though you have to cast the user's entry from a text to an integer.")
        bodyDiv:AddParagraph("You also need to be sure that you call those actions from within the Main.")
        bodyDiv:AddParagraph("One action is provided for you. It's your job to write the other actions that will allow the user to change the animal's color and legs.")
        bodyDiv:AddParagraph("Once you're finished with writing those actions you should call the Display method again so the user can see that the changes made have been saved.")
        PreformattedText pre13
        bodyDiv:Add(pre13)
        pre13:AddAttribute("class", "code")
        CodeBlock code14
        code14:AddText(
"class Animal
    integer arms = 2
    text color = " + dq + "brown" + dq + "
    action Main
    end
    action Display
    end
    action ChangeArms
        output " + dq + "How many arms would you like your animal to have?" + dq + "
        text result = input(" + dq + "Number of Arms" + dq + ")
        integer v = cast(integer, result)
        arms = v
    end
    action ChangeColor
    end
end")
        pre13:Add(code14)
        bodyDiv:AddParagraph("From this foundation you should be able to code a few more characteristics, and a few more actions. Most animals have legs, so let's add a legs variable similar to your arm variable if you haven't already. Let's also add a variable so you can give your animal a name like " + dq + "Fido." + dq + " Don't forget to add actions that allow the user to change those variables as well.")
        bodyDiv:AddParagraph("So by the time you're finished you should have 4 variables: arms, legs, name, and color. It should also have these 5 actions: " + dq + "Display" + dq + ", " + dq + "ChangeArms" + dq + ", " + dq + "ChangeLegs" + dq + ", " + dq + "ChangeColor" + dq + ", and " + dq + "ChangeName" + dq + ".")



        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about classes and abstraction with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Introducing Classes"
    end
    action GetName returns text
        return "Lab 5.1"
    end
    action GetShortDescription returns text
        return "an introduction to classes and objects."
    end
    action GetLocation returns text
        return "lessons/chapter5/lab5_1.html"
    end
end