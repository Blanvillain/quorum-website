use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header

class Assignment5_3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Assignment 5.3: Arrays and Student Grades")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Assignment 5.3: Arrays and Student Grades", 1)
        headDiv:AddText("Store student grades in an array")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("The goals of this assignment are to learn the following:")
        UnorderedList unorderedList0
        bodyDiv:Add(unorderedList0)
        ListItem listItem1
        unorderedList0:Add(listItem1)
        listItem1:AddText("How to instantiate an Array data structure")
        ListItem listItem2
        unorderedList0:Add(listItem2)
        listItem2:AddText("How to create, add, and get items in an array")
        ListItem listItem3
        unorderedList0:Add(listItem3)
        listItem3:AddText("How to use Arrays as parameters")
        ListItem listItem4
        unorderedList0:Add(listItem4)
        listItem4:AddText("How to design and use classes")

        bodyDiv:AddHeading("Computer Science Principles Curriculum", 2)
        UnorderedList list
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EK 4.1.1A, EK 4.1.1B, EK 4.1.1C, EK 4.1.1D, EK 4.1.1E, EK 4.1.1F, EK 4.1.1G, EK 4.1.1H, EK 4.2.1A, EK 4.2.1B")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EK 5.1.2A, EK 5.1.2B, EK 5.2.1A, EK 5.2.1B, EK 5.2.1C, EK 5.2.1D, EK 5.2.1E, EK 5.5.1A, EK 5.5.1D")
        bodyDiv:Add(list)

        bodyDiv:AddHeading("Common Core Standards", 2)
        UnorderedList ccList
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards » Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.10, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.11-12.4, CCSS.ELA-Literacy.RST.11-12.5, CCSS.ELA-Literacy.RST.11-12.10")
        AddListItemWithBoldAtFront(ccList, "Mathematics Content: High School Functions » Building Functions: ", "CCSS.Math.Content.HSF.BF.1A")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP4, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8")
        bodyDiv:Add(ccList) 

        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("In the StudentGrades application you will practice storing values in arrays and continue practicing object-oriented programming. First create a Quorum class named Student under the 'New File' menu option. You will also need a new blank application with your main.quorum file. In this class you will store the name of the student, the max possible score the student can get, and an array of scores the student has received on assignments. For this project you will assume each student only has 5 scores, each worth 100 points. This means the max possible score is 500 points. In addition to these class variables you will need to define the following actions in the Student class:")
        CodeBlock code6
        code6:AddText(
"use Libraries.Containers.Array
class Student 
    //define class variables here

    //sets the student name
    action SetName(text name)
    end

    //get the student name
    action GetName returns text
    end

    //set the scores for the student
    action SetScores(Array<integer> scores)
    end

    //Returns the students overall grade in the class
    //An A is 90 to 100 percent, a B is 80 to 89 percent,
    //a C is 70 to 79 percent, a D is 60 to 69 percent, and
    //an F is anything lower than 60 percent
    action GetFinalGrade returns text
        return " + dq + "" + dq + "
    end

    //a private action to help you calculate the total points
    //a student has (stored in the scores array).
    private action GetPointTotal returns number
        integer totalPoints = 0
        //your code here
        return totalPoints
    end

    //a private action that gets the final percentage a student
    //has in the class (their total points/ max points possible).
    private action GetFinalPercentage returns number
        number value = 0
        return value
    end
end")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(code6))
        bodyDiv:AddParagraph("In main.quorum you will need to define two arrays: one to store Student objects and another to store grades, an integer. Once you have defined these arrays you can start to construct each student and their grades. Define two students with the names and grades listed below:")
        bodyDiv:AddParagraph("Students")
        UnorderedList grades
        grades:AddListItem("Jenny: 92,100, 95, 88, 79")
        grades:AddListItem("John: 73, 91, 87, 88, 95")
        bodyDiv:Add(grades)

        bodyDiv:AddParagraph("Once this information is stored you can loop through the Array of students and output some basic information. The program should produce output that does the following:")
        UnorderedList unorderedList7
        bodyDiv:Add(unorderedList7)
        ListItem listItem8
        unorderedList7:Add(listItem8)
        listItem8:AddText("Get the student from the array.")
        ListItem listItem9
        unorderedList7:Add(listItem9)
        listItem9:AddText("Output or say the student name and the array index the student was found at.")
        ListItem listItem10
        unorderedList7:Add(listItem10)
        listItem10:AddText("Calculate the student's grade.")
        ListItem listItem11
        unorderedList7:Add(listItem11)
        listItem11:AddText("Output or say the grade of the student")
        bodyDiv:AddHeading("Sample Output", 2)
        PreformattedText pre12
        bodyDiv:Add(pre12)
        pre12:AddAttribute("class", "code")
        CodeBlock code13
        code13:AddText(
"student jenny is at array index 0
jenny's grade is a A
student john is at array index 1
john's grade is a B")
        pre12:Add(code13)
        bodyDiv:AddHeading("Design Criteria", 2)
        UnorderedList unorderedList14
        bodyDiv:Add(unorderedList14)
        ListItem listItem15
        unorderedList14:Add(listItem15)
        listItem15:AddText("Create a new project and name it StudentGrades.")
        ListItem listItem16
        unorderedList14:Add(listItem16)
        listItem16:AddText("There should be a total of 2 files: ")
        UnorderedList unorderedList17
        listItem16:Add(unorderedList17)
        ListItem listItem18
        unorderedList17:Add(listItem18)
        listItem18:AddText("main.quorum")
        ListItem listItem19
        unorderedList17:Add(listItem19)
        listItem19:AddText("Student.quorum")
        ListItem listItem20
        unorderedList14:Add(listItem20)
        listItem20:AddText("Each file should have the corresponding class defined in the file.")
        ListItem listItem21
        unorderedList14:Add(listItem21)
        listItem21:AddText("Use appropriate variables to store and keep track of values (including class variables).")
        ListItem listItem22
        unorderedList14:Add(listItem22)
        listItem22:AddText("You should implement each action given in the assignment specification.")

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Code a lesson on using data in arrays, an in-memory container, using the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Using Arrays for Storage in Memory"
    end

    action GetName returns text
        return "Assignment 5.3"
    end

    action GetShortDescription returns text
        return "a practice session on using arrays to store student grades"
    end

    action GetLocation returns text
        return "lessons/chapter5/assignment5_3.html"
    end
end