use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header


class Challenge2_4 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Challenge 2.4: Choose your own pattern - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Challenge 2.4: Choose your own pattern", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("In this assignment you will practice the following computer science concepts in a team or small group environment:")
        
        UnorderedList goalsList
        goalsList:AddListItem("Calling Actions on Objects")
        goalsList:AddListItem("Using the Quorum Lego Library to move the robot, play sounds and turn on the L.E.D.")
        goalsList:AddListItem("Practice solving technical problems together in a group.")
        bodyDiv:Add(goalsList)

        bodyDiv:AddHeading("Computer Science Principles Curriculum", 2)

        UnorderedList list
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.1, LO 1.1.1, EK 1.1.1B, EU 1.2, LO 1.2.1, EK 1.2.1E, EK 1.2.4 A,C,D")
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EU 4.1, LO 4.1.1, EK 4.1.1H")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.1, LO 5.1.2, EK 5.1.2I")
        bodyDiv:Add(list)

        bodyDiv:AddHeading("Common Core Standards", 2)
        UnorderedList ccList
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards Â» Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.10, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.11-12.4, CCSS.ELA-Literacy.RST.11-12.5, CCSS.ELA-Literacy.RST.11-12.10")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP4, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8")
        bodyDiv:Add(ccList) 


        bodyDiv:AddHeading("Overview", 2)

        bodyDiv:AddParagraph("In this challenge students will move their robot through an obstacle course of thier own creation while meeting certain minimum requirements.")

        bodyDiv:AddHeading("Goal 1: Learn how to play a .WAV file on the robot.", 2)

        bodyDiv:AddParagraph("In order to play a .WAV file on your computer, follow these instructions:")

        OrderedList ol
        ListItem li1
        ListItem li2
        ListItem li3
        li1:AddText("Instantiate a sound object as you've learned in previous lessons.")
        li2:AddText("Upload a .WAV file to the SD card on the robot.")
        li3:AddText("Use the PlayAudio action to play a wave file")
        ol:Add(li1)
        ol:Add(li2)
        ol:Add(li3)
        bodyDiv:Add(ol)

        bodyDiv:AddParagraph("Use this code template for your file, changing the path name to the location of the .WAV file on your PC. 
                            In this example, our WAV file is located in a directory called " + dq + "assets" + dq + " in our main project folder.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Robots.Lego.Sound" + cr 
                                                        + "use Libraries.System.File" + cr + cr
                                                        + "Sound soundCtrl" + cr 
                                                        + "File soundFile" + cr + cr
                                                        + "soundFile:SetPath(" + dq + "assets/" + dq + ")" + cr 
                                                        + "soundCtrl:PlayAudio(soundFile)" + cr ))


        Paragraph p1
        CodeBlock rotateToDegreeCode
        CodeBlock rotateByDegreesCode
        rotateToDegreeCode:AddText("RotateToDegree")
        rotateByDegreesCode:AddText("RotateByDegrees")
        p1:AddText("In your pattern, you must use at least one ")
        p1:Add(rotateToDegreeCode)
        p1:AddText(" statement and one ")
        p1:Add(rotateByDegreesCode)
        p1:AddText(" statement. You can combine them as you want to what better fits your pattern.")
        bodyDiv:Add(p1)


        bodyDiv:Add(break)

        bodyDiv:AddHeading("Example: One way to combine both statements.", 4)

        CodeBlock example1Code
        example1Code:AddText(   "motor:SetSpeed(" + dq + "B" + dq + ", 600)" + cr 
                            +   "motor:SetSpeed(" + dq + "C" + dq + ", 600)" + cr )
        example1Code:AddText(   "motor:RotateToDegree(" + dq + "B" + dq + ", -1080)" + cr
                            +   "motor:RotateToDegree(" + dq + "C" + dq + ", -1080)" + cr 
                            +   "motor:Wait(" + dq + "B" + dq + ")" + cr 
                            +   "motor:RotateToDegree(" + dq + "B" + dq + ", -3700)" + cr 
                            +   "motor:Wait(" + dq + "B" + dq + ")" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example1Code))

//        SideBySideIDE combineStatementsIDE
//        combineStatementsIDE:SetUniqueIdentifier("combineStatements")
//        combineStatementsIDE:Setup()
//        combineStatementsIDE:GetIDETitle():AddText("Activity: Combine both statements to do your pattern.")
//        combineStatementsIDE:GetIDESubtitle():AddText(" ")
//        bodyDiv:Add(combineStatementsIDE)

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Activity: Combine both statements to do your pattern.", 4)
        bodyDiv:AddParagraph("Read the checklist and use both statements the way you prefer to complete all the movements parts of it.")


        bodyDiv:AddHeading("Goal 2: Using the Quorum Lego Library to wait the button to be pressed to perform a task", 2)

        Paragraph p2
        CodeBlock buttonCode
        CodeBlock legoCode
        CodeBlock buttonMiniCode
        CodeBlock waitCode
        buttonCode:AddText("Button")
        legoCode:AddText("Lego")
        buttonMiniCode:AddText("button")
        waitCode:AddText("WaitForButtonPress")
        p2:AddText("To wait for the button to be pressed you will need to use the ")
        p2:Add(buttonCode)
        p2:AddText(" library that is also inside the ")
        p2:Add(legoCode)
        p2:AddText(" library and you also need to instantiate a new ")
        p2:Add(buttonCode)
        p2:AddText(" object called ")
        p2:Add(buttonMiniCode)
        p2:AddText(". You will use the ")
        p2:Add(waitCode)
        p2:AddText(" statement to wait for button to be pressed. The ")
        p2:Add(waitCode)
        p2:AddText(" doesn't take any parameters.")
        bodyDiv:Add(p2)


        bodyDiv:Add(break)

        Paragraph example2Paragraph
        Bold example2bold
        example2bold:AddText("Example: Use the ")
        example2bold:Add(waitCode)
        example2bold:AddText(".")
        example2Paragraph:Add(example2bold)
        bodyDiv:Add(example2Paragraph)


        CodeBlock example2Code
        Span s3
        s3:AddText(     "// This line waits the button to be pressed " + cr )
        s3:SetClassAttribute("comment")
        example2Code:Add(s3)
        example2Code:AddText(   "button:WaitforButtonPress()" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example2Code))

        bodyDiv:AddParagraph("Use this example to wait for the button to be pressed to run the code given early in this challenge.")

//        SideBySideIDE addStatementIDE
//        addStatementIDE:SetUniqueIdentifier("addStatement")
//        addStatementIDE:GetIDETitle():AddText("Activity: ")
//        Paragraph p3
//        p3:AddText("Add the ")
//        p3:Add(waitCode)
//        p3:AddText(" statement.")
//        addStatementIDE:SetIDESubtitle(p3)
//        addStatementIDE:Setup()
//        bodyDiv:Add(addStatementIDE)

        Paragraph a2
        Bold a2Bold
        a2Bold:AddText("Activity: Use the ")
        a2Bold:Add(waitCode)
        a2Bold:AddText(" statement.")
        a2:Add(a2Bold)
        bodyDiv:Add(a2)

        bodyDiv:Add(break)

        Paragraph p4
        CodeBlock soundCode
        CodeBlock soundMiniCode
        CodeBlock setLightPatternCode
        soundCode:AddText("Sound")
        soundMiniCode:AddText("sound")
        setLightPatternCode:AddText("SetLightPattern")
        p4:AddText("Indicate when the program is waiting for the button to be pressed by using the LED and the tones. 
                    To do it you will use the ")
        p4:Add(buttonCode)
        p4:AddText(" library and the ")
        p4:Add(soundCode)
        p4:AddText(" library that are inside the ")
        p4:Add(legoCode)
        p4:AddText(" library and instantiate a new ")
        p4:Add(soundCode)
        p4:AddText(" object called ")
        p4:Add(soundMiniCode)
        p4:AddText(". The command to turn on the LED is the ")
        p4:Add(setLightPatternCode)
        p4:AddText(" that takes one parameter, the number of the pattern. ")
        bodyDiv:Add(p4)


        bodyDiv:AddHeading("Example: Turn on the LED.", 4)

        CodeBlock example3Code
        Span s4
        s4:AddText(     "// This line turns the LED on" + cr )
        s4:SetClassAttribute("comment")
        example3Code:Add(s4)
        example3Code:AddText(   "button:SetLightPattern(1)" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example3Code))

        bodyDiv:AddParagraph("This example is turning the LED on in the pattern 1, that is the LED green and solid.")

//        SideBySideIDE choosePatternIDE
//        choosePatternIDE:SetUniqueIdentifier("choosePattern")
//        choosePatternIDE:Setup()
//        choosePatternIDE:GetIDETitle():AddText("Activity: ")
//        choosePatternIDE:GetIDESubtitle():AddText("Choose one pattern between the pattern number 4 and the pattern number 6.")
//        bodyDiv:Add(choosePatternIDE)

        bodyDiv:AddHeading("Activity: Turn the LED on, and make it blink", 4)
        bodyDiv:AddParagraph("In this activity you will have to choose one pattern to your LED. 
                            You can choose the color but it must blink while waiting, so it must be the patterns 4(green), 5(red) or 6(orange).")

        bodyDiv:Add(break)

        Paragraph p5
        CodeBlock playToneCode
        playToneCode:AddText("PlayTone")  
        p5:AddText("The command to play tones is the ")
        p5:Add(playToneCode)
        p5:AddText(" that takes two parameters, the frequency and the duration of the tone.")
        bodyDiv:Add(p5)


        bodyDiv:AddHeading("Example: Play a tone.", 4)

        CodeBlock example4Code
        Span s5
        s5:AddText(     "// This line plays a tone" + cr )
        s5:SetClassAttribute("comment")
        example4Code:Add(s5)
        example4Code:AddText(   "sound:PlayTone(710, 100)" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example4Code))

        bodyDiv:AddParagraph("This example is playing a tone in the frequency of 710 Hertz with duration of 100 milliseconds.")


//        SideBySideIDE testTonesIDE
//        testTonesIDE:SetUniqueIdentifier("testTones")
//        testTonesIDE:Setup()
//        testTonesIDE:GetIDETitle():AddText("Activity: Test some tones and choose one.")
//        testTonesIDE:GetIDESubtitle():AddText(" ")
//        bodyDiv:Add(testTonesIDE)

        bodyDiv:AddHeading("Activity: Add tones", 4)
        bodyDiv:AddParagraph("In this activity you will have to choose one tone to play while waiting for the button. 
                            Now you should insert these lines of code right before the lines with the command to wait for the button. 
                            And because you want the LED to be on just while waiting, right after the wait for the button command you should add a line to leave the LED without any color. 
                            The pattern that represents that is the pattern number 0.")


        bodyDiv:Add(break)

        bodyDiv:AddHeading("Example: Turn off the LED.", 4)

        CodeBlock example5Code
        Span s6
        s6:AddText(     "// This turns off the LED" + cr )
        s6:SetClassAttribute("comment")
        example5Code:Add(s6)
        example5Code:AddText(   "button:SetLightPattern(0)" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example5Code))

        bodyDiv:Add(break)

        bodyDiv:AddHeading("Sample Output", 2)
        bodyDiv:AddParagraph("Each student will have a different pattern but all of them must include:")

        UnorderedList outputList
        ListItem li11
        li11:AddText(    "At least one RotateByDegrees and one RotateToDegree")
        outputList:Add(li11)

        ListItem li12
        li12:AddText(   "At least one movement backward")
        outputList:Add(li12)

        ListItem li13
        li13:AddText(   "At least one clockwise revolution")
        outputList:Add(li13)

        ListItem li14
        li14:AddText(   "At least one counterclockwise revolution")
        outputList:Add(li14)

        ListItem li15
        li15:AddText(   "It has to wait until the button is pressed to begin and between each move")
        outputList:Add(li15)

        ListItem li16
        li16:AddText(   "And it must have the LED and the tone to indicate while itâs waiting")
        outputList:Add(li16)
        bodyDiv:Add(outputList)


        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)


    end

    action GetMetaDescription returns text
        return "Learn about programming LEGO Mindstorms robots on a team in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Challenge (Choose your own pattern)"
    end
    action GetName returns text
        return "Challenge 2.4"
    end
    action GetShortDescription returns text
        return "how work Choose your own pattern in Quorum."
    end
    action GetLocation returns text
        return "lessons/chapter2/challenge2_4.html"
    end
end