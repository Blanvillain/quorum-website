use Libraries.Web.Page.all
use Libraries.System.File
use Libraries.Containers.Array

class Lab2_6 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Lab 2.6: Moving the Robot - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
         Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Lab 2.6: Moving the Robot", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Lab 2.6: Moving the Robot")
        AddToHeadingArray(h_heading)

        bodyDiv:Add(headDiv)
        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Moving the Lego Robot", 2)
    

        AddHeading(section_intro, "Goals", 3)
  
         section_intro:AddParagraph("In this lab, we will learn the following computer science concepts:")
        
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Accessing the Quorum Standard Library")
        goalList:AddListItem("Creating Objects and Calling Actions on Objects")
        section_intro:Add(goalList)

        AddHeading(section_intro, "Computer Science Principles Curriculum", 3)


        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.2, LO 1.2.1, EK 1.2.1A, EK 1.2.1B, EU 1.3, LO 1.3.1, EK 1.3.1E")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.1, LO 5.1.1, EK 5.1.1A, EK 5.1.1C")
        section_intro:Add(list)

         AddHeading(section_intro, "Common Core Standards", 3)
        UnorderedList ccList
        ccList:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards » Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.10, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.11-12.4, CCSS.ELA-Literacy.RST.11-12.5")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP4, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8")
        section_intro:Add(ccList)

        AddHeading(section_intro, "Vocabulary", 3)

        UnorderedList vocabularyList
        vocabularyList:AddClassAttribute("list-disc list-outside pl-8")
        vocabularyList:AddListItem("Library")
        vocabularyList:AddListItem("Object")
        vocabularyList:AddListItem("Instantiation")
        vocabularyList:AddListItem("Action Call")
        vocabularyList:AddListItem("Parameters")
        vocabularyList:AddListItem("Parameter Passing")
        vocabularyList:AddListItem("Robot")
        vocabularyList:AddListItem("Motor")
        vocabularyList:AddListItem("Brick")
        vocabularyList:AddListItem("Port")
        section_intro:Add(vocabularyList)
        

        Section section_overview
        section_overview:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_overview)
        AddHeading(section_overview, "Overview", 2)


        Paragraph p1 
        p1:AddText("This lab demonstrates the use of the")
        CodeBlock legoCode
        legoCode:AddText("Lego")
        p1:Add(legoCode)
        p1:AddText(" library in Quorum. The ")
        p1:Add(legoCode)
        p1:AddText(" library can be used to control every part of the robot but in this lab we’re going to use just the motor part. 
                    You will write a program that moves forward the robot and rotate the robot 360 degrees while the third motor not connected to the wheels will keep working the whole time. 
                    Before you start with the programming part you need to build the robot, in all the lessons we use the EV3MEG, you can find the tutorial on ")
        p1:AddLink( dq + "Lego website" + dq , "http://www.lego.com/en-us/mindstorms/build-a-robot/ev3meg")
        p1:AddText(". If you never worked with robots or if you don't remember how it works you should read this tutorial before start:")
        section_overview:Add(p1)

        AddHeading(section_overview, "Goal 1: Accessing the Quorum Standard Library", 3)
 
        Paragraph p2  
        Bold lab2_6Bold
        Bold mainBold
        lab2_6Bold:AddText("Lab2_6")
        mainBold:AddText("main.quorum")
        p2:AddText("You will start by creating a new blank Robot project. Name the project ")
        p2:Add(lab2_6Bold)
        p2:AddText(". Open the ")
        p2:Add(mainBold)
        p2:AddText(" file in the editor.")
        section_overview:Add(p2)
 
        Paragraph p3
        CodeBlock motorCode
        CodeBlock cb3
        motorCode:AddText("Motor")
        cb3:AddText("Libraries.Robots.Lego")
        p3:AddText("This assignment makes use of the Quorum ")
        p3:Add(motorCode)
        p3:AddText(" Library in the Quorum ")
        p3:Add(legoCode)
        p3:AddText(" Library. You will need to type code at the beginning of the ")
        p3:Add(mainBold)
        p3:AddText(" file that lets Quorum know you want to use this library. Begin by typing the appropriate code to use the Quorum ")
        p3:Add(legoCode)
        p3:AddText(" Library in your project. The ")
        p3:Add(legoCode)
        p3:AddText(" Library is called ")
        p3:Add(cb3)
        p3:AddText(". To use the ")
        p3:Add(motorCode)
        p3:AddText(" Library inside the ")
        p3:Add(legoCode)
        p3:AddText(" Library you add .Motor add the end.")
        section_overview:Add(p3)


        Paragraph example1Paragraph
        Bold example1Bold
        example1Bold:AddText("Example: Tell Quorum we want access to ")
        example1Bold:Add(motorCode)
        example1Bold:AddText(".")
        example1Paragraph:Add(example1Bold)
        section_overview:Add(example1Paragraph)

        CodeBlock example1Code
        Span s1
        s1:AddText(     "// this line tells Quorum to use the Motor library" + cr)
        s1:SetClassAttribute("comment")
        example1Code:Add(s1)
        example1Code:AddText(    "use Libraries.Robots.Lego.Motor" )
        section_overview:Add(preformatter:GeneratePreformattedCode(example1Code))


        section_overview:AddParagraph("You must include a statement like this at the top of the file every time you want to use a Quorum library.")


        AddHeading(section_overview, "Goal 2: Creating Objects and Calling Actions on Objects", 3)

        Paragraph p4
        CodeBlock motorControlCode
        motorControlCode:AddText("motorControl")
        p4:AddText("To be able to call actions that are in the ")
        p4:Add(motorCode)
        p4:AddText(" library, instantiate a new ")
        p4:Add(motorCode)
        p4:AddText(" object, calling it ")
        p4:Add(motorControlCode)
        p4:AddText(".")
        section_overview:Add(p4)



        Paragraph example2Paragraph
        Bold example2Bold
        example2Bold:AddText("Example: Instantiate a ")
        example2Bold:Add(motorCode)
        example2Bold:AddText(" object.")
        example2Paragraph:Add(example2Bold)
        section_overview:Add(example2Paragraph)

        CodeBlock example2Code
        Span s2
        s2:AddText(     "// this line creates (instantiates) a new Motor object called motor" + cr)
        s2:SetClassAttribute("comment")
        example2Code:Add(s2)
        example2Code:AddText(   "Motor motorControl")
        section_overview:Add(preformatter:GeneratePreformattedCode(example2Code))

        Paragraph p5
        CodeBlock rotateByDegreesCode
        CodeBlock waitCode
        rotateByDegreesCode:AddText("RotateByDegrees")
        waitCode:AddText("Wait")
        p5:AddText("Now you can call actions to send commands to the motors. 
                    To do that you will use the ")
        p5:Add(rotateByDegreesCode)
        p5:AddText(" command that has two parameters, the name of the motor you want to activate and the number of degrees you want to rotate the motor. 
                    After you send a movement command to a motor you should use the ")
        p5:Add(waitCode)
        p5:AddText(" command after to allow the motor time to complete its action before the next action begins.")
        section_overview:Add(p5)


                Section section_lesson
        section_lesson:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_lesson)
        AddHeading(section_lesson, "Large Motors", 2)
        section_lesson:AddParagraph("We will start with the large motors, which are most frequently used for moving the wheels. 
                            For these examples we have the right motor plugged into port " + dq + "B" + dq + " and the left motor plugged into port " + dq + "C." + dq + " 
                            This simple example code will move the robot forward 5 turns and then move it backward 5 turns.")


        AddHeading(section_lesson, "Example: Moving the Robot Forward and Backward", 3)


        CodeBlock example3Code
        Span s3
        Span s31
        Span s32
        s3:AddText(     "// We use our motorControl object to issue instructions to the motor" + cr 
                    +   "//First, set the speed of the motor as a number between 0 and 100, which represents the " + cr
                    +   "//percentage of power applied to the motor. If your robot is " + cr
                    +   "//low on power, or doing too many other things, speed may be affected." + cr)
        s3:SetClassAttribute("comment")
        example3Code:Add(s3)
        example3Code:AddText(   "motorControl:SetSpeed(" + dq + "B" + dq + ", 50)" + cr 
                            +   "motorControl:SetSpeed(" + dq + "C" + dq + ", 50)" + cr )
        s31:AddText(    "//Next, tell the motors to move forward using degrees." + cr 
                    +   "//Use a variable to represent one full revolution of 360 degrees." + cr)
        s31:SetClassAttribute("comment")
        example3Code:Add(s31)
        example3Code:AddText(   "integer turn = 360" + cr 
                            +   "motorControl:RotateByDegrees(" + dq + "B" + dq + ", turn * 5)" + cr 
                            +   "motorControl:RotateByDegrees(" + dq + "C" + dq + ", turn * 5)" + cr )
        s32:AddText(    "//After a motor instruction, you must also tell Quorum to wait to complete the movement." + cr)
        s32:SetClassAttribute("comment")
        example3Code:Add(s32)
        example3Code:AddText(   "motorControl:Wait(" + dq + "B" + dq + ")" + cr 
                            +   "motorControl:Wait(" + dq + "C" + dq + ")" + cr )
        section_lesson:Add(preformatter:GeneratePreformattedCode(example3Code))

//        SideBySideIDE moveRobotBackwardIDE
//        moveRobotBackwardIDE:SetUniqueIdentifier("moveRobotBackward")
//        moveRobotBackwardIDE:Setup()
//        moveRobotBackwardIDE:GetIDETitle():AddText("Activity: Move the robot backward")
//        moveRobotBackwardIDE:GetIDESubtitle():AddText("Expand the program you started to move the robot back to its starting location.")
//        bodyDiv:Add(moveRobotBackwardIDE)



        Paragraph activity1Paragraph
        Bold activity1Bold
        activity1Bold:AddText("Activity: Move the robot backward")
        activity1Paragraph:Add(activity1Bold)
        section_lesson:Add(activity1Paragraph)

        section_lesson:AddParagraph("Expand the program you started to move the robot back to its starting position.")
       section_lesson:AddParagraph("(Hint: a positive number moved the motors forward.)")

        section_lesson:AddHeading("Small Motor", 4)
        section_lesson:AddParagraph("We can use the small motor with the same basic commands. 
                            For this example, the small motor is in port " + dq + "A" + dq + ". 
                            Our robot is configured to raise and lower an arm, but the basic code concept will work on other robot builds.")


        CodeBlock example4Code
        Span s4
        Span s41
        s4:AddText(     "// First set the speed of the motor" + cr )
        s4:SetClassAttribute("comment")
        example4Code:Add(s4)
        example4Code:AddText( "motorControl:SetSpeed(" + dq + "A" + dq + ", 50)" + cr)
        s41:AddText(     "// Move the small motor 90 degrees (one quarter turn)" + cr )
        s41:SetClassAttribute("comment")
        example4Code:Add(s41)
        example4Code:AddText( "motorControl:RotateByDegrees(" + dq + "A" + dq + ", 90)" + cr 
                            +   "motorControl:Wait(" + dq + "A" + dq + ") ")
        section_lesson:Add(preformatter:GeneratePreformattedCode(example4Code))


//        SideBySideIDE moveSmallMotorIDE
//        moveSmallMotorIDE:SetUniqueIdentifier("moveSmallMotor")
//        moveSmallMotorIDE:Setup()
//        moveSmallMotorIDE:GetIDETitle():AddText("Activity: Move the small motor on your own")
//        moveSmallMotorIDE:GetIDESubtitle():AddText("Experiment with ways to move you motor by changing degrees and speeds and executing several commands in a row. ")
//        bodyDiv:Add(moveSmallMotorIDE)

   
        Paragraph activity2Paragraph
        Bold activity2Bold
        activity2Bold:AddText("Activity: Move the small motor on your own")
        activity2Paragraph:Add(activity2Bold)
        section_lesson:Add(activity2Paragraph)
        section_lesson:AddParagraph("Experiment with ways to move your motor by changing speeds, degrees, and executing several commands in a row. For example, raise and then lower an arm, or open or close pincers, if that is how your robot is built.")


        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about creating objects and actions while coding an LEGO Robotics application in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Lab Manual (Moving the Robot)"
    end
    action GetName returns text
        return "Lab 2.6"
    end
    action GetShortDescription returns text
        return "how work moving the Robot in Quorum."
    end
    action GetLocation returns text
        return "lessons/chapter2/lab2_6.html"
    end
end