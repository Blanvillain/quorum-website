use Libraries.Web.Page.all
use Libraries.System.File
use Libraries.Containers.Array

class Lab2_3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Lab 2.3: Music - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
          Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
         Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Lab 2.3: Music", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Lab 2.3: Music")
        AddToHeadingArray(h_heading)

        bodyDiv:Add(headDiv)
        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Types", 2)
        

        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("The goal of this lab is to learn the following")
        
        UnorderedList goalList
        goalList:AddListItem("Understanding the Music Library")
        goalList:AddListItem("Using the Music Library")
        section_intro:Add(goalList)

       AddHeading(section_intro, "Computer Science Principles Curriculum", 3)
        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", " EK 5.1.2B, EK 5.1.2E, EK 5.2.1F, EK 5.1.2J, EK 5.2.1C, EK 5.3.1D, EK 5.3.1I, EK 5.4.1")
        section_intro:Add(list)

         AddHeading(section_intro, "Common Core Standards", 3)
        UnorderedList ccList
        ccList:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards Â» Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.9-10.1, CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.8, CCSS.ELA-Literacy.RST.9-10.9")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8,")
        section_intro:Add(ccList) 

        AddHeading(section_intro, "Vocabulary", 3)
        UnorderedList vocabularyList
        vocabularyList:AddClassAttribute("list-disc list-outside pl-8")
        vocabularyList:AddListItem("Code completion")
        vocabularyList:AddListItem("Library")
        vocabularyList:AddListItem("Class")
        vocabularyList:AddListItem("Instantiate")
        vocabularyList:AddListItem("Objects")
        vocabularyList:AddListItem("Actions")
        vocabularyList:AddListItem("Parameters")
        section_intro:Add(vocabularyList)
        
        AddHeading(section_intro, "Hotkeys", 3)     
        Paragraph para1
        para1:AddText("A list of Hotkeys can be found on the ")
        Link link2 = para1:AddLink("Getting Started with Quorum Studio", "/tutorials/language/gettingStarted.html")
        link2:SetClassAttribute("underline text-quorum-blue-150")
        para1:AddText(" page.")

        section_intro:Add(para1)

        Section section_overview
        section_overview:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_overview)
        AddHeading(section_overview, "Overview", 2)


        Paragraph p1 
        p1:AddText("This lab demonstrates the use of the ")
        CodeBlock musicCode
        musicCode:AddText("Music")
        p1:Add(musicCode)
        p1:AddText(" library in Quorum. The ")
        p1:Add(musicCode)
        p1:AddText(" library can be used to create Music objects, to play individual notes, chords, or even entire musical compositions for the appropriate length of time. 
                    You will write a program that plays a song of your own composition, and you will share this song with your classmates. 
                    While building your musical piece, you will also take advantage of a feature of Quorum Studio known as code completion. 
This lesson must be completed in the offline environment of Quorum Studio.")
        section_overview:Add(p1)


        AddHeading(section_overview, "Goal 1: Understanding the Music Library", 3)
  
        section_overview:AddParagraph("You will start by creating a new blank Quorum project in Quorum Studio. Name this project Lab2_3. Open the main.quorum file in the Sodbeans editor. ")
        Paragraph p2  
        CodeBlock c22
        p2:AddText("Before you can begin using the ")
        p2:Add(musicCode)
        p2:AddText("  library, you must first understand a new keyword. Quorum, in a new project, is only aware of the code you place inside the file main.quorum. 
                    You can tell Quorum you wish to make use of a library by using the  ")
        c22:AddText("use")
        p2:Add(c22)
        p2:AddText(" statement. ")
        section_overview:Add(p2)
 
        Paragraph p3
        CodeBlock c31   
        CodeBlock c32
        CodeBlock c33
        p3:AddText("Begin by typing the word ")
        c31:AddText("use")
        p3:Add(c31)
        p3:AddText(" followed by a space. You will use the code completion feature of Quorum Studio to find the music library. 
                    Let's use code completion to find the Music library. After typing ")
        p3:Add(c31)
        p3:AddText("followed by a space, press CTRL + SPACE to use the code completion to select ")
        c32:AddText("Libraries")
        p3:Add(c32)
        p3:AddText(" . To select this option, press Enter. 
                    Now type a single period and a new code completion window will appear with new options, select  ")
        c33:AddText("Sound")
        p3:Add(c33)
        p3:AddText(" by using the arrow keys and pressing Enter. Type a period to bring up the code completion menu again. 
                    You should see the library you are looking for, called ")
        p3:Add(musicCode)
        p3:AddText(".")
        section_overview:Add(p3)
        
        Paragraph p4
        CodeBlock c41
        p4:AddText("If you know the name of the library you want to use that in this case is ")
        c41:AddText("Libraries.Sound.Music")
        p4:Add(c41)
        p4:AddText(" you can type the code directly as in the line below. ")
        section_overview:Add(p4)

        section_overview:Add(preformatter:GeneratePreformattedCode("Use Libraries.Sound.Music "))

        Paragraph p5
        p5:AddText("Quorum now knows that you want to use the ")
        p5:Add(musicCode)
        p5:AddText(" library. To put the ")
        p5:Add(musicCode)
        p5:AddText(" library to use, you need to instantiate a new ")
        p5:Add(musicCode)
        p5:AddText(" object. In object-oriented programming languages, like Quorum, you have the option of creating multiple objects from the same class. 
                    The action of creating new objects of a given class (like the Music class) is called instantiating. ")
        section_overview:Add(p5)

        Paragraph example1Paragraph
        Bold example1bold
        example1bold:AddText("Example: Add a line of code that instantiates a ")
        example1bold:Add(musicCode)
        example1bold:AddText(" object, named ")
        CodeBlock museCode
        museCode:AddText("muse")
        example1bold:Add(museCode)
        example1bold:AddText(".")
        example1Paragraph:Add(example1bold)
        section_overview:Add(example1Paragraph)

        section_overview:Add(preformatter:GeneratePreformattedCode("Music muse"))

        section_overview:AddParagraph("You can choose any name for your object, just remember that the class cannot be renamed. 
                            Now erase your example and do the activity.")


//        SideBySideIDE instantiatesObjectIDE
//        instantiatesObjectIDE:SetUniqueIdentifier("instantiatesObject")
//        instantiatesObjectIDE:GetIDETitle():AddText("Activity: Instantiates Object")
//        Paragraph p
//        p:AddText("Add a line of code that instantiates a ")
//        p:Add(musicCode)
//        p:AddText(" object.")
//        instantiatesObjectIDE:SetIDESubtitle(p)
//        instantiatesObjectIDE:Setup()
//        bodyDiv:Add(instantiatesObjectIDE)

        AddHeading(section_overview, "Activity: Add a line of code that instantiates a music object", 3)
        section_overview:AddParagraph("You can choose the name you want for your object. 
                            The name rules for declaring the variables also apply to objects.")


        AddHeading(section_overview, "Goal 2: Using the music Library", 3)

        Paragraph p6
        CodeBlock c61
        c61:AddText("Play(integer note, number duration)")
        p6:AddText("In Quorum, you use the colon character to indicate that you wish to call an action on a variable. 
                    On a new line, type the name of your ")
        p6:Add(musicCode)
        p6:AddText(" object followed by a colon. The code completion window will again appear. 
                    Notice the number of available actions in the code completion window for a ")
        p6:Add(musicCode)
        p6:AddText(" object. Go through this list of actions using the arrow keys until finding the action named ")
        p6:Add(c61)
        p6:AddText(". This action will allow us to play a given note for a specified length of time, in seconds. 
                    Press enter to accept this option.")
        section_overview:Add(p6)


        Paragraph p7
        CodeBlock c71
        c71:AddText("Play")
        p7:AddText("To tell the ")
        p7:Add(c71)
        p7:AddText(" action what notes you wish to hear, you must pass it this information in the form of parameter. 
                    In programming, parameters are values (or variable names) that are passed to an action.")
        section_overview:Add(p7)


        Section section_lesson
        section_lesson:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_lesson)
        AddHeading(section_lesson, "Example: Use the play action to play a middle C for one second", 2)

        section_lesson:Add(preformatter:GeneratePreformattedCode("muse:Play(60, 1)"))

        section_lesson:AddParagraph("Instead of muse remember to use your object name to test the example. 
                            Notice that because it is more than one parameter inside the parenthesis, we use a comma to separate them. 
                            Sound should be heard from the computer speakers (make sure the volume is turned up)!")

//        SideBySideIDE actionChangingIDE
//        actionChangingIDE:SetUniqueIdentifier("actionChanging")
//        actionChangingIDE:Setup()
//        actionChangingIDE:GetIDETitle():AddText("Activity: Changing the note and the duration.")
//        actionChangingIDE:GetIDESubtitle():AddText(" In two different lines use the play action changing the note and the duration.")
//        bodyDiv:Add(actionChangingIDE)

         AddHeading(section_lesson, "Activity: In two different lines use the play action, changing the note and duration.", 3)


        Paragraph p8
        p8:AddText("Choose any number between 0 and 127 to change your note and any amount of seconds you want to change the duration. 
                    To see a list with the notes and their respective numbers, click ")
        Link link = p8:AddLink( "here" , "http://computermusicresource.com/midikeys.html")
        link:SetClassAttribute("underline text-quorum-blue-150")
        p8:AddText(". The note will sound on a piano, if you want to change the instrument you will have to use another library, the code below it is an example of changing the instrument.")
         section_lesson:Add(p8)

        section_lesson:AddHeading("Example: Change the instrument.", 4)
        section_lesson:Add(preformatter:GeneratePreformattedCode("use Libraries.Sound.Music" + cr 
                                                         +  "use Libraries.Sound.Instrument" + cr + cr
                                                         +  "Music muse" + cr 
                                                         +  "Instrument i = muse:GetInstrument(10)" + cr + cr
                                                         +  "muse:SetInstrument(i)" + cr 
                                                         +  "muse:Play(60, 1)"))
        Paragraph p9
        p9:AddText("You can choose instruments between 0 and 127. 
                    To go to the list with all of the options and theirs respective number, click ")
        Link link1 = p9:AddLink( "here" , "http://computermusicresource.com/GM.Programs.html")
        link1:SetClassAttribute("underline text-quorum-blue-150")
        p9:AddText(".")
         section_lesson:Add(p9)

//        SideBySideIDE createSongIDE
//        createSongIDE:SetUniqueIdentifier("createSong")
//        createSongIDE:Setup()
//        createSongIDE:GetIDETitle():AddText("Activity:  Itâs time to create a custom song!")
//        createSongIDE:GetIDESubtitle():AddText("Write a series of play statements that play a given note.")
//        bodyDiv:Add(createSongIDE)


        AddHeading(section_lesson, "Activity: It's time to create a custom song!", 3)
        section_lesson:AddParagraph("Take time in creating a song and keep testing the program to ensure that the program plays a melody. 
                                If you are confident enough, attempt to re-create the melody of a song you know.")

       section_lesson:AddParagraph("When the song is finished and ready to show off, play the song for the instructor, some friends, or the class.")



        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about writing use statements, and MIDI music, in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Lab Manual (Music)"
    end
    action GetName returns text
        return "Lab 2.3"
    end
    action GetShortDescription returns text
        return "how work music in Quorum."
    end
    action GetLocation returns text
        return "lessons/chapter2/lab2_3.html"
    end
end