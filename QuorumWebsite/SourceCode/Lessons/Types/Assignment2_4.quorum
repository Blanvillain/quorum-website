use Libraries.Web.Page.all
use Libraries.Containers.Array

class Assignment2_4 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Assignment 2.4: Tortoise vs. the Hare - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-3")
        AddHeading(headDiv, "Assignment 2.4: Tortoise vs. the Hare ", 1)
        bodyDiv:Add(headDiv)

        Section section_goals
        section_goals:SetClassAttribute("flex flex-col gap-y-3")

        AddHeading(section_goals, "Goals", 2)
        section_goals:AddParagraph("In this assignment we will practice the following computer science concepts:")
        
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Calling Actions on Objects")
        section_goals:Add(goalList)


        Section section_csp_curriculum
        section_csp_curriculum:SetClassAttribute("flex flex-col gap-y-3")

        AddHeading(section_csp_curriculum, "Computer Science Principles Curriculum", 2)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.2, LO 1.2.3, EK 1.2.3A")
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EU 4.1, LO 4.1.1, EK 4.1.1B")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.2, LO 5.2.1, EK 5.2.1A, EK 5.2.1B, EK 5.2.1C, EK 5.2.1D, EK 5.2.1E, EK 5.2.1F")
        section_csp_curriculum:Add(list)

        Section section_standards
        section_standards:SetClassAttribute("flex flex-col gap-y-3")

        AddHeading(section_standards, "Common Core Standards", 2)
        UnorderedList ccList
        ccList:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards » Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.10, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.11-12.4, CCSS.ELA-Literacy.RST.11-12.5")
        AddListItemWithBoldAtFront(ccList, "Mathematics Content: High School Geometry » Congruence: ", "CCSS.Math.Content.HSG.CO.12, CCSS.Math.Content.HSG.CO.13")
        AddListItemWithBoldAtFront(ccList, "Mathematics Content: High School Geometry » Modeling with Geometry: ", "CCSS.Math.Content.HSG.MG.1, CCSS.Math.Content.HSG.MG.3")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP4, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8")
        section_standards:Add(ccList)


        Section section_overview
        AddHeading(section_overview, "Overview", 2)

        Paragraph overviewP 
        overviewP:AddText("In this assignment, you will write a program that plays a simple race between a tortoise and a hare. 
                            You will tell the tortoise and the hare where to run to during the race. 
                            Download this ")
        overviewP:AddLink("zip folder", "/files/lessons/chapter2/Assignment2_4Template.zip")
        overviewP:AddText(" for a template to help you get started.")
        section_overview:Add(overviewP)


        Section section_template
        section_template:SetClassAttribute("flex flex-col gap-y-3")

        AddHeading(section_template, "Understanding the Provided Template", 2)

        Paragraph templateP 
        templateP:AddText("Open the provided template and navigate to the ")
        Bold mainBold
        mainBold:AddText("main.quorum")
        templateP:Add(mainBold)
        templateP:AddText(" file.")
        section_template:Add(templateP)

        Paragraph templateP2
        templateP2:AddText("There is an action already defined for you. 
                            This action begins on the line that starts with ")
        CodeBlock actionUpdateCode
        actionUpdateCode:AddText("action Update(number seconds)")
        templateP2:Add(actionUpdateCode)
        templateP2:AddText(". This action updates your game window on each frame of the game.")
        section_template:Add(templateP2)

        section_template:AddParagraph("Here is what the action looks like in its entirety on lines 44 through 47.")

        section_template:Add(preformatter:GeneratePreformattedCode("action Update(number seconds)" + cr 
                                                        + " hare:Update(seconds)" + cr 
                                                        + " tortoise:Update(seconds)" + cr 
                                                        + "end"))

        Paragraph templateP3
        templateP3:AddText("You write your code to move the tortoise and the hare around the race track in the action labeled ")
        CodeBlock actionCreateGameCode
        actionCreateGameCode:AddText("action CreateGame")
        templateP3:Add(actionCreateGameCode)
        templateP3:AddText(". You can find this action starts on line 18 through line 22.")
        section_template:Add(templateP3)

        section_template:AddParagraph("Here is what the action looks like, on lines 34 through 35.")

        section_template:Add(preformatter:GeneratePreformattedCode("action CreateGame" + cr 
                                                        + "end"))


        Section section_goal1
        AddHeading(section_goal1, "Goal 1: Calling Actions on Objects", 2)

        Paragraph goalP1
        CodeBlock spriteCode
        spriteCode:AddText("Sprite")
        goalP1:AddText("Navigate to the CreateGame action on line 18. 
                        You write your code here. 
                        The first thing you need to do is to set up the background and ")
        goalP1:Add(spriteCode)
        goalP1:AddText(" objects for the race.")
        section_goal1:Add(goalP1)


//        SideBySideIDE loadImagesIDE
//        loadImagesIDE:SetUniqueIdentifier("loadImages")
//        loadImagesIDE:GetIDETitle():AddText("Activity: Load images")
//        Paragraph p
//        p:AddText("Load images to the background and ")
//        p:Add(spriteCode)
//        p:AddText(" objects and add them to the game.")
//        loadImagesIDE:SetIDESubtitle(p)
//        loadImagesIDE:Setup()
//        bodyDiv:Add(loadImagesIDE)

        Paragraph activityP1 
        CodeBlock drawableCode
        CodeBlock loadCode
        CodeBlock addCode
        CodeBlock setInitialPositionCode
        drawableCode:AddText("Drawable")
        loadCode:AddText("Load")
        addCode:AddText("Add")
        setInitialPositionCode:AddText("SetInitialPosition")
        activityP1:AddText("Recall that to load images to ")
        activityP1:Add(drawableCode)
        activityP1:AddText(" objects, we call the ")
        activityP1:Add(loadCode)
        activityP1:AddText(" action, passing the file name as the parameter. ")
        activityP1:Add(drawableCode)
        activityP1:AddText(" objects are added to the game by calling the ")
        activityP1:Add(addCode)
        activityP1:AddText(" action with the parameter as the ")
        activityP1:Add(drawableCode)
        activityP1:AddText(" to add to the game. The ")
        activityP1:Add(spriteCode)
        activityP1:AddText(" objects are ")
        activityP1:Add(drawableCode)
        activityP1:AddText(" objects, and use the same actions.")

        Paragraph exampleParagraph
        Bold examplebold
        examplebold:AddText("Example: Load and add the background ")
        examplebold:Add(drawableCode)
        examplebold:AddText(".")
        exampleParagraph:Add(examplebold)
        section_goal1:Add(exampleParagraph)

        CodeBlock exampleCode
        exampleCode:AddText(   "racetrack:Load(" + dq + "racetrack.png" + dq + ")" + cr + "Add(racetrack)" + cr)
        section_goal1:Add(preformatter:GeneratePreformattedCode(exampleCode))
 //       bodyDiv:Add(break)

        Paragraph activityParagraph
        Bold activitybold
        activitybold:AddText("Activity: Load and add the tortoise and hare ")
        activitybold:Add(spriteCode)
        activitybold:AddText(" objects.")
        activityParagraph:Add(activitybold)
        section_goal1:Add(activityParagraph)
        section_goal1:Add(break)

        Paragraph setPosition
        setPosition:AddText("Once you load and add the objects, you can set the initial position. This is done using the ")
        setPosition:Add(setInitialPositionCode)
        setPosition:AddText(" action, passing the starting coordinates. Since the race starts at the bottom left corner, or (0, 0), this should be the initial position.")
        section_goal1:Add(setPosition)
                

        Paragraph example1Paragraph
        Bold example1bold
        example1bold:AddText("Example: Set the initial position for the hare ")
        example1bold:Add(spriteCode)
        example1bold:AddText(".")
        example1Paragraph:Add(example1bold)
        section_goal1:Add(example1Paragraph)


        CodeBlock example1Code
        Span s1
        s1:AddText(     "// this line of code tells the hare that its initial position is the coordinate (0, 0)" + cr )
        s1:SetClassAttribute("comment")
        example1Code:Add(s1)
        example1Code:AddText(   "hare:SetInitialPosition(0, 0)" + cr )
        section_goal1:Add(preformatter:GeneratePreformattedCode(example1Code))

//        SideBySideIDE loadTortoiseIDE
//        loadTortoiseIDE:SetUniqueIdentifier("loadTortoise")
//        loadTortoiseIDE:Setup()
//        loadTortoiseIDE:GetIDETitle():AddText("Activity: Do the same for the tortoise.")
//        loadTortoiseIDE:GetIDESubtitle():AddText(" ")
//        bodyDiv:Add(loadTortoiseIDE)



        Paragraph activityP2
        Bold activityP2Bold
        CodeBlock tortoiseCode
        CodeBlock hareCode
        tortoiseCode:AddText("tortoise")
        hareCode:AddText("hare")
        activityP2:AddText("The ")
        activityP2:Add(setInitialPositionCode)
        activityP2:AddText(" action ensures that the ")
        activityP2:Add(spriteCode)
        activityP2:AddText(" objects start at the beginning of the race. Since the ")
        activityP2:Add(tortoiseCode)
        activityP2:AddText(" and ")
        activityP2:Add(hareCode)
        activityP2:AddText(" should start at the same point, their initial positions should be the same.")

        Paragraph activity2
        activityP2Bold:AddText("Activity: Set the initial position for the tortoise.")
        activity2:Add(activityP2Bold)
        section_goal1:Add(activity2)
        section_goal1:Add(break)





//        SideBySideIDE giveSpeedsIDE
//        giveSpeedsIDE:SetUniqueIdentifier("giveSpeeds")
//        giveSpeedsIDE:GetIDETitle():AddText("Activity: Give the speeds")
//        Paragraph p1
//        p1:AddText("Activity: Give the ")
//        p1:Add(tortoiseCode)
//        p1:AddText(" and ")
//        p1:Add(hareCode)
//        p1:AddText(" speeds of your choosing. ")
//        giveSpeedsIDE:SetIDESubtitle(p1)
//        giveSpeedsIDE:Setup()
//        bodyDiv:Add(giveSpeedsIDE)

        Paragraph activityP3
        CodeBlock numberCode
        CodeBlock setSpeedCode
        setSpeedCode:AddText("SetSpeed")
        numberCode:AddText("number")
        activityP3:AddText("Once you have set up your ")
        activityP3:Add(spriteCode)
        activityP3:AddText(" objects, give each a speed by using the ")
        activityP3:Add(setSpeedCode)
        activityP3:AddText(" actions. The ")
        activityP3:Add(setSpeedCode)
        activityP3:AddText(" action takes a ")
        activityP3:Add(numberCode)
        activityP3:AddText(" parameter to set as the speed. The speed of the ")
        activityP3:Add(spriteCode)
        activityP3:AddText(" objects is represented by how many pixels they will move across the screen in a second. 
                            This means that if the number you pass is too small, then you may have a hard time noticing the movement. 
                            If the value is too large, your image will appear to jump across the screen rather than have a smooth movement. 
                            Good values to choose are between 50 and 300.")
        section_goal1:Add(activityP3)

        Paragraph example2Paragraph
        CodeBlock setSpeedNumberCode
        setSpeedNumberCode:AddText("SetSpeed(number)")
        Bold example2bold
        example2bold:AddText("Example: Set the speed for the hare by calling ")
        example2bold:Add(setSpeedNumberCode)
        example2bold:AddText(".")
        example2Paragraph:Add(example2bold)
        section_goal1:Add(example2Paragraph)


        CodeBlock example2Code
        Span s2
        s2:AddText(     "//This gives your hare an initial speed of 100 pixels per second" + cr )
        s2:SetClassAttribute("comment")
        example2Code:Add(s2)
        example2Code:AddText(   "hare:SetSpeed(100)" + cr )
        section_goal1:Add(preformatter:GeneratePreformattedCode(example2Code))

        Paragraph activity3
        Bold activity3Bold
        activity3Bold:AddText("Activity: Set the speed for the tortoise.") 
        activity3:Add(activity3Bold)
        section_goal1:Add(activity3)
        section_goal1:Add(break)

        Paragraph activityP31
        CodeBlock moveToXYCode
        activityP31:AddText("Your ")
        activityP31:Add(spriteCode)
        activityP31:AddText(" objects are now ready to begin racing! 
                            But they need to be told where to go. 
                            The race is to go counter-clockwise starting from the lower left corner to the lower right corner, to the upper right corner, to the upper left corner, and back to the bottom left corner.")
        moveToXYCode:AddText("MoveTo(x, y)")
        activityP31:AddText("Tell the ")
        activityP31:Add(spriteCode)
        activityP31:AddText(" objects which coordinates to move to by using a series of ")
        activityP31:Add(moveToXYCode)
        activityP31:AddText(" commands, passing the x and y coordinates of the screen location they should run to. ")
        section_goal1:Add(activityP31)

        Paragraph example3Paragraph
        Bold example3bold
        example3bold:AddText("Example: Tell the hare and tortoise ")
        example3bold:Add(spriteCode)
        example3bold:AddText(" objects to go to the position (1440, 770).")
        example3Paragraph:Add(example3bold)
        section_goal1:Add(example3Paragraph)


        CodeBlock example3Code
        Span s3
        Span s31
        s3:AddText(     "// this line tells the hare to move to the coordinate (1440, 0)" + cr )
        s3:SetClassAttribute("comment")
        example3Code:Add(s3)
        example3Code:AddText(   "hare:MoveTo(1440, 0)" + cr )
        s31:AddText(     "// this line tells the tortoise to move to the coordinate (1440, 0)" + cr )
        s31:SetClassAttribute("comment")
        example3Code:Add(s31)
        example3Code:AddText(   "tortoise:MoveTo(1440, 0)" + cr )
        section_goal1:Add(preformatter:GeneratePreformattedCode(example3Code))

//        SideBySideIDE giveCommandsIDE
//        giveCommandsIDE:SetUniqueIdentifier("giveCommands")
//        giveCommandsIDE:GetIDETitle():AddText("Activity: Give the commands")
//        Paragraph p2
        CodeBlock moveToCode
        moveToCode:AddText("MoveTo")
//        p2:AddText("Activity: Give the additional ")
//        p2:Add(moveToCode)
//        p2:AddText(" commands to the ")
//        p2:Add(tortoiseCode)
//        p2:AddText(" and the hare to finish the race. ")
//        giveCommandsIDE:SetIDESubtitle(p2)
//        giveCommandsIDE:Setup()
//        bodyDiv:Add(giveCommandsIDE)

        Paragraph activity4
        Bold activity4Bold
        activity4Bold:AddText("Activity: Write the additional ")
        activity4Bold:Add(moveToCode)
        activity4Bold:AddText(" commands to finish the race.")
        activity4:Add(activity4Bold)
        section_goal1:Add(activity4)

        Paragraph activityP4
        activityP4:AddText("The ")
        activityP4:Add(moveToCode)
        activityP4:AddText(" actions take place in the order you give them in your program, so you should give them in the correct order so that the race goes in the proper direction for the tortoise and hare. 
                            Make sure that the tortoise and hare do not go off the screen and that they do not cut across the grassy part of the track. 
                            They should stick to the rectangular dirt border along the edge of the screen.")
        section_goal1:Add(activityP4)


        section_goal1:AddParagraph("You can now compile and run your program. 
                            The race should pop up in a separate window. 
                            If there are any errors, fix them and try again.")

        bodyDiv:Add(section_goals)
        bodyDiv:Add(section_csp_curriculum)
        bodyDiv:Add(section_standards)
        bodyDiv:Add(section_overview)
        bodyDiv:Add(section_template)
        bodyDiv:Add(section_goal1)


        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Create a tortoise and the hare racing game while learning the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Assignment (Tortoise vs. the Hare)"
    end
    action GetName returns text
        return "Assignment 2.4"
    end
    action GetShortDescription returns text
        return "how work Tortoise vs. the Hare in Quorum."
    end
    action GetLocation returns text
      if GetNewLocation() not= ""
        return GetNewLocation()
      end
      return "lessons/chapter2/assignment2_4.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Chapter 2"
    end
end
