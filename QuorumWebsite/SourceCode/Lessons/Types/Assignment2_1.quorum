use Libraries.Web.Page.all
use Libraries.Containers.Array

class Assignment2_1 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Assignment 2.1: Ramp Experiment and Implicit Type Casting - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        AddHeading(headDiv, "Assignment 2.1: Ramp Experiment ", 1)
        headDiv:AddText("Practice using types and implicit casting")
        bodyDiv:Add(headDiv)

        Section section_goals
        section_goals:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goals, "Goals", 2)
        section_goals:AddParagraph("In this lab, we will learn the following computer science concepts:")
        
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Collaborate to understand data")
        goalList:AddListItem("Understand Implicit Casting")
        section_goals:Add(goalList)


        Section section_csp_curriculum
        section_csp_curriculum:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_csp_curriculum, "Computer Science Principles Curriculum", 2)


        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.2, LO 1.2.4, EK 1.2.4A, EK 1.2.4B, EK 1.2.4C, EK 1.2.4D, EK 1.2.4E")
        AddListItemWithBoldAtFront(list, "Big Idea: Abstraction: ", "EU 2.3, LO 2.3.2, EK 2.3.2A, EK 2.3.2B, EK 2.3.2C,EK 2.3.2C, EK 2.3.2E, EK 2.3.2F")
        AddListItemWithBoldAtFront(list, "Big Idea: Data and Information: ", "EU 3.1, LO 3.1.1, LO 3.1.1A, LO 3.1.1D")
        AddListItemWithBoldAtFront(list, "Big Idea: Data and Information: ", "EU 3.1, LO 3.1.2, EK 3.1.2A, EK 3.1.2B, EK 3.1.2C, EK 3.1.2D, 3.1.2E, EK 3.1.2F")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.3, LO 5.3.1, LO 5.3.1J")
        section_csp_curriculum:Add(list)

         
        Section section_standards
        section_standards:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_standards, "Common Core Standards", 2)
        UnorderedList ccList
        ccList:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards » Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.9-10.1, CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.8, CCSS.ELA-Literacy.RST.9-10.9")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8   ,")
        
        
        section_standards:Add(ccList) 

        AddHeading(section_standards, "Vocabulary", 2)

        UnorderedList vocabularyList
        vocabularyList:AddClassAttribute("list-disc list-outside pl-8")
        vocabularyList:AddListItem("Average (or Mean)")
        vocabularyList:AddListItem("Calculation")
        vocabularyList:AddListItem("Casting")
        vocabularyList:AddListItem("Data")
        vocabularyList:AddListItem("Data Analysis")
        vocabularyList:AddListItem("Experiment")
        vocabularyList:AddListItem("Explicit Casting")
        vocabularyList:AddListItem("Face-to-face collaboration")
        vocabularyList:AddListItem("Hypothesis")
        vocabularyList:AddListItem("Implicit Casting")
        vocabularyList:AddListItem("Integer")
        vocabularyList:AddListItem("Number")
        vocabularyList:AddListItem("Online collaboration")
        vocabularyList:AddListItem("Types")
        section_standards:Add(vocabularyList)
        

        Section section_overview
        section_overview:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_overview, "Overview", 2)

        section_overview:AddParagraph("In this lab, we will work on understanding the big idea of data and information. 
                            In doing so, we will collaborate to test a hypothesis in the field of physics, completing the following activities:")

        UnorderedList overviewList
        overviewList:AddClassAttribute("list-disc list-outside pl-8")
        overviewList:AddListItem("Discuss implicit casting in a face-to-face meeting.")
        overviewList:AddListItem("Create a pair of ramps as a team of two or three. 
                                The ramps should be in a different configuration of the team's choosing (e.g., size, width, strength, material, angle)")
        overviewList:AddListItem("Develop a hypothesis in regard to which ramp will make the ball roll farther. 
                                Write down your team's hypothesis.")
        overviewList:AddListItem("Roll a ball down each ramp 15 times and record how far the ball rolled in a spreadsheet.")
        overviewList:AddListItem("Using the Quorum programming language, write a program that calculates the average distance of the ball’s travel for each ramp. 
                                After calculating the average, discuss how implicit casting might impact the calculations.")
        overviewList:AddListItem("In an online collaborative meeting, discuss whether the hypothesis was refuted or confirmed.")
        section_overview:Add(overviewList)


        Section section_goal1
        section_goal1:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal1, "Goal 1: Have a face-to-face meeting about implicit Casting", 2)

        section_goal1:AddParagraph("To begin the lesson, students should try to understand the concept of implicit casting as a group, which is related to the broader concept of types. 
                            In this first part of the lab, we will break into teams and meet face-to-face for discussion of these two concepts.")

        Paragraph p1 
        p1:AddText("In them, discuss what it means to be a " + dq + "type " + dq + "in a programming language. 
                    During this discussion, reference at least integer and number, using")
        p1:AddLink(" the variables and types reference page" , "/tutorials/language/types.html")
        p1:AddText(" as a guide. Here is a code example of the integer and number types written in Quorum:")
        section_goal1:Add(p1)

        section_goal1:Add(break)

        AddHeading(section_goal1, "Example: Code for integers and numbers", 4)


        CodeBlock example1Code
        Span s1
        s1:AddText(     "//This example shows Quorum code for integers and numbers" + cr)
        s1:SetClassAttribute("comment")
        example1Code:Add(s1)
        example1Code:AddText(   "integer alice = 5" + cr 
                            +   "number bob = 10.3" )
        section_goal1:Add(preformatter:GeneratePreformattedCode(example1Code))

        CodeForIDE code1
        code1:AddFileText("Main.quorum", "//Assign the value of 7 to the Dividend and 2 to the value for the Divisor")
        IDE ide = AddIDE()
        ide:HideDisplay()
        ide:SetLightTheme()
        ide:SetCodeForIDE(code1:GetJsonArray())
        ide:SetIdeTitle("Activity: Assign the value")
        section_goal1:Add(ide)

        section_goal1:AddParagraph("Discuss both the reference page for types and the example code in teams. 
                            Mention what each symbol does in the line of code and what the computer will do when the code is run.")

        section_goal1:AddParagraph("Next, we will use test calculations to examine the rules of implicit casting. 
                            We will do this by examining the " + dq + "division" + dq + " operator (e.g., A / B). 
                            Build a program as a team that covers all patterns listed in the table below - assigning the " + dq + "Type" + dq + " for each variables that becomes Dividend and Divisor.")

        //Need a TABLE
        section_goal1:AddParagraph("integer / integer = integer. Example : 7 / 2 = 3 ")
        section_goal1:AddParagraph("integer / number = integer. Example : 7 / 2.0 = ERROR ")
        section_goal1:AddParagraph("integer / number = number. Example : 7 / 2.0 = 3.5 ")
        section_goal1:AddParagraph("number / number = number. Example : 7.0 / 2.0 = 3.5 ")
        section_goal1:AddParagraph("number / integer = integer. Example : 7.0 / 2 = ERROR ")
        section_goal1:AddParagraph("number / number = integer. Example : 7 / 2 = ERROR ")
        section_goal1:AddParagraph("number / number = integer. Example : 7 / 2 = 3.0 ")
        section_goal1:AddParagraph("number / integer = number. Example : 7.0 / 2 = 3.5 ")

        section_goal1:Add(break)

        AddHeading(section_goal1, "Example: division using integers", 4)

        CodeBlock example2Code
        Span s2
        Span s21
        s2:AddText(     "//In quorum, the 7 and the 2 are implicitly chosen as integers" + cr 
                    +   "//An integer divided by an integer is allowed." + cr 
                    +   "//In this case, 2 goes into 7 three times with a remainder of 1" + cr 
                    +   "//Therefore, the answer is 3" + cr)
        s2:SetClassAttribute("comment")
        example2Code:Add(s2)
        example2Code:AddText(   "integer a = 7 / 2" + cr 
                            +   "output " + dq + "a is " + dq + " + a" + cr + cr )
        s21:AddText(    "//Notice that this code would not compile" + cr 
                    +   "//So I better comment it out" + cr 
                    +   "//integer b = 7 / 2.0" + cr 
                    +   "//output " + dq + "b is " + dq + " + b" + cr)
        s21:SetClassAttribute("comment")
        example2Code:Add(s21)
        section_goal1:Add(preformatter:GeneratePreformattedCode(example2Code))


        CodeForIDE code2
        code2:AddFileText("Main.quorum", "//As a team, write the rest of the code examples for the table above")
        IDE ide2 = AddIDE()
        ide2:HideDisplay()
        ide2:SetLightTheme()
        ide2:SetCodeForIDE(code2:GetJsonArray())
        ide2:SetIdeTitle("Activity: Write code examples for the rest of the table")
        section_goal1:Add(ide2)

        Section section_goal2
        section_goal2:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal2, "Goal 2: Build Two Ramps", 2)

        section_goal2:AddParagraph("In this next task, we will build a pair of ramps with configurations that fits in our setting, room, table, etc. 
                            The purpose of building these ramps is to design an experiment where we will hypothesize about how far a ball will roll when run off of them. 
                            These ramps can be in any configuration, i.e., different lengths, shapes, sizes, or slopes. 
                            As an example of the ramps we could build, we could choose slope, as seen below:")

        section_goal2:Add(break)

        Bold rampsTitle
        rampsTitle:AddText("Ramps: ")
        section_goal2:Add(rampsTitle)

        UnorderedList rampsList
        rampsList:AddClassAttribute("list-disc list-outside pl-8")
        rampsList:AddListItem("Ramp 1: Same Length, Smaller slope")
        rampsList:AddListItem("Ramp 2: Same Length, Larger slope")
        section_goal2:Add(rampsList)

        section_goal2:AddParagraph("Use any material that is easy and available to construct the ramps (e.g, cardboard, playing cards, wood, chairs). 
                            If a team would like to choose different kinds of ramps to build, this is ok (so long as it is safe). 
                            In the next section, we will take an educated guess, called a hypothesis, about what the result of our experiment will be.")

        Section section_goal3
        section_goal3:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal3, "Goal 3: Create a hypothesis", 2)

        section_goal3:AddParagraph("In science, a hypothesis is an educated guess about what we think the result of an experiment will be or what we think might be true about the natural world. 
                            Often times, scientists construct hypotheses with the direct purpose of proving them to be false. 
                            In our case, we want to know which ramp will allow a ball rolling off of it to go farther. 
                            Here's an example:")

        AddHeading(section_goal3, "Example: An example hypothesis about ramp slopes", 4)

        Italic italic
        italic:AddText("Hypothesis")
        section_goal3:Add(italic)
        section_goal3:AddText(": The ramp with the higher slope will cause a rolling ball to travel farther.")

        section_goal3:AddParagraph("State explicitly which ramp you think will cause the ball to roll further. 
                            Remember, in science, it is perfectly ok if our hypothesis turns out to be incorrect. 
                            Our goal is to claim what we initially believe to be true and then to test that belief rigorously with experiments. 
                            Write the hypothesis down so it can be referred to later.")


        Section section_goal4
        section_goal4:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal4, "Goal 4: Run the experiment", 2)

        section_goal4:AddParagraph("In this part of the lab, we will test our hypothesis in an experiment. 
                            To do this, we are going to need a spreadsheet application, examples of which are Microsoft Excel, Google Sheets, Apple Numbers, or Open Office's Calc.")

        section_goal4:AddParagraph("Once we open a spreadsheet, roll a ball 15 times down each ramp. 
                            In each case, try to roll the ball in a consistent way to reduce measurement error. 
                            After each ball has been rolled, enter the distance into the spreadsheet to be used later.")


        Section section_goal5
        section_goal5:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal5, "Goal 5: Calculate the average", 2)

        section_goal5:AddParagraph("Measure the distance of the ball’s travel from the end of the ramp to where it naturally stops, then record the data in your spreadsheet. 
                            Do not touch the ball as it is rolling, as we are testing the ramp, not our own ability to manipulate the ball.")

        Bold proTip
        proTip:AddText("Pro Tip: ")
        section_goal5:Add(proTip)

        section_goal5:AddText("Scientists conduct experiments to test their assumptions.")

        section_goal5:Add(break)

        AddHeading(section_goal5, "Example: ", 4)

        CodeBlock example3Code
        Span s3
        Span s31
        Span s32
        s3:AddText(     "//Type in data for the first ramp" + cr)
        s3:SetClassAttribute("comment")
        example3Code:Add(s3)
        example3Code:AddText(   "number ramp1a = 5.5" + cr 
                            +   "number ramp1b = 6.2" + cr 
                            +   "number ramp1c = 9.4" + cr + cr )
        s31:AddText(    "//Type in data for the second ramp" + cr)
        s31:SetClassAttribute("comment")
        example3Code:Add(s31)
        example3Code:AddText(   "number ramp2a = 2.2" + cr 
                            +   "number ramp2b = 7.4" + cr 
                            +   "number ramp2c = 1.1" + cr + cr )
        s32:AddText(    "//Manually compute the average" + cr)
        s32:SetClassAttribute("comment")
        example3Code:Add(s32)
        example3Code:AddText(   "number ramp1Average = (ramp1a + ramp1b + ramp1c) / 3" + cr 
                            +   "number ramp2Average = (ramp2a + ramp2b + ramp2c) / 3" + cr
                            +   "output ramp1Average" + cr
                            +   "output ramp2Average" + cr )
        section_goal5:Add(preformatter:GeneratePreformattedCode(example3Code))

        CodeForIDE code3
        code3:AddFileText("Main.quorum", "//Write a program that calculates the averages for your team's ramp")
        IDE ide3 = AddIDE()
        ide3:HideDisplay()
        ide3:SetLightTheme()
        ide3:SetCodeForIDE(code3:GetJsonArray())
        ide3:SetIdeTitle("Activity: Program Averages")
        section_goal5:Add(ide3)

        Section section_goal6
        section_goal6:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal6, "Goal 6: Conduct an Online Meeting about the Results of our Experiment", 2)

        section_goal6:AddParagraph("Now that we have run our experiment, we need to think carefully about our data and decide whether we have confirmed our hypothesis, refuted it, or if our data is too inconclusive to tell. 
                            Once we have done so, we will share our results with others, which is an important part of the scientific process. 
                            In this section, we will do this by holding an online collaborative meeting. 
                            In this meeting, the team should discuss their results with the broader class in the following steps:")

        OrderedList ol

        ol:AddClassAttribute("list-decimal list-outside pl-8")

        ListItem li1
        ListItem li2
        ListItem li3
        ListItem li4
        ListItem li5
        li1:AddText("Setup an online place for students to discuss. This can be in any setting that is convenient, including email, Facebook, Skype, or other venues.")
        li2:AddText("Students should present the design of their ramps, their hypothesis, data, and results in this online setting.")
        li3:AddText("Students should present whether their hypothesis was confirmed, inconclusive, or not supported.")
        li4:AddText("Students should reflect on the results of their experiment and decide whether they have learned any new information.")
        li5:AddText("As a class, students should discuss whether working in groups helped speed up the process of designing the experiment and writing the software.")
        ol:Add(li1)
        ol:Add(li2)
        ol:Add(li3)
        ol:Add(li4)
        ol:Add(li5)
        section_goal6:Add(ol)

        bodyDiv:Add(section_goals)
        bodyDiv:Add(section_csp_curriculum)
        bodyDiv:Add(section_standards)
        bodyDiv:Add(section_overview)
        bodyDiv:Add(section_goal1)
        bodyDiv:Add(section_goal2)
        bodyDiv:Add(section_goal3)
        bodyDiv:Add(section_goal4)
        bodyDiv:Add(section_goal5)
        bodyDiv:Add(section_goal6)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about implicit type casting in the Quorum programming language by running a ramp experiment."
    end

    action GetSummaryName returns text
        return "Assignment (Ramp Experiment and Implicit Type Casting)"
    end
    action GetName returns text
        return "Assignment 2.1"
    end
    action GetShortDescription returns text
        return "how work Ramp Experiment and Implicit Type Casting in Quorum."
    end
    action GetLocation returns text
      if GetNewLocation() not= ""
        return GetNewLocation()
      end
      return "lessons/chapter2/assignment2_1.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Change later"
    end
end
