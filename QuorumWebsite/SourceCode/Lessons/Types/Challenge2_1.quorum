use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header


class Challenge2_1 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Challenge 2.1: Musical Piece - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Challenge 2.1: Musical Piece", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("Objectives", 2)
        bodyDiv:AddParagraph("The goal of this assignment is to learn the following:")
        
        UnorderedList objectivesList
        objectivesList:AddListItem("How to use the Music library to play chords")
        objectivesList:AddListItem("How to use multiple non-primitive data types in a single program")
        bodyDiv:Add(objectivesList)

        bodyDiv:AddHeading("Computer Science Principles Curriculum", 2)

        UnorderedList list
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.2, LO 1.2.3, EK 1.2.3A")
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EU 4.1, LO 4.1.1, EK 4.1.1B")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.2, LO 5.2.1, EK 5.2.1A, EK 5.2.1B, EK 5.2.1C, EK 5.2.1D, EK 5.2.1E, EK 5.2.1F")
        bodyDiv:Add(list)

        bodyDiv:AddHeading("Common Core Standards", 2)
        UnorderedList ccList
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards Â» Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.9-10.1, CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.8, CCSS.ELA-Literacy.RST.9-10.9")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8, CCSS.Math.Content.HSF.IF.A.1 ")
        bodyDiv:Add(ccList)


        bodyDiv:AddHeading("Overview", 2)

        Paragraph p1
        p1:AddText("In this assignment, you will write a program that plays music with a combination of notes and chords. 
                    This assignment allows you to create your own songs by combining single notes and chords. 
                    Create a new project and name it ")
        Bold assignmentTitle
        assignmentTitle:AddText("Challenge2_1")
        p1:Add(assignmentTitle)
        p1:AddText(".")
        bodyDiv:Add(p1)

        Paragraph p2
        CodeBlock playCode
        CodeBlock musicCode
        playCode:AddText("Play")
        musicCode:AddText("Music")
        p2:AddText("So far, you have focused on using the ")
        p2:Add(playCode)
        p2:AddText(" feature in the ")
        p2:Add(musicCode)
        p2:AddText(" class to play single notes. 
                    This feature can also be used to play multiple notes at once, called chords. 
                    In this assignment, you will create a piece of music utilizing both single notes and chords to create a piece of music that lasts at least one minute. ")
        bodyDiv:Add(p2)


        bodyDiv:AddHeading("Task 1", 2)

        Paragraph p3
        CodeBlock chordCode
        CodeBlock useCode
        chordCode:AddText("Chord")
        useCode:AddText("use")
        p3:AddText("To play chords in Quorum, you must use the ")
        p3:Add(chordCode)
        p3:AddText(" type. To include this type for use in your program, use the following ")
        p3:Add(useCode)
        p3:AddText(" statement:")
        bodyDiv:Add(p3)

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Sound.Chord"))

        bodyDiv:AddParagraph("To create a chord, you might use code like the following. 
                            This code creates a C Major chord.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("Chord c" + cr 
                                                        + "c:Add(60)" + cr
                                                        + "c:Add(64)" + cr
                                                        + "c:Add(67)" + cr))

        bodyDiv:AddParagraph("Once the chord has been created make sure the chord is played.")

//        SideBySideIDE playChordIDE
//        playChordIDE:SetUniqueIdentifier("playChord")
//        playChordIDE:Setup()
//        playChordIDE:GetIDETitle():AddText("Activity:")
//        playChordIDE:GetIDESubtitle():AddText("Play chords in Quorum")
//        bodyDiv:Add(playChordIDE)

        Paragraph activity1Paragraph
        Bold activity1Bold
        activity1Bold:AddText("Activity: Play chords in Quorum.")
        activity1Paragraph:Add(activity1Bold)
        bodyDiv:Add(activity1Paragraph)


        bodyDiv:AddHeading("Task 2: Analysis", 2)

        ListItem li1
        ListItem li2
        ListItem li3
        CodeBlock cb1
        li1:AddText("Compose a piece of music consisting of notes and chords.")
        li2:AddText("The piece of music must last at least one minute.")
        li3:AddText("Use the ")
        cb1:AddText("chord")
        li3:Add(cb1)
        li3:AddText(" type.")

        UnorderedList primitiveList1
        primitiveList1:Add(li1)
        bodyDiv:Add(primitiveList1)
        UnorderedList primitiveList2
        primitiveList2:Add(li2)
        bodyDiv:Add(primitiveList2)
        UnorderedList primitiveList3
        primitiveList3:Add(li3)
        bodyDiv:Add(primitiveList3)


//        SideBySideIDE composeMusicIDE
//        composeMusicIDE:SetUniqueIdentifier("composeMusic")
//        composeMusicIDE:Setup()
//        composeMusicIDE:GetIDETitle():AddText("Activity:")
//        composeMusicIDE:GetIDESubtitle():AddText("Compose a piece of music consisting of notes and chords.")
//        bodyDiv:Add(composeMusicIDE)

        Paragraph activity2Paragraph
        Bold activity2Bold
        activity2Bold:AddText("Activity: Compose a piece of music consisting of notes and chords.")
        activity2Paragraph:Add(activity2Bold)
        bodyDiv:Add(activity2Paragraph)


        bodyDiv:AddHeading("Sample Output", 2)

        bodyDiv:AddParagraph("Your output should be a song of at least 1 minute in length. 
                            All students' outputs will be different, since you all have different creative inspirations!")

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about coding MIDI based music using the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Challenge (Musical Piece)"
    end
    action GetName returns text
        return "Challenge 2.1"
    end
    action GetShortDescription returns text
        return "how a Musical Piece works in Quorum."
    end
    action GetLocation returns text
        return "lessons/chapter2/challenge2_1.html"
    end
end