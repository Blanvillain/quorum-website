use Libraries.Web.Page.all
use Libraries.Containers.Array

class Assignment2_2 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Assignment 2.2: Math - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Assignment 2.2: Math ", 1)
        bodyDiv:Add(headDiv)

        Section section_goals
        section_goals:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goals, "Goals", 2)
        section_goals:AddParagraph("The goal of this assignment is to learn the following:")
        
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Use a table to write math calculations")
        goalList:AddListItem("Use the Math library to create an object and round numbers")
        section_goals:Add(goalList)

        Section section_csp_curriculum
        section_csp_curriculum:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_csp_curriculum, "Computer Science Principles Curriculum", 2)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "Big Idea: Data and Information: ", "EK 3.1.1A, EK 3.1.1B, EK 3.1.1D, EK 3.1.1E, EK 3.1.2A, EK 3.1.2B, EK 3.1.2C, EK 3.1.2D, EK 3.1.2E, EK 3.1.2F, EK 3.2.1A, EK 3.2.1B, EK 3.2.1C, EK 3.2.1F, EK 3.2.2A, EK 3.2.2B, EK 3.2.2C, EK 3.2.2G")
        section_csp_curriculum:Add(list)

        Section section_standards
        section_standards:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_standards, "Common Core Standards", 2)
        UnorderedList ccList
        ccList:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards » Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.10, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.11-12.4, CCSS.ELA-Literacy.RST.11-12.5")
        AddListItemWithBoldAtFront(ccList, "Mathematics Content: High School Number and Quantity » Quantities: ", "CCSS.Math.Content.HSN.Q.1, CCSS.Math.Content.HSN.Q.2, CCSS.Math.Content.HSN.Q.3")
        AddListItemWithBoldAtFront(ccList, "Mathematics Content: High School Algebra » Seeing Structure in Exoressons: ", "CCSS.Math.Content.HSA.SEE.4")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP4, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8")
        section_standards:Add(ccList)

 

        Section section_overview
        section_overview:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_overview, "Overview", 2)

        Paragraph overviewP
        overviewP:AddText("In this assignment, you will write a program to compute the average of the distance a mouse runs during trials in an experiment. 
                            The experiment data is provided to calculate the average distance in terms of yards. 
                            In addition, you will write code to convert yards to different units of measurement. 
                            Create a new project and name it ")
        Bold Assi2_2Bold
        Assi2_2Bold:AddText("Assignment2_2")
        overviewP:Add(Assi2_2Bold)
        overviewP:AddText(".")
        section_overview:Add(overviewP)

        Section section_goal1
        section_goal1:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal1, "Goal 1: Use a table to write math calculations", 2)

        section_goal1:AddParagraph("An experiment was conducted to determine how far a mouse could run before encountering roadblocks or becoming exhausted. 
                            Six trials were conducted. 
                            The results of the experiment are shown in the table below:")

        WebTable table = AddWebTable("Trials and Distance")
        TableBody tableBody = AddTableBody()

        Array<text> header1
        header1:Add(AddTextBoldFront("Trials", " "))
        header1:Add(AddTextBoldFront("Distance (yards)", " "))
        TableHeader tableHeader = AddTableHeaderRow(header1)
        table:Add(tableHeader)

        Array<text> row
        row:Add("1")
        row:Add("98.2")
        tableBody:Add(AddTableBodyRow(row))

        Array<text> row2
        row2:Add("2")
        row2:Add("85.4")
        tableBody:Add(AddTableBodyRow(row2))

        Array<text> row3
        row3:Add("3")
        row3:Add("76.7")
        tableBody:Add(AddTableBodyRow(row3))

        Array<text> row4
        row4:Add("4")
        row4:Add("64.4")
        tableBody:Add(AddTableBodyRow(row4))

        Array<text> row5
        row5:Add("5")
        row5:Add("89.9")
        tableBody:Add(AddTableBodyRow(row5))

        Array<text> row6
        row6:Add("6")
        row6:Add("82.5")
        tableBody:Add(AddTableBodyRow(row6))

        table:Add(tableBody)
        section_goal1:Add(table)


        section_goal1:AddParagraph("Your program should add all of the trial distances together and compute the average distance in yards. 
                            The average is then converted into different measurement units. 
                            The table below shows the conversion of the yard into various units.")

        WebTable table2 = AddWebTable("Unit Conversion")
        TableBody tableBody2 = AddTableBody()

//        units:AddText("Units")
//        centimeters:AddText("Centimeters (cm)")
//        feet:AddText("Feet (ft)")
//        inches:AddText("Inches (in)")
//        meters:AddText("Meters (m)")
//        miles:AddText("Miles (mi)")
        
        Array<text> header2
        header2:Add(AddTextBoldFront("Units", " "))
        header2:Add(AddTextBoldFront("Centimeters (cm)", " "))
        header2:Add(AddTextBoldFront("Feet (ft)", " "))
        header2:Add(AddTextBoldFront("Inches (in)", " "))
        header2:Add(AddTextBoldFront("Meters (m)", " "))
        header2:Add(AddTextBoldFront("Miles (mi)", " "))
        TableHeader tableHeader2 = AddTableHeaderRow(header2)
        table2:Add(tableHeader2)


        Array<text> tableRow2
        tableRow2:Add("Yard (yd)")
        tableRow2:Add("91.44")
        tableRow2:Add("3")
        tableRow2:Add("36")
        tableRow2:Add("0.9144")
        tableRow2:Add("1/1760")
        tableBody2:Add(AddTableBodyRow(tableRow2))

        table2:Add(tableBody2)
        section_goal1:Add(table2)



        AddHeading(section_goal1, "Example: Find the average distance in yards.", 4)
        section_goal1:Add(preformatter:GeneratePreformattedCode(  "number totalDistance = 98.2 + 85.4 + 76.7 + 64.4 + 89.9 + 82.5" + cr
                                                        +   "number aveYards = totalDistance/6" + cr
                                                        +   "output aveYards" + cr))

        section_goal1:AddParagraph("After you run the example you should have in the output window the number 82.85.")

        CodeForIDE code1
        code1:AddFileText("Main.quorum", "//(centimeters, feet, inches, meters, and miles)")
        IDE ide = AddIDE()
        ide:HideDisplay()
        ide:SetLightTheme()
        ide:SetCodeForIDE(code1:GetJsonArray())
        ide:SetIdeTitle("Activity: Convert the average in yards to each of the provided units")
        section_goal1:Add(ide)


        Section section_goal2
        section_goal2:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_goal2, "Goal 2: Use the Math library to create an object and round numbers", 2)


        ListItem li3
        CodeBlock mathCode
        CodeBlock useCode
        CodeBlock useMath
        CodeBlock roundCode
        mathCode:AddText("Math")
        useCode:AddText("use")
        useMath:AddText("use Libraries.Compute.Math")
        roundCode:AddText("Round")
        li3:AddText("Round each result to the nearest tenth. For this, you will need to use the ")
        li3:Add(mathCode)
        li3:AddText(" library. The ")
        li3:Add(mathCode)
        li3:AddText(" library requires the following ")
        li3:Add(useCode)
        li3:AddText(" statement:")
        li3:Add(break)
        li3:Add(useMath)

        UnorderedList primitiveList3
        primitiveList3:AddClassAttribute("list-disc list-outside pl-8")
        primitiveList3:Add(li3)
        section_goal2:Add(primitiveList3)
        section_goal2:Add(break)

        Paragraph example1Paragraph
        Bold example1Bold
        example1Bold:AddText("Example: Round answers to the nearest tenth.")
        example1Paragraph:Add(example1Bold)
        section_goal2:Add(example1Paragraph)

        Paragraph example2Paragraph
        example2Paragraph:AddText("Use the example code below to create a ")
        example2Paragraph:Add(mathCode)
        example2Paragraph:AddText(" object. Then use the ")
        example2Paragraph:Add(roundCode)
        example2Paragraph:AddText(" action to round each answer to the nearest tenth. The number after the " + dq + "," + dq + " is the number of decimal places you want the answer rounded to.")
        section_goal2:Add(example2Paragraph)


        section_goal2:Add(preformatter:GeneratePreformattedCode(  "use Libraries.Compute.Math" + cr
                                                        +   "Math math" + cr
                                                        +   "number totalDistance = 98.2 + 85.4 + 76.7 + 64.4 + 89.9 + 82.5" + cr
                                                        +   "number aveYards = math:Round(totalDistance/6, 1)" + cr
                                                        +   "output aveYards" + cr))

        section_goal2:AddParagraph("After you run the example you should have in the output window the number 82.9.")
        section_goal2:Add(break)


        CodeForIDE code2
        code2:AddFileText("Main.quorum", "//(centimeters, feet, inches, meters, and miles)")
        IDE ide2 = AddIDE()
        ide2:HideDisplay()
        ide2:SetLightTheme()
        ide2:SetCodeForIDE(code2:GetJsonArray())
        ide2:SetIdeTitle("Activity: Convert the average in yards to each of the provided units")
        section_goal2:Add(ide2)

        bodyDiv:Add(section_goals)
        bodyDiv:Add(section_csp_curriculum)
        bodyDiv:Add(section_standards)
        bodyDiv:Add(section_overview)
        bodyDiv:Add(section_goal1)
        bodyDiv:Add(section_goal2)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about Math objects and rounding numbers in this lesson on the Quorum programming language."
    end

    private action GetDataCell(text value) returns TableData
        TableData data
        data:AddText(value)
        return data
    end

    action GetSummaryName returns text
        return "Assignment (Math)"
    end
    action GetName returns text
        return "Assignment 2.2"
    end
    action GetShortDescription returns text
        return "how work Math in Quorum."
    end

    action GetLocation returns text
      if GetNewLocation() not= ""
        return GetNewLocation()
      end
      return "lessons/chapter2/assignment2_2.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Change this later"
    end
end
