use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent

class Assignment2_5 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Assignment 2.5: More Movement, Tones and L.E.D. - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Assignment 2.5: More Movement, Tones and L.E.D. ", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("In this assignment you will practice the following computer science concepts:")
        
        UnorderedList goalList
        goalList:AddListItem("Creating Objects and Calling Actions on Objects")
        goalList:AddListItem("Using the Quorum Lego Library to play tones and turn on the L.E.D.")
        bodyDiv:Add(goalList)


        bodyDiv:AddHeading("Computer Science Principles Curriculum", 2)

        UnorderedList list
        AddListItemWithBoldAtFront(list, "Big Idea: Creativity: ", "EU 1.2, LO 1.2.3, EK 1.2.3A, EU 1.3, LO 1.3.1, EK 1.3.1A")
        AddListItemWithBoldAtFront(list, "Big Idea: Algorithms: ", "EU 4.1, LO 4.1.1, EK 4.1.1B")
        AddListItemWithBoldAtFront(list, "Big Idea: Programming: ", "EU 5.1, LO 5.1.1, EK 5.1.1B, EU 5.2, LO 5.2.1, EK 5.2.1C, EK 5.2.1D")
        bodyDiv:Add(list)

        bodyDiv:AddHeading("Common Core Standards", 2)
        UnorderedList ccList
        AddListItemWithBoldAtFront(ccList, "English Language Arts Standards » Science & Technical Subjects: ", "
        CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.3, CCSS.ELA-Literacy.RST.9-10.4, CCSS.ELA-Literacy.RST.9-10.5, CCSS.ELA-Literacy.RST.9-10.6, CCSS.ELA-Literacy.RST.11-12.2, CCSS.ELA-Literacy.RST.11-12.3, CCSS.ELA-Literacy.RST.9-10.1, CCSS.ELA-Literacy.RST.9-10.2, CCSS.ELA-Literacy.RST.9-10.7, CCSS.ELA-Literacy.RST.9-10.8, CCSS.ELA-Literacy.RST.9-10.9")
        AddListItemWithBoldAtFront(ccList, "Standards For Mathmatical Practice: ", "CCSS.Math.Practice.MP1, CCSS.Math.Practice.MP2, CCSS.Math.Practice.MP5, CCSS.Math.Practice.MP6, CCSS.Math.Practice.MP7, 
        CCSS.Math.Practice.MP8, CCSS.Math.Content.HSF.IF.A.1 ")
        bodyDiv:Add(ccList)

        bodyDiv:AddHeading("Vocabulary", 2)
        UnorderedList vocabularyList
        vocabularyList:AddListItem("Library")
        vocabularyList:AddListItem("Object")
        vocabularyList:AddListItem("Instantiation")
        vocabularyList:AddListItem("Action Call")
        vocabularyList:AddListItem("Parameters")
        vocabularyList:AddListItem("Parameter Passing")
        vocabularyList:AddListItem("Robot")
        vocabularyList:AddListItem("Motor")
        vocabularyList:AddListItem("Brick")
        vocabularyList:AddListItem("Port")
        bodyDiv:Add(vocabularyList)
        

        bodyDiv:AddHeading("Overview", 2)


        Paragraph p1 
        CodeBlock rotateByDegreesCode
        CodeBlock rotateToDegreeCode
        rotateByDegreesCode:AddText("RotateByDegrees")
        rotateToDegreeCode:AddText("RotateToDegree")
        p1:AddText("In this assignment you will write a program that combines the ")
        p1:Add(rotateByDegreesCode)
        p1:AddText("and the ")
        p1:Add(rotateToDegreeCode)
        p1:AddText(" statements to make the robot move in a L shape and come back. 
                    At the same time you will make the tone and the L.E.D. color change when moving forward or rotating.")
        bodyDiv:Add(p1)


        bodyDiv:AddHeading("Goal 1: Calling Actions on Objects", 2)
        Paragraph p2  
        CodeBlock motorCode
        CodeBlock legoCode
        CodeBlock motorControlCode
        motorCode:AddText("Motor")
        legoCode:AddText("Lego")
        motorControlCode:AddText("motorControl")
        p2:AddText("Begin by typing the appropriate code to use the ")
        p2:Add(motorCode)
        p2:AddText(" library in the Quorum ")
        p2:Add(legoCode)
        p2:AddText(" Library at the top of the file. Don’t forget to instantiate a new ")
        p2:Add(motorCode)
        p2:AddText(" object called ")
        p2:Add(motorControlCode)
        p2:AddText(".")
        bodyDiv:Add(p2)
 
        Paragraph p3
        CodeBlock waitCode
        Bold toBold
        Bold byBold
        waitCode:AddText("Wait")
        toBold:AddText("to")
        byBold:AddText("by")
        p3:AddText("To move the robot in this assignment you will combine the ")
        p3:Add(rotateToDegreeCode)
        p3:AddText(" and the ")
        p3:Add(rotateByDegreesCode)
        p3:AddText(" statements. 
                    Both of these actions work with two parameters, the name of the motor you want to rotate and the amount of degrees you want to rotate ")
        p3:Add(toBold)
        p3:AddText(", or rotate ")
        p3:Add(byBold)
        p3:AddText(". You will also need to remember to use the ")
        p3:Add(waitCode)
        p3:AddText(" statement.")
        bodyDiv:Add(p3)

        bodyDiv:AddParagraph("The difference between how these two actions work is:")


        ListItem li1
        ListItem li2
        li1:AddText("")
        li1:Add(rotateByDegreesCode)
        li1:AddText(" will add the new rotation on to it's current position and turn the motor as far as you specify. 
                    For example, if your motor has already been rotated one quarter turn and you issue a RotateByDegrees(90) instruction, the motor will now be rotated 180 degrees from it's original position.")
        li2:AddText("")
        li2:Add(rotateToDegreeCode)
        li2:AddText(" will rotate the motor to an absolute position like a compass heading, regardless of its last position. 
                    For example, no matter what the position of the motor, a RotateToDegree(180) will move the motor to the due south position (one half turn from it's base position.")

        UnorderedList primitiveList1
        primitiveList1:Add(li1)
        bodyDiv:Add(primitiveList1)
        UnorderedList primitiveList2
        primitiveList2:Add(li2)
        bodyDiv:Add(primitiveList2)


        bodyDiv:Add(break)



        bodyDiv:AddHeading("Example: Turn the robot.", 4)

        CodeBlock example1Code
        Span s1
        Span s2
        Span s3
        s1:AddText(     "//This line sets the speed of the motor" + cr
                    +   "//This value goes from 0 to 100 and max speed indicates two rotations per second with a full battery" + cr 
                    +   "//Let's set it to 50, or one rotation per second." + cr )
        s1:SetClassAttribute("comment")
        example1Code:Add(s1)
        example1Code:AddText(    "motorControl:SetSpeed(" + dq + "B" + dq + ", 50)" + cr )
        s2:AddText(     "//This line of code tells the Motor object named motorControl" + cr
                    +   "//that it should rotate the motor one full rotation (backward)" + cr 
                    +   "//Note: This does NOT turn the robot by 360 degrees backward, it turns the motor." + cr )
        s2:SetClassAttribute("comment")
        example1Code:Add(s2)
        example1Code:AddText(    "motorControl:RotateToDegree(" + dq + "B" + dq + ",-360)" + cr )
        s3:AddText(     "//This line tells the program to wait the motor to finish the action" + cr )
        s3:SetClassAttribute("comment")
        example1Code:Add(s3)
        example1Code:AddText(    "motorControl:Wait(" + dq + "B" + dq + ")" )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example1Code))

//        SideBySideIDE liftTheRobotIDE
//        liftTheRobotIDE:SetUniqueIdentifier("liftTheRobot")
//        liftTheRobotIDE:Setup()
//        liftTheRobotIDE:GetIDETitle():AddText("Activity: Lift the robot arm using the small motor.")
//        liftTheRobotIDE:GetIDESubtitle():AddText(" ")
//        bodyDiv:Add(liftTheRobotIDE)

        bodyDiv:AddHeading("Activity 1: Lift the robot arm using the small motor.", 4)
        
        bodyDiv:AddParagraph("After the robot is in it's position, use the RotateToDegree() action to raise the arm. 
                            Experiment with different positions.")

//        SideBySideIDE TurnTheRobotIDE
//        TurnTheRobotIDE:SetUniqueIdentifier("TurnTheRobot")
//        TurnTheRobotIDE:Setup()
//        TurnTheRobotIDE:GetIDETitle():AddText("Activity: Turn the robot")
//        TurnTheRobotIDE:GetIDESubtitle():AddText("Turn the robot around and return to the starting position.")
//        bodyDiv:Add(TurnTheRobotIDE)

         bodyDiv:AddHeading("Activity 2: Turn the robot around and return to the starting position.", 4)

        Paragraph p4 
        p4:AddText("In this activity, our goal is to tell the motor object that you want to move the motor C in the same way that we are moving motor B. 
                    We do this by using the ")
        p4:Add(rotateToDegreeCode)
        p4:AddText(" command.
                    After the turn, rotate your robot to head back over the same path it came from. 
                    When the robot is " + dq + "home" + dq + " turn it back around to prepare to run it again. 
                    You can put tape or a mark on the floor to remember the position if it helps. 
                    You can use a whichever Rotate action you prefer to use. 
                    Lower the arm to it's starting position.")
        bodyDiv:Add(p4)

        bodyDiv:AddHeading("Goal 2: Using the Quorum Lego Library to play tones and to turn on the L.E.D.", 2)

        Paragraph p5 
        CodeBlock soundCode
        CodeBlock librariesLegoCode
        CodeBlock librariesRobotsCode
        CodeBlock soundControlCode
        soundCode:AddText("Sound")
        librariesLegoCode:AddText("Libraries.Lego")
        librariesRobotsCode:AddText("Libraries.Robots.Lego.Sound")
        soundControlCode:AddText("soundControl")
        p5:AddText("To play tones you will need to use the ")
        p5:Add(soundCode)
        p5:AddText(" library in ")
        p5:Add(librariesLegoCode)
        p5:AddText(", so you need to include the use statement at the top of the file. 
                    The full path of the library is ")
        p5:Add(librariesRobotsCode)
        p5:AddText(". After the library inclusion, you will need to instantiate a new ")
        p5:Add(soundCode)
        p5:AddText(" object called ")
        p5:Add(soundControlCode)
        p5:AddText(".")
        bodyDiv:Add(p5)

        bodyDiv:AddParagraph("Instantiate a new Sound object called soundControl.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("Sound soundControl"))

        Paragraph p6 
        CodeBlock buttonCode
        CodeBlock buttonControlCode
        buttonCode:AddText("Button")
        buttonControlCode:AddText("buttonControl")
        p6:AddText("To turn on the L.E.D. you will need to include the ")
        p6:Add(buttonCode)
        p6:AddText(" library and instantiate a ")
        p6:Add(buttonCode)
        p6:AddText(" object called ")
        p6:Add(buttonControlCode)
        p6:AddText(".")
        bodyDiv:Add(p6)

        bodyDiv:AddHeading("Example: Play a tone.", 4)

        Paragraph p7 
        CodeBlock playToneCode
        playToneCode:AddText("PlayTone")
        p7:AddText("Once you have done this, you will use the ")
        p7:Add(playToneCode)
        p7:AddText(" statement to play the tones. The ")
        p7:Add(playToneCode)
        p7:AddText(" statement takes two parameters, frequency and duration.")
        bodyDiv:Add(p7)

        CodeBlock example2Code
        Span s4
        s4:AddText(     "//This line plays a tone in a frequency of 820 Hertz with a duration of 200 milliseconds" + cr
                    +   "//To give a reference, a frequency of 440 would be an " + dq + "A" + dq + " in music." + cr )
        s4:SetClassAttribute("comment")
        example2Code:Add(s4)
        example2Code:AddText(    "soundControl:PlayTone(820, 200)" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example2Code))

        bodyDiv:AddParagraph("You can change the frequency and duration of the tone. 
                            The frequency is between 200 and 20000 and different values will have different tones. 
                            You won't be able to hear differences between values that are too close to each other. 
                            Experiment with different tones to understand how they change.")


        bodyDiv:AddHeading("Example: Turn the L.E.D. green and solid.", 4)

        Paragraph p8 
        CodeBlock setLightPatternCode
        setLightPatternCode:AddText("SetLightPattern")
        p8:AddText("Use the ")
        p8:Add(setLightPatternCode)
        p8:AddText(" statement to turn on the L.E.D. The ")
        p8:Add(setLightPatternCode)
        p8:AddText(" statement takes one parameter, the pattern. 
                    The pattern that represents an orange and solid pattern is number 3. 
                    A list of the ")
        p8:AddLink("patterns for the LED lights is located here", "/tutorials/robots/legoButtons.html")
        p8:AddText(".")
        bodyDiv:Add(p8)

        CodeBlock example3Code
        Span s5
        s5:AddText(     "// This line turns on the L.E.D. " + cr )
        s5:SetClassAttribute("comment")
        example3Code:Add(s5)
        example3Code:AddText(    "buttonControl:SetLightPattern(1)" + cr )
        bodyDiv:Add(preformatter:GeneratePreformattedCode(example3Code))

//        SideBySideIDE insertSoundsLightsIDE
//        insertSoundsLightsIDE:SetUniqueIdentifier("insertSoundsLights")
//        insertSoundsLightsIDE:Setup()
//        insertSoundsLightsIDE:GetIDETitle():AddText("Activity: Insert some sounds and lights")
//        insertSoundsLightsIDE:GetIDESubtitle():AddText("Insert some sounds and lights into your code from Goal 1")
//        bodyDiv:Add(insertSoundsLightsIDE)

        bodyDiv:AddHeading("Activity: Insert some sounds and lights into your code from Goal 1.", 4)

        bodyDiv:AddParagraph("Insert lines like these to play the tones and change lights at different points while your robot is moving. 
                            The instruction to play a tone when the robot is moving forward must be on the line before the commands to move forward and the line with a different tone must be on the line before of the commands to rotate.")
        
        
        bodyDiv:AddParagraph("To complete the activity, you must move the robot in the L shape again but now with the tones and the L.E.D. 
                            You can use the sounds and lights to mark the times when the robot is changing to a new instruction.")



        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)


    end

    action GetMetaDescription returns text
        return "Learn how to use tones, LED lights, and movement in LEGO Mindstorms robots using the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Assignment (More Movement, Tones and L.E.D.)"
    end
    action GetName returns text
        return "Assignment 2.5"
    end
    action GetShortDescription returns text
        return "how work More Movement, Tones and L.E.D. in Quorum."
    end
    action GetLocation returns text
        return "lessons/chapter2/assignment2_5.html"
    end
end