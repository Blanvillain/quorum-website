use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Containers.Array
use Libraries.Web.Page.Link

class BarCharts is Lesson
    // text version needs cleaning, then do code version
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Bar Charts")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Bar Charts", 1)
        headDiv:AddText("Learn how to make and customize bar charts.")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("Bar Charts", 1)
        bodyDiv:AddParagraph("Bar charts are a common type of chart used within data science and often taught quite early within elementary school. Bar charts present categorical data with bars that represent the values. They may be vertical or horizontal.")
        
        bodyDiv:AddParagraph("Learning Objectives:")
        Array<text> objectives
        objectives:Add("Students will be able to create a bar chart from a dataset.")
        objectives:Add("Students will be able to label information displayed on the bar chart.")
        objectives:Add("Students will be able to customize bar charts.")
        objectives:Add("Students will be able to access the information from the bar charts using assistive technology. ")
        OrderedList ol = GenerateList(objectives)
        bodyDiv:Add(ol)

        bodyDiv:AddHeading("Creating a Bar Chart using Quorum Studio (15 minutes)",2)

        Link link1
        link1:AddText("Nights Out")
        link1:SetAddress("https://github.com/qorf/curriculum/blob/main/Reference/DataScience/Charts%20(New)/Data/Culture%20and%20Entertainment/WorldNightOut.csv")
        link1:SetTarget(link1:newTab)

        Link link2
        link2:AddText("Bar Charts")
        link2:SetAddress("https://quorumlanguage.com/tutorials/charts/barchart.html")
        link2:SetTarget(link2:newTab)

        Paragraph body1 = bodyDiv:AddParagraph("To create a bar chart, we will begin by creating a DataFrame. In order to do this, we will need to first download the ")
        body1:Add(link1)
        body1:AddText(" dataset (as a CSV file). We will then need to add the Factors and Columns before running the program to display the bar chart. In this lesson we can follow the tutorial available on our website: ")
        body1:Add(link2)
        body1:AddText(".")

        Link link3
        link3:AddText("Downloading CSVs for Our Charts")
        link3:SetAddress("https://quorumlanguage.com/tutorials/charts/downloading.html")
        link3:SetTarget(link3:newTab)

        Paragraph body2 = bodyDiv:AddParagraph("To start us off we will download the dataset, so that we can have the means to create a bar chart.You can follow the link to download ")
        body2:Add(link1)
        body2:AddText(" dataset. If you are lost on how to download the dataset from GitHub, here is a link to our tutorial, ")
        body2:Add(link3)
        body2:AddText(".")
        
        bodyDiv:AddParagraph("Night Outs dataset describes how much does it cost to spend the night out in different countries and cities around the world. It has 5 columns and 92 rows, but we will not be using all of the columns in this example. We will be using 3 columns: 'Country,' 'Item,' and 'Cost.' Here is a snippet of what the dataset should look like:")

        Array<text> rubricText1
        rubricText1:Add("Date Night")
        rubricText1:Add("Barcelona") 
        rubricText1:Add("Spain")
        rubricText1:Add("Dinner")
        rubricText1:Add("69.38")

        Array<text> rubricText2
        rubricText2:Add("Date Night")
        rubricText2:Add("Barcelona") 
        rubricText2:Add("Spain")
        rubricText2:Add("Drinks at Dinner")
        rubricText2:Add("21.28")

        Array<text> rubricText3
        rubricText3:Add("Date Night")
        rubricText3:Add("Barcelona") 
        rubricText3:Add("Spain")
        rubricText3:Add("Cinema Entry")
        rubricText3:Add("11.87")

        Array<text> rubricText4
        rubricText4:Add("Party Night")
        rubricText4:Add("Barcelona") 
        rubricText4:Add("Spain")
        rubricText4:Add("Taxi")
        rubricText4:Add("10.92")

        Array<text> rubricHeader1
        rubricHeader1:Add(AddTextBoldFront("Category", " "))
        rubricHeader1:Add(AddTextBoldFront("City", " "))
        rubricHeader1:Add(AddTextBoldFront("Country", " "))
        rubricHeader1:Add(AddTextBoldFront("Item", " "))
        rubricHeader1:Add(AddTextBoldFront("Cost", " "))

        Array<text> rubricRows1
        rubricRows1:Add(AddTableHeaderTag(rubricHeader1))
      
        rubricRows1:Add(AddTableDataTag(rubricText1))
        rubricRows1:Add(AddTableDataTag(rubricText2))
        rubricRows1:Add(AddTableDataTag(rubricText3))
        rubricRows1:Add(AddTableDataTag(rubricText4))
        
        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows1), "Nights Out CSV"))

        Link link4
        link4:AddText("DataFrame")
        link4:SetAddress("https://quorumlanguage.com/Libraries/Compute/Statistics/DataFrame.html")
        link4:SetTarget(link4:newTab)

        Link link5
        link5:AddText("BarChart")
        link5:SetAddress("https://quorumlanguage.com/Libraries/Interface/Controls/Charts/BarChart.html")
        link5:SetTarget(link5:newTab)

        Paragraph body3 = bodyDiv:AddParagraph("To start creating a bar chart, we need to import two libraries. ")
        body3:Add(link4)
        body3:AddText(", which is a frame where our chart will be drawn, and ")
        body3:Add(link5)
        body3:AddText(", which allows us to create a bar chart. Then we will initialize a DataFrame and load a comma separated values to the frame.")
        
        bodyDiv:AddHeading("Reading and Displaying Data (5 minutes)",2)

        Paragraph body4 = bodyDiv:AddParagraph("Now that we have the bar chart created, let us load the data from the comma separated file ")
        body4:Add(link1)
        body4:AddText(" and display the bar chart. The steps that we describe in this task can be followed in the 'Loading and Formatting' section that is available in our ")
        body4:Add(link2)
        body4:AddText(" tutorial.")
        
        bodyDiv:AddParagraph("Currently, we have only loaded the comma separated value file into the dataframe, and we are not reading anything from it. The first thing that we need to do is to load the columns and factors to be read by our bar chart. Specifically, we will add the three columns that we will be using in this tutorial: 'Country,' 'Item,' and 'Cost.' After we have loaded factors and columns, we need to create a bar chart object using the frame that we have filled. Finally, we can display the content of that bar chart. Next, we will be labeling and customizing our bar chart.")

        bodyDiv:AddHeading("Labeling the Bar Chart (15 minutes)",2)

        Paragraph body5 = bodyDiv:AddParagraph("The next step is to be able to add specific labels to the bar chart, both axes, adding subtitles, and changing the font size of the print. Adding these features will allow us to present our data in a clearer way. The steps that we describe in this task can be followed in the 'Labeling the Bar Chart' section that is available in our ")
        body5:Add(link2)
        body5:AddText(" tutorial.")
        
        bodyDiv:AddParagraph("First, we will add labels for our chart, x-axis, and y-axis. This allows the reader to distinguish between the information and to understand what data they are looking at. For our chart we can label it the following way: title - 'How Expensive are Night Outs Per Country?'; x-axis - 'Countries'; y-axis - 'Cost (in USD $).' If you feel like those labels are not enough, you can add a subtitle to the bar chart. For example, for this bar chart the subtitle cab be 'Various nightly activities cost in different countries.'")

        bodyDiv:AddHeading("Customizing the Bar Chart (10 minutes)",2)

        Link link6
        link6:AddText("Color Accessibility")
        link6:SetAddress("https://quorumlanguage.com/tutorials/charts/coloraccessibility.html")
        link6:SetTarget(link6:newTab)

        Paragraph body6 = bodyDiv:AddParagraph("Next, we explore how to change the color palette. The lesson uses the 'Colorgorical' palette but we want you to attempt to change the color palette by using the information on the")
        body6:Add(link6)
        body6:AddText(" page.")
        
        Paragraph body7 = bodyDiv:AddParagraph("The steps that we describe in this task can be followed in the 'Customizing the Bar Chart' section that is available in our ")
        body7:Add(link2)
        body7:AddText(" tutorial.")
        
        bodyDiv:AddParagraph("Lastly, we can create a legend for the bar chart, which will allow us to describe the data even better for the reader. For this chart the legend can be 'Activity,' and we can also set the location to left, right, top or bottom. Note: by default the location is set to right.")

        bodyDiv:AddHeading("Accessing the Bar Chart (10 minutes)",2)

        Link link7
        link7:AddText("tutorial on keyboard navigation")
        link7:SetAddress("https://quorumlanguage.com/tutorials/charts/charttextnavigation.html")
        link7:SetTarget(link7:newTab)

        Paragraph body8 = bodyDiv:AddParagraph("Now let us explore the graphic using the accessibility tools on our devices. When the bar chart has been created, we should see our chart pop up in a separate window. From there, we can reference this ")
        body8:Add(link7)
        body8:AddText(" using the arrow keys for accessibility. One note is that when a bar chart is saved onto our computer devices, they save as an SVG (scalable vector graphic) which maintains not only resizability but accessibility to read these charts using a screen reader.")
        
        bodyDiv:AddParagraph(" ")

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Bar Charts"
    end

    action GetSummaryName returns text
        return "Bar Charts"
    end

    action GetName returns text
        return "Bar Charts"
    end

    action GetShortDescription returns text
        return "Learn how to make and customize bar charts."
    end

    action GetLocation returns text
        return "lessons/DataScience/barCharts.html"
    end
end