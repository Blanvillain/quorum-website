use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Containers.Array
use Libraries.Web.Page.Link
use Libraries.System.File
use Libraries.System.FileReader
use Libraries.Web.Page.Section

class SVGExporting is Lesson
    // text version needs cleaning, then do code version
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Exporting SVGs")
        AddDefaultHeaders()

        // The VersionHelper has up-to-date query strings for the source files.
        // The query strings don't modify the file at all, but will prevent the cache from returning an old version of the file.
        VersionHelper versions

        // add necessary scripts
        AddScript("/script/quorumCharts.js" + versions:GetChartsScriptVersionQuery())

        // add necessary styles
        AddStylesheet("/style/quorumCharts.css" + versions:GetChartsStyleVersionQuery())

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division leftDiv = divs:Get(0)
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Exporting SVGs", 1)
        headDiv:AddParagraph("Learn how to export and navigate through SVGs")
        bodyDiv:Add(headDiv)

        Section introSection
        introSection:AddClassAttribute("flex flex-col gap-y-2")

        AddHeading(introSection, "Learning Objectives", 1)
        introSection:AddParagraph("Quorum has multiple charts and sometimes it can be confusing to keep track of the features each bar can offer to the user. In this tutorial we will list out the list of features that each of the charts that available in Quorum is capable of.")

        
        introSection:AddParagraph("The student will learn:")
        Array<text> objectives
        objectives:Add("Students will be able to learn about an SVG and why we use them in Quorum")
        objectives:Add("Students will be able to save their charts and access them outside of Quorum Studio")
        objectives:Add("Students will be able to navigate through accessible capabilities using SVGs")
        OrderedList ol = GenerateList(objectives)
        introSection:Add(ol)

        AddHeading(introSection, "What are SVGs? (10 min)", 2)

        introSection:AddParagraph("SVGs are scalable vector graphics that present a unique quality: no matter how zoomed in they are, they will maintain a high quality image. SVGs are a tool to display graphics or charts because vectors can be scaled up or down and would not lose resolution. They are a web-friendly file format that as opposed to regular images such as JPEGS or PNGs that would eventually become blurry if zoomed. We can discuss why it would be necessary to have charts be in an SVG format. ")
        introSection:AddParagraph("In Quorum, we use SVGs because they have the ability to become accessible for individuals who have visual impairments. What this means is that every bar or dot or text can be read aloud using a screen reader since vectors are essentially mathematical formulas based on points and lines within a grid. Since every piece is its own vector, we are able to distinguish between different parts of the SVG. We will go more in depth on accessibility later in the section.")
        introSection:AddParagraph("Let us also note that SVGs in Quorum are uniquely programmed to have this accessibility feature and we will demonstrate with an example of a non-accessible SVG and an accessible SVG.")

        // non accessible vs accessible SVG

        AddHeading(introSection, "Refresher on Displaying our Charts (5 Minutes)",2)
    
        introSection:AddParagraph("On every chart we have created, the way we are able to view the charts we have created is with this line of code:")
        introSection:Add(preformatter:GeneratePreformattedCode("chart:Display()"))
        introSection:AddParagraph("What this does is that our chart object, whether it is a bar chart, line chart, etc. calls an action called Display(). This action uses Quorumï¿½s game engine and opens up a window via a pop-up box inside of Quorum Studio and will display our created chart. By default, the chart will be created catered towards the size of our computer screens, but we can also modify the chart size. What we will need to do is insert parameters inside the Display(integer height, integer width) function as such:")
        introSection:Add(preformatter:GeneratePreformattedCode("chart:Display(1080, 720)"))
        introSection:AddParagraph("This actually calls a different action from the original Display() action as it now requires parameters for height and width. Note that it is best to see the different sizes to be changed inside of Quorum Studio versus the web-based IDE. Let us take a few minutes to change the sizes of our charts.")

        AddHeading(introSection, "Saving Our Charts as an SVG (10 Minutes)", 2)

        Link linkC = GenerateDefaultLink()
        linkC:AddText("save the chart onto our computers")
        linkC:SetAddress("https://quorumlanguage.com/tutorials/charts/saving.html")
        linkC:SetTarget(linkC:newTab)

        Paragraph p1 = introSection:AddParagraph(" ")
        p1:AddText("Now that we have our chart created and displayed, it may be cumbersome to always have to run the Quorum program in order to view our chart. However, we can actually save the chart as an SVG into our computer using Quorum Studio. We can follow this tutorial on how to ")
        p1:Add(linkC)
        p1:AddText(".")

        introSection:AddParagraph("The location of our SVG will be within the main project folder where we have source code of the chart file we created.")

        AddHeading(introSection, "Accessibility Features with SVGs (15 Minutes)", 2)
  
        Link linkD = GenerateDefaultLink()
        linkD:AddText("accessibility tutorial")
        linkD:SetAddress("https://quorumlanguage.com/tutorials/charts/charttextnavigation.html")
        linkD:SetTarget(linkD:newTab)

        Paragraph p2 = introSection:AddParagraph(" ")
        p2:AddText("Although accessibility with our SVGs has been discussed prior throughout these lessons, it is essential to know how to navigate with the SVGS. To know the keyboard hotkeys on our charts, we can follow this ")
        p2:Add(linkD)
        p2:AddText(". Let us try these hotkeys on different types of charts.")

        
        bodyDiv:Add(introSection)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Exporting SVGs"
    end

    action GetSummaryName returns text
        return "Exporting SVGs"
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "programming for beginners, data science, 
        programming, anova, chart, graph, accessibility, bar chart, histogram, box plot, violin plot, scatter plot,
        computer science, computer languages, Quorum programming language, distribution, accessible programming")
        AddMetaData(keywords)
    end

    action GetName returns text
        return "Exporting SVGs"
    end

    action GetShortDescription returns text
        return "Learn how to export and navigate through SVGs."
    end

    action GetLocation returns text
        return "lessons/DataScience/SVGExport.html"
    end
end