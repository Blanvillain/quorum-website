use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Containers.Array
use Libraries.Web.Page.Link
use Libraries.System.File
use Libraries.System.FileReader
use Libraries.Web.Page.Section
use Libraries.Web.Page.WebTable

class MultiChartsColorsOptions is Lesson
    // text version needs cleaning, then do code version
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Multi-Charts, Colors, and Options")
        AddDefaultHeaders()

        // The VersionHelper has up-to-date query strings for the source files.
        // The query strings don't modify the file at all, but will prevent the cache from returning an old version of the file.
        VersionHelper versions

        // add necessary scripts
        AddScript("/script/quorumCharts.js" + versions:GetChartsScriptVersionQuery())

        // add necessary styles
        AddStylesheet("/style/quorumCharts.css" + versions:GetChartsStyleVersionQuery())

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division leftDiv = divs:Get(0)
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Multi-Charts, Colors, and Options", 1)
        headDiv:AddParagraph("Understanding the charts and their options that are available in Quorum")
        bodyDiv:Add(headDiv)

        Section introSection
        introSection:AddClassAttribute("flex flex-col gap-y-2")

        AddHeading(introSection, "Learning Objectives", 1)
        introSection:AddParagraph("Quorum has multiple charts and sometimes it can be confusing to keep track of the features each bar can offer to the user. In this tutorial we will list out the list of features that each of the charts that available in Quorum is capable of.")

        
        introSection:AddParagraph("The student will learn:")
        Array<text> objectives
        objectives:Add("Students will be able to change colors within graphics")
        objectives:Add("Students will be able to separate their charts")
        objectives:Add("Students will be able to identify which unique functions they can use with each chart type")
        OrderedList ol = GenerateList(objectives)
        introSection:Add(ol)

        AddHeading(introSection, "Set up Scatter Plot (10 min)", 2)

        Link linkA = GenerateDefaultLink()
        linkA:AddText("Dogs dataset")
        linkA:SetAddress("https://github.com/qorf/quorum-website/blob/main/QuorumWebsite/html/data/Dogs.csv")
        linkA:SetTarget(linkA:newTab)
    
        Link linkB = GenerateDefaultLink()
        linkB:AddText("Scatter Plot Tutorial")
        linkB:SetAddress("https://quorumlanguage.com/tutorials/charts/scatterplot.html")
        linkB:SetTarget(linkB:newTab)

        Paragraph p1 = introSection:AddParagraph(" ")
        p1:AddText("A lot of what we will talk about goes beyond just scatter plots, but since it would take a while to experiment with every feature on every graph, we'll do the highlights instead. Scatter plots have many interesting features, so we're going to start by getting one set up with the ")
        p1:Add(linkA)
        p1:AddText(". If you want more information about how to create a scatter plot, look at our ")
        p1:Add(linkB)
        p1:AddText(". ")

        AddIDE(introSection,"Basic Scatter Plot","Basic Scatter Plot","/examples/Epiq/BasicScatterPlot.quorum")

        AddHeading(introSection, "Features of the Quorum Charts (10 Minutes)",2)
    
        introSection:AddParagraph("Below are the various chart features, some of which are universal, and others that are chart specific. Take a few minutes to scan over them briefly, but don't worry about going through everything in close detail.")
        introSection:AddParagraph("Here are the options that are available for all of the charts that are implemented in Quorum: SetTitle, SetSubtitle, SetXAxisTitle, SetYAxisTitle, SetXAxisMinimum, SetYAxisMinimum, SetXAxisMaximum, SetYAxisMaximum, SetXTickInterval, SetYTickInterval, SetColorPalette, SetLegendLocationToBottom (SetLegendLocationToTop, SetLegendLocationToRight, SetLegendLocationToLeft), SetLegendTitle, SeparateBySeries, SeparateByFactors (Note: Histograms and Line Charts do not have this).")

        Array<text> rubricText1
        rubricText1:Add("StackBars")
        rubricText1:Add("Yes")
        rubricText1:Add("Yes") 
        rubricText1:Add("No")
        rubricText1:Add("No")
        rubricText1:Add("No")
        rubricText1:Add("No")
        rubricText1:Add("No")

        Array<text> rubricText2
        rubricText2:Add("SortByBarSize")
        rubricText2:Add("Yes")
        rubricText2:Add("No") 
        rubricText2:Add("No")
        rubricText2:Add("No")
        rubricText2:Add("No")
        rubricText2:Add("No")
        rubricText2:Add("No")

        Array<text> rubricText3
        rubricText3:Add("OverlayBars")
        rubricText3:Add("No")
        rubricText3:Add("Yes") 
        rubricText3:Add("No")
        rubricText3:Add("No")
        rubricText3:Add("No")
        rubricText3:Add("No")
        rubricText3:Add("No")

        Array<text> rubricText4
        rubricText4:Add("SetBinWidth")
        rubricText4:Add("No")
        rubricText4:Add("Yes") 
        rubricText4:Add("No")
        rubricText4:Add("No")
        rubricText4:Add("No")
        rubricText4:Add("No")
        rubricText4:Add("No")

        Array<text> rubricText5
        rubricText5:Add("SetDonutHolePercent")
        rubricText5:Add("No")
        rubricText5:Add("No") 
        rubricText5:Add("Yes")
        rubricText5:Add("No")
        rubricText5:Add("No")
        rubricText5:Add("No")
        rubricText5:Add("No")

        Array<text> rubricText6
        rubricText6:Add("SetLineDensity")
        rubricText6:Add("No")
        rubricText6:Add("No") 
        rubricText6:Add("No")
        rubricText6:Add("Yes")
        rubricText6:Add("No")
        rubricText6:Add("No")
        rubricText6:Add("No")
        
        Array<text> rubricText7
        rubricText7:Add("SetPointDensity")
        rubricText7:Add("No")
        rubricText7:Add("No") 
        rubricText7:Add("No")
        rubricText7:Add("No")
        rubricText7:Add("Yes")
        rubricText7:Add("No")
        rubricText7:Add("No")

        Array<text> rubricText8
        rubricText8:Add("HideOutliers")
        rubricText8:Add("No")
        rubricText8:Add("No") 
        rubricText8:Add("No")
        rubricText8:Add("No")
        rubricText8:Add("No")
        rubricText8:Add("Yes")
        rubricText8:Add("No")

        Array<text> rubricText9
        rubricText9:Add("SetBandWidth")
        rubricText9:Add("No")
        rubricText9:Add("No") 
        rubricText9:Add("No")
        rubricText9:Add("No")
        rubricText9:Add("No")
        rubricText9:Add("No")
        rubricText9:Add("Yes")

        Array<text> rubricText10
        rubricText10:Add("IsSplit")
        rubricText10:Add("No")
        rubricText10:Add("No") 
        rubricText10:Add("No")
        rubricText10:Add("No")
        rubricText10:Add("No")
        rubricText10:Add("No")
        rubricText10:Add("Yes")

        

        Array<text> rubricHeader1
        rubricHeader1:Add("Function")
        rubricHeader1:Add("Bar Charts")
        rubricHeader1:Add("Histograms")
        rubricHeader1:Add("Pie Charts")
        rubricHeader1:Add("Line Charts")
        rubricHeader1:Add("Scatter Plots")
        rubricHeader1:Add("Box Plots")
        rubricHeader1:Add("Violin Plots")

        Array<Array<text>> table
        table:Add(rubricHeader1)
      
        table:Add(rubricText1)
        table:Add(rubricText2)
        table:Add(rubricText3)
        table:Add(rubricText4)
        table:Add(rubricText5)
        table:Add(rubricText6)
        table:Add(rubricText7)
        table:Add(rubricText8)
        table:Add(rubricText9)
        table:Add(rubricText10)

        WebTable webTable = GetDefaultTable("Function Availability by Chart Type", table)
        introSection:Add(webTable)
        

        Array<text> rubricText11
        rubricText11:Add("StackBars")
        rubricText11:Add("StackBars() will stack bars on top of each other when a group contains multiple bars. They are not stacked by default.")

        Array<text> rubricText12
        rubricText12:Add("SortByBarSize")
        rubricText12:Add("SortByBarSize() takes in no parameters and will sort the bars from largest bar to smallest bar. Note that it only will work with one factor added.") 

        Array<text> rubricText13
        rubricText13:Add("OverlayBars")
        rubricText13:Add("OverlayBars() will overlay bars on top of each other when a group contains multiple bars. They are not overlayed by default.")

        Array<text> rubricText14
        rubricText14:Add("SetBinWidth")
        rubricText14:Add("SetBinWidth() will override the auto-calculated bin width with a user determined interval.")

        Array<text> rubricText15
        rubricText15:Add("SetDonutHolePercent")
        rubricText15:Add("SetDonutHolePercent() takes in a decimal value which will adjust the size of the hole in relation to the size of the pie chart. Larger percentages will make the hole bigger and smaller percentages will make the hole smaller.")

        Array<text> rubricText16
        rubricText16:Add("SetLineDensity")
        rubricText16:Add("SetLineDensity(number size) takes in an integer as a parameter and will adjust the thickness of the lines within the chart.")

        Array<text> rubricText17
        rubricText17:Add("SetPointDensity")
        rubricText17:Add("This function takes in an integer that will adjust the size of the dots of the scatter plot.")

        Array<text> rubricText18
        rubricText18:Add("HideOutliers")
        rubricText18:Add("This function does not take any parameters and it will hide the outliers from the chart.")

        Array<text> rubricText19
        rubricText19:Add("SetBandWidth")
        rubricText19:Add("This function takes in an integer that will make a violin chart more or less exaggerated.")

        Array<text> rubricText20
        rubricText20:Add("IsSplit")
        rubricText20:Add("This function takes in a boolean that will split the violins if there are two violin charts in a group.")


        Array<text> rubricHeader
        rubricHeader:Add("Function")
        rubricHeader:Add("Description")

        Array<Array<text>> table2
        table2:Add(rubricHeader)
      
        table2:Add(rubricText11)
        table2:Add(rubricText12)
        table2:Add(rubricText13)
        table2:Add(rubricText14)
        table2:Add(rubricText15)
        table2:Add(rubricText16)
        table2:Add(rubricText17)
        table2:Add(rubricText18)
        table2:Add(rubricText19)
        table2:Add(rubricText20)

        WebTable webTable2 = GetDefaultTable("Description of the Chart Functions", table2)
        introSection:Add(webTable2)
 
        AddHeading(introSection, "Adding Features to Scatter Plot (10 minutes)", 2)

        Link linkC = GenerateDefaultLink()
        linkC:AddText("Color Accessibility")
        linkC:SetAddress("https://quorumlanguage.com/tutorials/charts/coloraccessibility.html")
        linkC:SetTarget(linkC:newTab)

        Paragraph p3 = introSection:AddParagraph(" ")
        p3:AddText("Let's now try adding some features to our scatter plot from before. Scatter plots have the ability to change the point size with SetPointDensity(), as well as changing the axis limits, legend location and colors. Try increasing the point size, moving the legend to the top and changing the colors. For a comprehensive list of all the available colors, look at our ")
        p3:Add(linkC)
        p3:AddText(" page. Besides that, you can play around with any of the numbers to see how it changes the chart.")

        AddIDE(introSection,"Scatter Plot with Features","Scatter Plot with Features","/examples/Epiq/FeaturesScatterPlot.quorum")

        AddHeading(introSection, "Separate by Factor and Separate by Series (30 Minutes)",2)

        introSection:AddParagraph("In this part of the tutorial we will be discussing two ways of separating the charts from one another. These functions are SeparateByFactor() and SeparateBySeries(). SeparateByFactor() will separate the chart into a grid of subcharts based on the bar groups. It takes in an integer as the number of columns in the grid. If empty, it results in a single-column grid. SeparateBySeries() will separate the chart into a grid of subcharts based on the legend (series). It takes in an integer as the number of columns in the grid. If empty, it results in a single-column grid.")
           
        Link linkD = GenerateDefaultLink()
        linkD:AddText("Chart Separation tutorial")
        linkD:SetAddress("https://quorumlanguage.com/tutorials/charts/chartSeparation.html")
        linkD:SetTarget(linkD:newTab)

        Paragraph p4 = introSection:AddParagraph(" ")
        p4:AddText("To learn more about which inputs can be used for each function, read our ")
        p4:Add(linkD)
        p4:AddText(".")

        AddHeading(introSection, "Series Separation For Scatter Plot (10 Minutes)",2)

        introSection:AddParagraph("We have 2 columns (numerical) and 1 factor in this plot. By following the table above, we know that we can use SeparateBySeries. Without SeparateBySeries, the data can be less clear, since the only other way to show it is color coding. ")
        introSection:AddParagraph("Here we can use SeparateBySeries to present the data clearly, and 10 showcases a separation that is easy to understand and not cluttered. It will split the interval into 10 units, and there will be 10 elements in each row. ")

        AddIDE(introSection,"Split Scatter Plot","Split Scatter Plot","/examples/Epiq/SplitScatterPlot.quorum")

        File f
        FileReader reader
    
        AddHeading(introSection, "Final Chart", 2)
    
        Division chart1
        chart1:SetStyle("min-width: 100px; max-width: 100%;")
        f:SetPath("html/media/epiq/datascience/split.svg")
        reader:OpenForRead(f)
        chart1:AddText(reader:Read())
        reader:Close()
        
        introSection:Add(chart1)

        AddHeading(introSection, "Relevant Common Core Standards",2)
        
        text standardsPath = "https://corestandards.org/wp-content/uploads/2023/09/ADA-Compliant-Math-Standards.pdf"

        Link link15 = GenerateDefaultLink()
        link15:AddText("website")
        link15:SetAddress(standardsPath)
        link15:SetTarget(link15:newTab)
        
        Paragraph p5 = introSection:AddParagraph("")
        p5:AddText("We use the following ")
        p5:Add(link15)
        p5:AddText(" for common core standards in relation to histograms and measurements of distribution.")

        Link link8 = GenerateDefaultLink()
        link8:AddText("CCSS.MATH.CONTENT.HSS.ID.A.1")
        link8:SetAddress(standardsPath)
        link8:SetTarget(link8:newTab)
    
        Link link9 = GenerateDefaultLink()
        link9:AddText("CCSS.MATH.CONTENT.HSS.ID.B.6")
        link9:SetAddress(standardsPath)
        link9:SetTarget(link9:newTab)
        
        p5:Add(link8)
        p5:AddText(": Represent data with plots on the real number line (dot plots, histograms, and box plots).")

        p5:Add(link9)
        p5:AddText(": Represent data on two quantitative variables on a scatter plot, and describe how the variables are related.")
        
        bodyDiv:Add(introSection)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Multi-Charts, Colors, and Options"
    end

    action GetSummaryName returns text
        return "Multi-Charts, Colors, and Options"
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "programming for beginners, data science, 
        programming, anova, chart, graph, accessibility, bar chart, histogram, box plot, violin plot, scatter plot,
        computer science, computer languages, Quorum programming language, distribution, accessible programming")
        AddMetaData(keywords)
    end

    action GetName returns text
        return "Multi-Charts, Colors, and Options"
    end

    action GetShortDescription returns text
        return "Understanding customization of individual charts using Quorum."
    end

    action GetLocation returns text
        return "lessons/DataScience/multiChartsColorsOptions.html"
    end
    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Data Science"
    end
end
