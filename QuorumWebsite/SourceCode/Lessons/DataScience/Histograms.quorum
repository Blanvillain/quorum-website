use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Containers.Array
use Libraries.Web.Page.Link
use Libraries.Web.Page.Section
use Libraries.Web.Page.WebTable

class Histograms is Lesson
    // text version needs cleaning, then do code version
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Histograms, Skew, and Kurtosis")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division leftDiv = divs:Get(0)
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Histograms, Skew, and Kurtosis", 1)
        headDiv:AddParagraph("Understanding distribution using histograms, kurtosis, and skew")
        bodyDiv:Add(headDiv)

        Section introSection
        introSection:AddClassAttribute("flex flex-col gap-y-2")

        AddHeading(introSection, "Learning Objectives", 1)
        introSection:AddParagraph("A histogram is a graphical representation that organizes a group of data points into user-specific rangers. It synthesizes a data series into an easily understandable visual representation by taking many data points and grouping them into logical ranges (or bins). ")
        introSection:AddParagraph("While a histogram looks similar to a bar chart (since they both use bars to represent the data), they are not technically the same. Histograms represent the frequency of distribution of variables in a data set while a bar chart typically represents a graphical comparison of categorical variables. ")        

        introSection:AddParagraph("The student will learn:")
        Array<text> objectives
        objectives:Add("Students will be able to create a histogram from a dataset.")
        objectives:Add("Students will be able to label information displayed on the histogram.")
        objectives:Add("Students will be able to customize histogram.")
        objectives:Add("Students will be able to access the information from the histogram using assistive technology. ")
        OrderedList ol = GenerateList(objectives)
        introSection:Add(ol)

        Link link1
        link1:AddText("Airbnb NYC dataset")
        link1:SetAddress("https://raw.githubusercontent.com/qorf/curriculum/main/Reference/DataScience/Charts%20(New)/Data/Other/AB_NYC_2019.csv")
        link1:SetTarget(link1:newTab)

        Link link2
        link2:AddText("Histograms")
        link2:SetAddress("https://quorumlanguage.com/tutorials/charts/histogram.html")
        link2:SetTarget(link2:newTab)

        Link link3
        link3:AddText("Downloading CSVs for our charts")
        link3:SetAddress("https://quorumlanguage.com/tutorials/charts/downloading.html")
        link3:SetTarget(link3:newTab)

        
        
        Paragraph p1 = introSection:AddParagraph(" ")
        AddHeading(introSection, "Creating a Histogram using Quorum Studio (10 Minutes)",2)
        p1:AddText("To create a histogram, we will begin by creating a DataFrame. In order to do this, we will need to first download the ") 
        p1:Add(link1)
        p1:AddText(" dataset (as a CSV file). We will then need to add the Factors and Columns before running the program to display the histogram. In this lesson we can follow the tutorial available on our website: ")
        p1:Add(link2)
        

        Paragraph p2 = introSection:AddParagraph(" ")
        p2:AddText("To start us off we will download the dataset, so that we can have the means to create a bar chart.You can follow the link to download ")
        p2:Add(link1)
        p2:AddText(" dataset. If you are lost on how to download the dataset from GitHub, here is a link to our tutorial, ")
        p2:Add(link3)

        introSection:AddParagraph("The Airbnb dataset describes public data of Airbnbs in New York City such as the name of the Airbnb, the host, the neighborhood, the price, room type, etc. It has 15 columns and 250 entries (rows) of listed Airbnb stays. We will be using one column, 'Price' for this lesson. Here is a snippet of what this dataset looks like:")

        Array<text> rubricText1
        rubricText1:Add("2539")
        rubricText1:Add("Clean & quiet apt home by the park") 
        rubricText1:Add("2787")
        rubricText1:Add("John")
        rubricText1:Add("Brooklyn")

        
        Array<text> rubricText2
        rubricText2:Add("2595")
        rubricText2:Add("Skylit Midtown Castle") 
        rubricText2:Add("2845")
        rubricText2:Add("Jennifer")
        rubricText2:Add("Manhattan")

        Array<text> rubricText3
        rubricText3:Add("3647")
        rubricText3:Add("THE VILLAGE OF HARLEM....NEW YORK !") 
        rubricText3:Add("4632")
        rubricText3:Add("Elisabeth")
        rubricText3:Add("Manhattan")

        Array<text> rubricText4
        rubricText4:Add("3831")
        rubricText4:Add("Cozy Entire Floor of Brownstone") 
        rubricText4:Add("4869")
        rubricText4:Add("LisaRoxanne")
        rubricText4:Add("Brooklyn")
        
        Array<text> rubricHeader
        rubricHeader:Add("ID")
        rubricHeader:Add("Name")
        rubricHeader:Add("Host ID")
        rubricHeader:Add("Host Name")
        rubricHeader:Add("Neighborhood")

        Array<Array<text>> table
        table:Add(rubricHeader)
      
        table:Add(rubricText1)
        table:Add(rubricText2)
        table:Add(rubricText3)
        table:Add(rubricText4)
      
        WebTable webTable = GetDefaultTable("Airbnb Prices in NYC CSV", table)
        introSection:Add(webTable)


        Link link4
        link4:AddText("DataFrame")
        link4:SetAddress("https://quorumlanguage.com/Libraries/Compute/Statistics/DataFrame.html")
        link4:SetTarget(link4:newTab)

        Link link5
        link5:AddText("Histogram")
        link5:SetAddress("https://quorumlanguage.com/Libraries/Interface/Controls/Charts/Histogram.html")
        link5:SetTarget(link5:newTab)

        Paragraph p3 = introSection:AddParagraph("")
        p3:AddText("To start creating a Histogram, we need to import two libraries. ")
        p3:Add(link4)
        p3:AddText(", which is a frame where our chart will be drawn, and ")
        p3:Add(link5)
        p3:AddText(", which allows us to create a histogram. Then we will initialize a DataFrame and load a comma separated values to the frame.
")

        AddHeading(introSection, "Reading and Displaying Data (5 minutes)",2)
        Paragraph p4 = introSection:AddParagraph(" ")
        p4:AddText("Now that we have the histogram created, let us load the data from the ")
        p4:Add(link1)
        p4:AddText(" and display the histogram.")
        
        Paragraph p5 = introSection:AddParagraph(" ")
        p5:AddText("The steps that we describe in this task can be followed in the 'Loading and Formatting' section that is available in our ")
        p5:Add(link2)
        p5:AddText(" tutorial.")

        introSection:AddParagraph("Currently, we have only loaded the comma separated value file into the dataframe, and we are not reading anything from it. The first thing that we need to do is to load the columns and factors to be read by our bar chart. Specifically, we will add the one column that we will be using in this tutorial: 'Price.' After we have loaded the column, we need to create a histogram object using the frame that we have filled. Finally, we can display the content of that histogram. Next, we will be labeling and customizing our histogram.")


        AddHeading(introSection, "Labeling the Histogram (10 minutes)",2)

        introSection:AddParagraph("The next step is to be able to add specific labels to the entire histogram, both axes, adding subtitles, and changing the font size of the print. Adding these features will allow us to present our data in a clearer way.")
        
        Paragraph p6 = introSection:AddParagraph("The steps that we describe in this task can be followed in the 'Labeling the Histogram' section that is available in our ")
        p6:Add(link2)
        p6:AddText(" tutorial.")

        introSection:AddParagraph("First, we will add labels for our chart, x-axis, and y-axis. This allows the reader to distinguish between the information and to understand what data they are looking at. For our chart we can label it the following way: title - 'Price per night with AirBnB in 2019 (NYC)'; x-axis - 'Price ($)'; y-axis - 'Number of Stays.' If we feel like those labels are not enough, we can add a subtitle to the histogram. For example, for this histogram the subtitle can be 'How expensive is it to stay in NYC?'")

        AddHeading(introSection, "Customizing the Histogram (5 minutes)",2)

        Link link6
        link6:AddText("Color Accessibility")
        link6:SetAddress("https://quorumlanguage.com/tutorials/charts/coloraccessibility.html")
        link6:SetTarget(link6:newTab)

        Paragraph p7 = introSection:AddParagraph(" ")
        p7:AddText("For this lesson, we will explore how to change the color palette, change the tick interval, and adjust the x axis minimum value. The lesson uses the warm palette but there are many options of colors to choose from to attempt; regarding other color palettes we have reference using the information on the ")        
        p7:Add(link6)
        p7:AddText(" page.")

        Paragraph p8 = introSection:AddParagraph(" ")
        p8:AddText("The steps that we describe in this task can be followed in the 'Customizing the Histogram' section that is available in our ")
        p8:Add(link2)
        p8:AddText(" tutorial. Changing the tick interval involves the range between two values in our histogram. We want to also modify the x axis to demonstrate further customization of our histogram by being able to adjust what value our chart can start on.")

        AddHeading(introSection, "Accessing the Histogram (5 minutes)",2)
        
        Link link7
        link7:AddText("tutorial on keyboard navigation")
        link7:SetAddress("https://quorumlanguage.com/tutorials/charts/charttextnavigation.html")
        link7:SetTarget(link7:newTab)

        Paragraph p9 = introSection:AddParagraph(" ")
        p9:AddText("Now let us explore the graphic using the accessibility tools on our devices. When the histogram has been created, we should see our chart pop up in a separate window. From there, we can reference this ")
        p9:Add(link7)
        p9:AddText(" using the arrow keys for accessibility. One note is that when a bar chart is saved onto our computer devices, they save as an SVG (scalable vector graphic) which maintains not only resizability but accessibility to read these charts using a screen reader.
")

        AddHeading(introSection, "Relating our Histogram to Skew and Kurtosis (10 Minutes)",2)        
        
        Link link8
        link8:AddText("tutorial on how to calculate skew")
        link8:SetAddress("https://quorumlanguage.com/tutorials/Summarizing/skew.html")
        link8:SetTarget(link8:newTab)

        Link link9
        link9:AddText("tutorial on how to calculate kurtosis")
        link9:SetAddress("https://quorumlanguage.com/tutorials/Summarizing/kurtosis.html")
        link9:SetTarget(link9:newTab)

        Paragraph p10 = introSection:AddParagraph(" ")
        p10:AddText("In math, we often have two primary concepts when thinking about histograms, Skew and Kurtosis. We measure skew as a number, positive or negative, which references whether the data set is shifted in one direction or the other. A skew of 0 means that the data is symmetrical around the mean. A positive skew, or right skew, indicates the tail of the data is longer above the mean. We can follow this ")
        p10:Add(link8)
        p10:AddText(" in Quorum.")

        AddMath(introSection, "examples/MathXML/Skew.xml")

        Paragraph p11 = introSection:AddParagraph(" ")
        p11:AddText("Kurtosis relates to determining the heaviness of the distribution. Having high kurtosis means that in the dataset, we have many outliers and having low kurtosis means a lack of outliers. There are technical terms we can look up for these properties, but they are used rarely even in the academic literature and are not important to memorize. We can follow this ")
        p11:Add(link9)
        p11:AddText(" in Quorum.")
        
        AddMath(introSection, "examples/MathXML/Kurtosis.xml")

        introSection:AddParagraph("Note that while we present the equation here in MathJax form (visual and accessible), memorizing this equation is not important. The entire purpose of data science is to abstract away some of this mathematics in a programming language, to obtain the results of the equation without having to understand the nuance. If we did not do that, realistically data science would be too difficult for any one person to understand.")

        AddHeading(introSection, "Real World Examples of Skew and Kurtosis (15 Minutes)",2)
        introSection:AddParagraph("In this section, we will be showing graphs of skew and kurtosis to better understand the shape and how we can visually see these measurements using a histogram.")

        Link link10
        link10:AddText("Number of Children CSV")
        link10:SetAddress("https://raw.githubusercontent.com/qorf/curriculum/main/Reference/DataScience/Charts%20(New)/Data/Miscellaneous/numberOfChildren.csv")
        link10:SetTarget(link10:newTab)

        Link link11
        link11:AddText("Exam Scores CSV")
        link11:SetAddress("https://raw.githubusercontent.com/qorf/curriculum/main/Reference/DataScience/Charts%20(New)/Data/Miscellaneous/exams.csv")
        link11:SetTarget(link11:newTab)
        
        AddHeading(introSection, "Skew",2)

        Paragraph p12 = introSection:AddParagraph(" ")
        p12:AddText("For this exercise we will be using two datasets which can be downloaded from the following links: ")
        p12:Add(link10)
        p12:AddText(" and ")
        p12:Add(link11)
        p12:AddText(". The graph with the number of children will demonstrate a histogram with a right skew while the graph with Exam Scores will demonstrate a histogram with a left skew.
")

        AddHeading(introSection, "Right Skew",3)
        introSection:Add(preformatter:GeneratePreformattedCode("use Libraries.Compute.Statistics.DataFrame
use Libraries.Interface.Controls.Charts.Histogram

/*
    This is an example of a Histogram built in quorum.
    The dataset we will be working with compares life spans of various dog breeds
*/

// create frame component
DataFrame frame
// read in data from dog csv
frame:Load('../Data/Miscellaneous/numberOfChildren.csv')

// pull out specific columns from csv that we are comparing
// note: histograms do not support factors
frame:AddSelectedColumns('Number of Children')

// create histogram object
// this will create two separate data charts to compare
Histogram chart = frame:Histogram()
chart:SetTitle('Number of Children for Arbitrary Families')
// let's adjust the font size so it appears nicely on the screen
chart:SetTitleFontSize(20)

// label the x axis, y axis, and the legend title
chart:SetXAxisTitle('Number of Children')
chart:SetYAxisTitle('Total Individuals')
chart:SetLegendTitle('People who have children')
// add subtitle for more description
chart:SetSubtitle('Age ranges of Dog Breeds')

// customization features
chart:SetColorPaletteToTrustworthy()
// define a clear interval, we separate each interval by 2
chart:SetXTickInterval(1)
// let's start our chart at 0 to examine a curve as a whole
chart:SetXAxisMinimum(0)
// let's also extend our y axis to see the skew
chart:SetYAxisMaximum(40)
chart:SetXAxisMaximum(10)

// display the histogram
chart:Display()
"))

        AddIDE(introSection,"Right Skew","Example of a Histogram with Right Skew","/examples/Epiq/RightSkew.quorum")
        AddHeading(introSection, "Left Skew", 3)

        introSection:Add(preformatter:GeneratePreformattedCode("use Libraries.Compute.Statistics.DataFrame
use Libraries.Interface.Controls.Charts.Histogram

/*
    This is an example of a Histogram built in quorum.
    The dataset we will be working with compares life spans of various dog breeds
*/

// create frame component
DataFrame frame
// read in data from dog csv
frame:Load('../Data/Miscellaneous/exams.csv')

// pull out specific columns from csv that we are comparing
// note: histograms do not support factors
frame:AddSelectedColumns('math score')

// create histogram object
// this will create two separate data charts to compare
Histogram chart = frame:Histogram()
chart:SetTitle('Number of Children for Arbitrary Families')
// let's adjust the font size so it appears nicely on the screen
chart:SetTitleFontSize(20)

// label the x axis, y axis, and the legend title
chart:SetXAxisTitle('Number of Children')
chart:SetYAxisTitle('Total Individuals')
chart:SetLegendTitle('People who have children')
// add subtitle for more description
chart:SetSubtitle('Age ranges of Dog Breeds')

// customization features
chart:SetColorPaletteToTrustworthy()
// define a clear interval, we separate each interval by 2
chart:SetXTickInterval(5)
// let's start our chart at 0 to examine a curve as a whole
chart:SetXAxisMinimum(0)
// let's also extend our y axis to see the skew
chart:SetYAxisMaximum(20)
chart:SetXAxisMaximum(100)

// display the histogram
chart:Display()
"))
 
    AddIDE(introSection,"Left Skew","Example of a Histogram with Left Skew","/examples/Epiq/LeftSkew.quorum")

    Link link12
    link12:AddText("Iris classification CSV")
    link12:SetAddress("https://raw.githubusercontent.com/qorf/curriculum/main/Reference/DataScience/Charts%20(New)/Data/Science/Iris.csv")
    link12:SetTarget(link12:newTab)
    
    Link link13
    link13:AddText("Electric Cars (EVs) CSV")
    link13:SetAddress("https://raw.githubusercontent.com/qorf/curriculum/main/Reference/DataScience/Charts%20(New)/Data/Miscellaneous/Cars%201.csv")
    link13:SetTarget(link13:newTab)
    
    AddHeading(introSection, "Kurtosis",2)
    Paragraph p14 = introSection:AddParagraph(" ")
    p14:AddText("For this exercise we will be using two datasets which can be downloaded from the following links: ")
    p14:Add(link12)
    p14:AddText(" and ")
    p14:Add(link13)
    p14:AddText(". The graph with Irises will demonstrate a histogram with a high kurtosis while the graph with EVs will demonstrate a histogram with a low kurtosis.
    ")

    AddHeading(introSection, "High Kurtosis",3)
    introSection:Add(preformatter:GeneratePreformattedCode("use Libraries.Compute.Statistics.DataFrame
use Libraries.Interface.Controls.Charts.Histogram

/*
    This is an example of a Histogram built in quorum
*/

// create frame component
DataFrame frame
// read in data from dog csv
frame:Load('../Data/Science/Iris.csv')

// pull out specific columns from csv that we are comparing
// note: histograms do not support factors
frame:AddSelectedColumns('SepalWidthCm')

// create histogram object
// this will create two separate data charts to compare
Histogram chart = frame:Histogram()
chart:SetTitle('Iris Classification')
// let's adjust the font size so it appears nicely on the screen
chart:SetTitleFontSize(20)

// label the x axis, y axis, and the legend title
chart:SetXAxisTitle('Sepal Width (CM)')
chart:SetYAxisTitle('Number of Irises')
chart:SetLegendTitle('Measurements of Iris')
// add subtitle for more description
chart:SetSubtitle('Age ranges of Dog Breeds')

// customization features
chart:SetColorPaletteToTrustworthy()
// define a clear interval, we separate each interval by 2
chart:SetXTickInterval(0.2)
// let's start our chart at 0 to examine a curve as a whole
chart:SetXAxisMinimum(0)
chart:SetXAxisMaximum(6)

// display the histogram
chart:Display()
"))

    AddIDE(introSection,"High Kurtosis","Example of a Histogram with High Kurtosis","examples/Epiq/HighKurtosis.quorum")

    AddHeading(introSection, "Low Kurtosis",3)
    introSection:AddParagraph("With this dataset example, take notice in the first half of the histogram, there is a smaller bell curve which represents the low kurtosis.")
    introSection:Add(preformatter:GeneratePreformattedCode("use Libraries.Compute.Statistics.DataFrame
use Libraries.Interface.Controls.Charts.Histogram

/*
    This is an example of a Histogram built in quorum
*/

// create frame component
DataFrame frame
// read in data from dog csv
frame:Load('../Data/Miscellaneous/Cars 1.csv')

// pull out specific columns from csv that we are comparing
// note: histograms do not support factors
frame:AddSelectedColumns('Dimensions.Width')

// create histogram object
// this will create two separate data charts to compare
Histogram chart = frame:Histogram()
chart:SetTitle('EV Cars')
// let's adjust the font size so it appears nicely on the screen
chart:SetTitleFontSize(20)

// label the x axis, y axis, and the legend title
chart:SetXAxisTitle('Car Dimension')
chart:SetYAxisTitle('Number of Cars')
chart:SetLegendTitle('Attributes of EV Cars')
// add subtitle for more description
chart:SetSubtitle('Age ranges of Dog Breeds')

// customization features
chart:SetColorPaletteToTrustworthy()
// define a clear interval, we separate each interval by 2
chart:SetXTickInterval(10)
// let's start our chart at 0 to examine a curve as a whole
chart:SetXAxisMinimum(1)
chart:SetXAxisMaximum(250)

// display the histogram
chart:Display()
"))

    AddIDE(introSection,"Low Kurtosis","Example of a Histogram with Low Kurtosis","/examples/Epiq/LowKurtosis.quorum")


    introSection:AddParagraph("With these examples, let us take time to discuss the differences between each graph and examine the shape in relation to skew and kurtosis.")
    text standards = "https://corestandards.org/wp-content/uploads/2023/09/ADA-Compliant-Math-Standards.pdf"
    Link link14
    link14:AddText("website")
    link14:SetAddress(standards)
    link14:SetTarget(link14:newTab)
    
    AddHeading(introSection, "Relevant Common Core Standards",2)
    Paragraph p15 = introSection:AddParagraph("")
    p15:AddText("We use the following ")
    p15:Add(link14)
    p15:AddText(" for common core standards in relation to histograms and measurements of distribution.")
    
    Paragraph p16 = introSection:AddParagraph("")
    Link link15
    link15:AddText("CCSS.MATH.CONTENT.HSS.ID.A.1")
    link15:SetAddress(standards)
    link15:SetTarget(link15:newTab)
    
    p16:Add(link15)
    p16:AddText(": Represent data with plots on the real number line (dot plots, histograms, and box plots).")
    
    Link link16
    link16:AddText("CCSS.MATH.CONTENT.HSS.ID.A.2")
    link16:SetAddress(standards)
    link16:SetTarget(link16:newTab)
    
    p16:Add(link16)
    p16:AddText(": Use statistics appropriate to the shape of the data distribution to compare center (median, mean) and spread (interquartile range, standard deviation) of two or more different data sets.")
    
    Link link17
    link17:AddText("CCSS.MATH.CONTENT.HSS.ID.A.3")
    link17:SetAddress(standards)
    link17:SetTarget(link17:newTab)
    
    p16:Add(link17)
    p16:AddText(":  Interpret differences in shape, center, and spread in the context of the data sets, accounting for possible effects of extreme data points (outliers).
    ")
    
    Link link18
    link18:AddText("CCSS.MATH.CONTENT.HSS.ID.A.4")
    link18:SetAddress(standards)
    link18:SetTarget(link18:newTab)
    
    p16:Add(link18)
    p16:AddText(": Use the mean and standard deviation of a data set to fit it to a normal distribution and to estimate population percentages. Recognize that there are data sets for which such a procedure is not appropriate. Use calculators, spreadsheets, and tables to estimate areas under the normal curve.
")
        bodyDiv:Add(introSection)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Histograms, Skew, and Kurtosis"
    end

    action GetSummaryName returns text
        return "Histograms, Skew, and Kurtosis"
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "programming for beginners, data science, 
        programming, 
        chart, graph, accessibility, histogram, 
        computer science, computer languages, Quorum programming language, distribution, accessible programming, 
        kurtosis, skew, left skew, right skew, high kurtosis, low kurtosis")
        AddMetaData(keywords)
    end

    action GetName returns text
        return "Histograms, Skew, and Kurtosis"
    end

    action GetShortDescription returns text
        return "Understanding distribution with historgrams, kurtosis, and skew using Quorum."
    end

    action GetLocation returns text
        return "lessons/DataScience/histograms.html"
    end
end