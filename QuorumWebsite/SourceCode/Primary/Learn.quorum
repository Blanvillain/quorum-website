use Libraries.Web.Page.WebPage
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.StrongText
use Libraries.Web.Page.HeaderLink
use Libraries.Web.Page.WebPageHeader
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Image
use Libraries.Web.Page.Header
use Libraries.Web.Page.Heading
use Libraries.Web.Page.Link
use Libraries.Web.Page.Section
use Libraries.Web.Page.Button
use Libraries.System.File
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.Array

class Learn is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper
    Lesson nextLesson = undefined


    action Setup
        //html header stuff
        SetWebPageTitle("Learn Quorum - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)
        mainRegion:SetIdentifier("mainRegion")
        mainRegion:AddClassAttribute("flex flex-col items-center justify-center space-y-6")


        //Main Region
        Section blueSection = makeBlueSection()
        Section usingQuorumSection = usingQuorumSection()
        Section coursesSection = makeCoursesSection()
        mainRegion:Add(blueSection)
        mainRegion:Add(usingQuorumSection)
        mainRegion:Add(coursesSection)

        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action makeBlueSection returns Section
        Section blueSection
        blueSection:AddClassAttribute("bg-quorum-blue-25 flex flex-row items-center justify-center py-10 w-full")
    
        // Quorum Icon and Text section
        Division leftText
        leftText:AddClassAttribute("flex flex-col") // Updated to flex-col and added gap and margin-right
    
        Heading quorumHeader
        quorumHeader:SetScale(1)
        quorumHeader:AddText("Learn Something New in Quorum.")
        quorumHeader:AddClassAttribute("text-2xl text-center font-bold font-sans")
        leftText:Add(quorumHeader)
    
        Paragraph p
        p:AddText("Build complex applications, learn how master data, and see make programs accessible for everyone.")
        p:AddClassAttribute("w-72 font-light")
        leftText:Add(p)
    
        blueSection:Add(leftText)
    
        // Bunny Image
        Division bunnyImageHolder
        bunnyImageHolder:AddClassAttribute("w-1/4 max-w-[200px]")
    
        Image bunny
        bunny:SetAddress("/media/userInterface/quorumAssets/learnHeader.png")
        bunny:AddClassAttribute("w-full")
        bunny:SetAlternate("Two cartoon rabbits wearing glasses. The rabbit on the left is holding a game controller, while the rabbit on the right is holding up a paper with a pie chart on it.")

        bunnyImageHolder:Add(bunny)
        
        blueSection:Add(bunnyImageHolder)
    
        return blueSection
    end

    action usingQuorumSection returns Section
      Section section
      section:AddClassAttribute("mx-12 md:mx-24")

      Heading h2
      h2:SetScale(2)
      h2:AddText("Using Quorum")
      h2:AddClassAttribute("text-2xl font-bold font-sans")
      section:Add(h2)

      Paragraph p
      p:AddText("If you don't have Quorum installed, ")
      Link link
      link:SetAddress("/download.html")
      link:AddText("install it first.")
      link:AddAttribute("aria-label", "Download Quorum")
      link:AddClassAttribute("underline")

      p:Add(link)
      section:Add(p)

      Division newToQuorum
      newToQuorum:AddClassAttribute("flex flex-col justify-between rounded-xl bg-neutral-grey-15 p-4")
      Heading h3
      h3:SetScale(3)
      h3:AddText("New to Quorum?")
      h3:AddClassAttribute("text-xl font-bold mb-2")
      Paragraph p2
      p2:AddClassAttribute("text-sm mb-4 w-4/5")
      p2:AddText("Quorum is a great first language if you are just starting your programming journey. To get started into using the language, check out this introductory tutorial to help you run your first program!")
      Link link_getStarted
      link_getStarted:AddText("Get Started")
      // move text to the bottom right of the div
      link_getStarted:AddClassAttribute("self-end font-bold py-2.5 px-4 text-center rounded-3xl w-56 duration-150 block p text-sm text-white bg-quorum-blue-100 hover:bg-gray-600 active:bg-gray-900 md:inline")
      link_getStarted:SetAddress("/tutorials/firstProgram.html")
      newToQuorum:Add(h3)
      newToQuorum:Add(p2)
      newToQuorum:Add(link_getStarted)

      section:Add(newToQuorum)

      return section
    end

   action makeCoursesSection returns Section
        Section section
        section:AddClassAttribute("mx-12 md:mx-24")
        Array<text> courses
        courses:Add("Quorum Courses")
        courses:Add("Hour of Code")
         courses:Add("Legacy Courses")
        integer i = 0
        repeat while i < courses:GetSize()
            Division courseDiv
            courseDiv:AddClassAttribute("my-9 space-y-12")
            Heading courseHeader
            courseHeader:AddClassAttribute("text-2xl font-semibold uppercase tracking-wider text-gray-400")
            courseHeader:SetScale(2)
            courseHeader:AddText(courses:Get(i))
            JavaScriptObjectNotation quorumCourse = GetCourseJson(courses:Get(i))
            JavaScriptObjectNotation items = quorumCourse:GetObject("items")
            JavaScriptObjectNotation itemsArray = items:Get(0)
            integer j = 0
            Division courseCards
            courseCards:AddClassAttribute("grid gap-4 grid-cols-1 auto-rows-auto md:grid-cols-2 lg:grid-cols-3")

            repeat while j < itemsArray:GetSize()
                //json received from /html/json/courses.json
                JavaScriptObjectNotation item = itemsArray:Get(j)
                text imageUrl = item:GetValue("image")
                text imageAltText = item:GetValue("imageAltText")
                text title = item:GetValue("title")
                text description = item:GetValue("description")
                text previewUrl = item:GetValue("previewUrl")   
                text courseUrl = item:GetValue("courseUrl")
                JavaScriptObjectNotation previewJson = item:GetObject("preview")
                CourseCard courseCard
                courseCard:Create(imageUrl, imageAltText, title, description, previewUrl, courseUrl, courses:Get(i))
                courseCards:Add(courseCard)

                CardPreview cardPreview
                cardPreview:Create(title, previewJson)
                courseCards:Add(cardPreview)

                j = j + 1
            end
            
            courseDiv:Add(courseHeader)
            courseDiv:Add(courseCards)
            
            i = i + 1
            section:Add(courseDiv)
        end
        return section
    end
    
    action GetCourseJson(text courseToGet) returns JavaScriptObjectNotation
        File file
        file:SetPath("/html/json/courses.json")
        text value = file:Read()
        JavaScriptObjectNotation notate
        notate:Read(value)

        JavaScriptObjectNotation courses = notate:GetObject("courses")
        JavaScriptObjectNotation topLevel = courses:Get(0)

        JavaScriptObjectNotation returnCourse = undefined
        integer i = 0
        boolean break = false
        
        repeat while i < topLevel:GetSize() or not break
            JavaScriptObjectNotation course = topLevel:Get(i)
            text courseArray = course:GetValue("name")

            if courseArray = courseToGet
                 returnCourse = course
                 break = true
            end
            i = i + 1
        end
        return returnCourse
    end

    action GetMetaDescription returns text
        return "Learn the Quorum programming language in tracks dedicated to audio or visual games, robotics, or through core computer science principles."
    end

    action GetNextLesson returns Lesson
        return nextLesson
    end

    action SetNextLesson(Lesson next)
        nextLesson = next
    end

    action GetName returns text
        return "Learn Page"
    end

    action GetShortDescription returns text
        return "This page describes the tracks for various lessons."
    end

    action GetSummaryName returns text
        return ""
    end

    action GetImageLocation returns text
        return ""
    end

    action GetLocation returns text
        return ""
    end

end
