use Libraries.Web.Page.all
use Libraries.Containers.Array

class SummarySkew is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Descriptive Statistics - Quorum Programming Language")
        AddDefaultHeaders()
        AddMathHeader()

        //Figure out getting main regions properly.
       Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Learn About Calculating the Skew", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Learn About Calculating the Skew")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial describes how to calculate the skew")
        bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Calculating the Skew", 2)

       

        section_intro:AddParagraph("In data statistics, skewness can be thought of as a lack of symmetry in the data. When analyzing data, mathematical properties about that data can be useful in understanding it. Two rather useful metrics are skew and, in the next section, kurtosis. We measure skew as a number, positive or negative, which references whether the data set is shifted in one direction or the other. A skew of 0 means that the data is symmetrical around the mean. A positive skew, or right skew, indicates the tail of the data is longer above the mean. A negative skew, or left skew, is the opposite. For calculating skew, we use an equation that is common in statistical packages, called the "+dq+"Fisher-Pearson Standardized Moment Coefficient."+dq+"")
        
        Division mathDiv
        AddMath(mathDiv, "examples/MathXML/Skew.xml")
        text equation = mathDiv:ToText()
        section_intro:AddText(equation)

        section_intro:AddParagraph("The skew is calculated using the helper action Skew() which is within the DataFrame's class. To do this, we will use our 'frame' object and call the function Skew(). In this case we will be calculating the skew of the area of dry bean classifications. Here is a brief description on how Skew() works.")
       
        WebTable table = AddWebTable("Skew Function")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("Function")
        tableHeaderArray:Add("Description") 
        tableHeaderArray:Add("Usage") 
      
        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)        


        Array<text> rubricText1
        rubricText1:Add("dataFrameObject:Skew()")
        rubricText1:Add("
This action takes the column that you have passed and calculates the skew of that column. Note that it can only calculate the skew of one column at a time.")
        rubricText1:Add("frame:Skew()")
        tableBody:Add(AddTableBodyRow(rubricText1))
        
        
        table:Add(tableBody)
        section_intro:Add(table)

        section_intro:AddParagraph("Here is some code on how to calculate the skew:")
        section_intro:Add(preformatter:GeneratePreformattedCode("//We need the DataFrame class to load in files for Data Science operations.
use Libraries.Compute.Statistics.DataFrame

//Create a DataFrame, which is essentially a table that understands 
//more information about the data that is being loaded.
//Using the default loader is enough for our purposes
DataFrame frame
frame:Load("+dq+"../Data/Miscellaneous/DryBeans.csv"+dq+")

//Tell the frame we want the first column selected
frame:AddSelectedColumn(0)
output frame:Skew()

"))

    Section section_try_yourself
    section_try_yourself:AddClassAttribute("flex flex-col gap-y-2")
    bodyDiv:Add(section_try_yourself)
    Heading h2_try_yourself = section_try_yourself:AddHeading("Try it Yourself!", 2)
    h2_try_yourself:AddAttribute("data-text", "Try it Yourself!")
    h2_try_yourself:AddClassAttribute("text-2xl font-bold")
    AddToHeadingArray(h2_try_yourself)
    section_try_yourself:AddAttribute("data-text", "Try it Yourself!")
    section_try_yourself:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
    CodeForIDE code4
    code4:AddFileUrl("Main.quorum", "examples/DataFrames/Skew.quorum")
    IDE ide3 = AddIDE()
    ide3:SetLightTheme()
    ide3:SetCodeForIDE(code4:GetJsonArray())
    ide3:SetIdeTitle("Calculate the Skew")
    section_try_yourself:Add(ide3)

        Paragraph para
        para:AddText("Congrats! We have just learned how to calulate the skew! To view the whole file, we can click ")
        
        Link link
        link:AddText("here")
        link:SetAddress("https://github.com/qorf/curriculum/blob/main/Reference/DataScience/Summarizing/SourceCode/CalculateSkew.quorum")
        link:SetTarget(link:newTab)
        link:SetClassAttribute("underline text-quorum-blue-150")
        
        para:Add(link)
        para:AddText(".")
        section_try_yourself:Add(para)
        
        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", GetDataScienceDefaultKeywords() + 
        ", descriptive statistics, accessible equations, mathml, skew, skewness, asymmetric distribution, long tail,
        short tail, fat distribution, skinny distribution, negative skew, positive skew, mean, median")
        AddMetaData(keywords)
    end

    action GetMetaDescription returns text
        return "Learn about skew in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "skew"
    end

    action GetName returns text
        return "skew"
    end

    action GetShortDescription returns text
        return "calculating the skew"
    end

    action GetLocation returns text
        return "tutorials/Summarizing/skew.html"
    end

              action GetLinkName returns text
        return "Skew"
    end

    action GetSectionName returns text
        return "Descriptive Statistics"
    end
end