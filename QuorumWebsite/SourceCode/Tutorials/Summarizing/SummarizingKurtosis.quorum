use Libraries.Web.Page.all
use Libraries.Containers.Array

class SummaryKurtosis is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Descriptive Statistics - Quorum Programming Language")
        AddDefaultHeaders()
        AddMathHeader()

        //Figure out getting main regions properly.
       Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
                Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Learn About Calculating the Kurtosis", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Learn About Calculating the Kurtosis")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial describes how to calculate the Kurtosis")
        bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Calculating the Kurtosis", 2)

        section_intro:AddParagraph("In data statistics, kurtosis is a phrase used to indicate how heavy or light the tails of our data are. By heavy tails, we mean that our data might be flatter around the edges. By light tails, it is the opposite. A dataset might be largely flat across the board. One reason we care about this is because as data is distributed in different ways, it can cause problems in data analysis. Put simply, we use kurtosis to make sure the distribution of our data is fairly balanced.")
       
        Division mathDiv
        AddMath(mathDiv, "examples/MathXML/Kurtosis.xml")
        text equation = mathDiv:ToText()
        section_intro:AddText(equation)


        Paragraph para
        para:AddText("While one might assume that the equations for kurtosis are standardized, in practice different statistical packages provide slightly different answers. In our case, we document the equations we used in MathML. All statistical packages provide similar answers and our equations match those used in the ")

        
        Link link
        link:AddText("Apache Commons mathematical packages")
        link:SetAddress("https://commons.apache.org/proper/commons-math/")
        link:SetTarget(link:newTab)
        link:SetClassAttribute("underline text-quorum-blue-150")
        
        para:Add(link)
        para:AddText(".")
        section_intro:Add(para) 


        section_intro:AddParagraph("The kurtosis can be calculated by calling the helper action, Kurtosis() contained within the DataFrame's class. To do this, we will use our 'frame' object and call the function Kurtosis(). In this case we will be calculating the mean of the area of dry bean classifications. Here is a brief description on how Kurtosis() works.")

         WebTable table = AddWebTable("Kurtosis Function")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("Function")
        tableHeaderArray:Add("Description") 
        tableHeaderArray:Add("Usage") 
      
        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)        

Array<text> rubricText1
        rubricText1:Add("dataFrameObject:Skew()")
        rubricText1:Add("This action takes the column that you have passed and calculates the kurtosis of that column. Note that it can only calculate the kurtosis of one column at a time.")
        rubricText1:Add("frame:Kurtosis()")
        tableBody:Add(AddTableBodyRow(rubricText1))
        
        table:Add(tableBody)
        section_intro:Add(table)
        
        
        Array<text> rubricHeader2
        rubricHeader2:Add(AddTextBoldFront("Function", " "))
        rubricHeader2:Add(AddTextBoldFront("Description", " "))
        rubricHeader2:Add(AddTextBoldFront("Usage", " "))
   

        section_intro:AddParagraph("Here is some code on how to calculate the kurtosis:")
        section_intro:Add(preformatter:GeneratePreformattedCode("//We need the DataFrame class to load in files for Data Science operations.
use Libraries.Compute.Statistics.DataFrame

//Create a DataFrame, which is essentially a table that understands 
//more information about the data that is being loaded.
//Using the default loader is enough for our purposes
DataFrame frame
frame:Load("+dq+"../Data/Miscellaneous/DryBeans.csv"+dq+")

//Tell the frame we want the first column selected
frame:AddSelectedColumn(0)
output frame:Kurtosis()


"))

          Section section_try_yourself
    section_try_yourself:AddClassAttribute("flex flex-col gap-y-2")
    bodyDiv:Add(section_try_yourself)
    Heading h2_try_yourself = section_try_yourself:AddHeading("Try it Yourself!", 2)
    h2_try_yourself:AddAttribute("data-text", "Try it Yourself!")
    h2_try_yourself:AddClassAttribute("text-2xl font-bold")
    AddToHeadingArray(h2_try_yourself)
    section_try_yourself:AddAttribute("data-text", "Try it Yourself!")
    section_try_yourself:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
    CodeForIDE code4
    code4:AddFileUrl("Main.quorum", "examples/DataFrames/Kurtosis.quorum")
    IDE ide3 = AddIDE()
    ide3:SetLightTheme()
    ide3:SetCodeForIDE(code4:GetJsonArray())
    ide3:SetIdeTitle("Calculate the Kurtosis")
    section_try_yourself:Add(ide3)


        Paragraph para1
        para1:AddText("Congrats! We have just learned how to calulate the kurtosis! To view the whole file, we can click ")
        
        Link link1
        link1:AddText("here")
        link1:SetAddress("https://github.com/qorf/curriculum/blob/main/Reference/DataScience/Summarizing/SourceCode/CalculateKurtosis.quorum")
        link1:SetTarget(link1:newTab)
        link1:SetClassAttribute("underline text-quorum-blue-150")
        
        para1:Add(link1)
        para1:AddText(".")
         section_try_yourself:Add(para1) 
        
        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", GetDataScienceDefaultKeywords() + 
        ", descriptive statistics, accessible equations, mathml, kurtosis, tailedness, probability distribution,
        pearson, fourth moment, extremity of deviations, leptokurtic, platykurtic")
        AddMetaData(keywords)
    end

    action GetMetaDescription returns text
        return "Learn about kurtosis in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "kurtosis"
    end

    action GetName returns text
        return "kurtosis"
    end

    action GetShortDescription returns text
        return "calculating the kurtosis"
    end

    action GetLocation returns text
        return "tutorials/Summarizing/kurtosis.html"
    end

    action GetLinkName returns text
        return "Kurtosis"
    end

    action GetSectionName returns text
        return "Descriptive Statistics"
    end
end