use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.OrderedList

class UserInterfacesRadioButton is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Radio Button Tutorial - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Tutorial: Radio Button", 1)
        headDiv:AddText("This tutorial tells you how to use Radio Buttons in Quorum")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        
        bodyDiv:AddHeading("Introduction to Radio Buttons in Quorum", 2)
        bodyDiv:AddHeading("What are Radio Buttons?", 3)
        Paragraph firstParagraph
        firstParagraph:AddText("In the ")
        firstParagraph:AddLink("Checkbox", "/tutorials/ui/checkbox.html")
        firstParagraph:AddText(" tutorial we were introduced to toggle buttons. A Toggle Button is simply a Button that switches
                                 between two toggle states when activated. Radio Buttons are another type of Toggle Button, but they handle switching states differently than a Checkbox. 
                                A Radio Button can be toggled on by activating it, but a different Radio Button in the same 
                                group must be toggled on for the currently activated Radio Button to be deactivated. In Quorum, we accomplish 
                                this be adding related Radio Buttons to a ButtonGroup.")
        bodyDiv:Add(firstParagraph)

        bodyDiv:AddParagraph("Although similar to Checkboxes, the method that Radio Buttons use to handle toggle states reflects their main design purpose: a Radio Button is useful when you want the user to select one and only one of a given set of options. To demonstrate this, we will make a set of three Radio Buttons where only one can be selected at a time. To start, create a new Game Application project.")
        
        bodyDiv:AddHeading("Making a Set of Radio Buttons", 2)
        
        bodyDiv:AddParagraph("In order to use Radio Buttons, we must add the Radio Button library with the following use statement:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Controls.RadioButton"))
        bodyDiv:AddParagraph("Now, just like with Buttons or Checkboxes, we need to declare our three Radio Buttons, then give them a name, position them, and add them to the Game. Thus, the CreateGame action so far will be as follows:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(
                                            "action CreateGame" + cr
                                            +"    RadioButton option1" + cr
                                            +"    RadioButton option2" + cr
                                            +"    RadioButton option3" + cr + cr

                                            +"    option1:SetName("+dq+"Option 1"+dq+")" + cr
                                            +"    option2:SetName("+dq+"Option 2"+dq+")" + cr
                                            +"    option3:SetName("+dq+"Option 3"+dq+")" + cr + cr

                                            +"    option1:SetPosition(300, 400)" + cr
                                            +"    option2:SetPosition(300, 350)" + cr
                                            +"    option3:SetPosition(300, 300)" + cr + cr

                                            +"    Add(option1)" + cr
                                            +"    Add(option2)" + cr
                                            +"    Add(option3)" + cr
                                            +"end"))

        bodyDiv:AddHeading("Adding Buttons to a ButtonGroup", 3)
        bodyDiv:AddParagraph("If you run the program as it is now, you would notice that all three Radio Buttons appear correctly and you can activate them, but you will not be able to deactivate any of them. This is because a Radio Button needs to be in a ButtonGroup to deselect one. A ButtonGroup is a Control that you can add toggle buttons to, particularly Checkboxes and Radio Buttons, and when one button is toggled on, all the other Buttons in the ButtonGroup are deselected. ")
        bodyDiv:AddParagraph("To add our Radio Buttons to a group, we first need to include the ButtonGroup library with the following use statement:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Controls.ButtonGroup"))
        bodyDiv:AddParagraph("Next, we'll declare a ButtonGroup object and call its AddButton action to add all three Radio Buttons to it. This is done with the following lines of code, which we will append to our CreateGame action:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(
                                            "ButtonGroup radios" + cr
                                            +"radios:AddButton(option1)" + cr
                                            +"radios:AddButton(option2)" + cr
                                            +"radios:AddButton(option3)"))

        bodyDiv:AddParagraph("Now, we will add a simple <b>focus cycle</b> to make our Interface <b>accessible</b>. We will be able to go through the options with the Tab key and activate a Radio Button with the Spacebar. We will do this with the following lines of code:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(
                                            "option1:SetNextFocus(option2)" + cr
                                            +"option2:SetNextFocus(option3)" + cr
                                            +"option3:SetNextFocus(option1)" + cr
                                            +"SetFocus(option1)"))
        bodyDiv:AddParagraph("With this, we can now run the game and select one of the three options. If one is already selected and we select a different Radio Button, then the previous one will be deselected. But, other than selecting and deselecting, the Radio Buttons do nothing else. In the next section, we'll change this by adding Behaviors to our Radio Buttons.")

        bodyDiv:AddHeading("Setting a Behavior", 2)
        bodyDiv:AddParagraph("Giving a Behavior to a Radio Button is similar to a Checkbox, in that when the Radio Button is activated it will call the Behavior's Run action, and when deactivated it will call the Behavior's the Dispose action will be called. For our Radio Buttons, we will make a simple Behavior to say and output their name and status when Toggled On or Off.")
        bodyDiv:AddParagraph("To show this, we will create a new Quorum class for our Behavior and we name it "+dq+"RadioBehavior.quorum."+dq+" Our class will inherit from the Behavior class and we will override the Run and Dispose actions.")
        bodyDiv:AddParagraph("This Behavior will need the Speech and Item libraries, since we need to get the name of the Item that called the Behavior and will have the program say it.  The full Behavior is shown in the following code block:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(
                                            "use Libraries.Interface.Behaviors.Behavior" + cr
                                            +"use Libraries.Interface.Events.BehaviorEvent" + cr
                                            +"use Libraries.Sound.Speech" + cr
                                            +"use Libraries.Interface.Item" + cr + cr

                                            +"class RadioBehavior is Behavior" + cr
                                            +"    Item item = undefined" + cr + cr

                                            +"    action Run(BehaviorEvent event)" + cr
                                            +"        item = event:GetItem()" + cr
                                            +"        output item:GetName() + "+dq+" is now selected" + dq + cr
                                            +"        Speech speech" + cr
                                            +"        speech:Say(item:GetName() + "+dq+" is now selected"+dq+")" + cr
                                            +"    end" + cr + cr

                                            +"    action Dispose()" + cr
                                            +"        output item:GetName() + "+dq+" was deselected" + dq + cr
                                            +"    end" + cr
                                            +"end"))
        bodyDiv:AddParagraph("Now we simply need to go back to the main class and add our Behaviors, adding the following lines of code:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(
                                            "RadioBehavior behavior" + cr
                                            +"option1:SetBehavior(behavior)" + cr
                                            +"option2:SetBehavior(behavior)" + cr
                                            +"option3:SetBehavior(behavior)"))
        bodyDiv:AddParagraph("Now when you run the program, you can activate a Radio Button and the program will output and say which Radio Button was selected. Activating a different Radio Button will cause the program to say and output the new selection, as well as output what was deselected, giving us a fully functional set of Radio Buttons.")
        bodyDiv:AddImage("/media/userInterface/RadioButtons.png","This image shows the final game window with three Radio Buttons with option 2 toggled on")

        bodyDiv:AddHeading("Run the Program", 2)
        AddIDE(bodyDiv, "radioTutorial","Activity: Radio Button", "Try making a User Interface", "examples/UserInterface/RadioButton/Main.quorum")

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about Radio Buttons in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Radio Buttons"
    end

    action GetName returns text
        return "Radio Buttons"
    end

    action GetShortDescription returns text
        return "how to use Radio Buttons"
    end

    action GetLocation returns text
        return "tutorials/ui/radioButton.html"
    end
end