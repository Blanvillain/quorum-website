use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header

class UserInterfacesButton is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Button Tutorial - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Tutorial: Button", 1)
        headDiv:AddText("This tutorial tells you how to use Buttons in Quorum")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("An Introduction to Buttons in Quorum", 2)
        bodyDiv:AddParagraph("In this tutorial, we will learn how to use Buttons in the Quorum Game Engine. A Button is"
                            + " a simple interface tool which executes a Behavior when clicked.")

        bodyDiv:AddParagraph("For this tutorial, we will create a Button that says " + dq + "Hello world!" + dq
                            + " aloud and outputs it as text each time it is pressed. To start, create a new Game "
                            + "Application project.")

        //the section on creating a simple button
        bodyDiv:AddHeading("Standard Buttons", 2)

        bodyDiv:AddParagraph("In order to use a Button, we must include the Button library with the following use statement:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Controls.Button"))
        

        bodyDiv:AddParagraph("Since we want the Button to be usable as soon as the game begins, we'll create it in the "
                            + "CreateGame action. After we create the Button, we can set its position like we would a Drawable, using the "
                            + "SetPosition action. We can also set a name which will be the text the Button "
                            + "displays on the screen. Then we can add it to the game, giving us the following lines of code:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("Button button" + cr
                                                         + "button:SetName(" + dq + "Click me!" + dq + ")" + cr
                                                         + "button:SetPosition(300, 300)" + cr
                                                         + "SetFocus(button)" + cr
                                                         + "Add(button)"))

        bodyDiv:AddParagraph("We also added a SetFocus call with the Button as a parameter. We do this so that the Button is <b>accessible,</b> 
                            which means we can activate it using only the keyboard. When the Button is focused, you can either click it or press the Spacebar to activate.")

        bodyDiv:AddParagraph("So far, the Main class is as follows:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Game.Game" + cr
                                                        + "use Libraries.Interface.Controls.Button" + cr + cr
                                                        + "class Main is Game" + cr
                                                        + "    action Main" + cr
                                                        + "        StartGame()" + cr
                                                        + "    end" + cr + cr
                                                        + "    action CreateGame" + cr
                                                        + "        Button button" + cr
                                                        + "        button:SetName(" + dq + "Click me!" + dq + ")" + cr
                                                        + "        button:SetPosition(300, 300)" + cr
                                                        + "        SetFocus(button)" + cr
                                                        + "        Add(button)" + cr
                                                        + "    end" + cr
                                                        + "end"))

        bodyDiv:AddParagraph("When we run the program, the Button appears in the Game window as shown below:")

        bodyDiv:AddImage("/media/userInterface/ButtonSmall.png", "This image shows the Button's appearance in the game window.")

        bodyDiv:AddParagraph("You might notice that the Button seems small for the screen and might be wondering how we could "
                            + "resize it. Right now the Button is sized according the text it displays, and to resize we need to alter the Button's LayoutProperties. "
                            + "However, this is not necessary for the purposes of this tutorial, so for now we'll simply say that Buttons use  "
                            + "a Layout to organize their contents. The specifics on how to resize and alter a Button's Layout will be covered later in the Layout tutorial.")

        bodyDiv:AddHeading("Adding Behavior to a Button", 2)
        
        bodyDiv:AddParagraph("Right now, nothing happens when the Button is clicked. To have an action activate when we click the button, we must add a "
                            + "Behavior to the Button.")

        bodyDiv:AddParagraph("To begin, create a new Quorum Class, which we will name " + dq + "OutputBehavior.quorum." + dq
                            + " This class will use the libraries for Behavior, BehaviorEvent, and Speech. "
                            + "The class itself will inherit the Behavior class, and we will override the Run action to "
                            + "say and output the desired text. This gives the following OutputBehavior class:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Behaviors.Behavior" + cr
                                                        + "use Libraries.Interface.Events.BehaviorEvent" + cr
                                                        + "use Libraries.Sound.Speech" + cr + cr
                                                        + "class OutputBehavior is Behavior" + cr + cr
                                                        + "    action Run(BehaviorEvent event)" + cr
                                                        + "        Speech speech" + cr
                                                        + "        speech:Say("+ dq + "Hello world!" + dq + ", false)" + cr
                                                        + "        output " + dq + "Hello world!" + dq + cr
                                                        + "    end" + cr
                                                        + "end"))
        
        bodyDiv:AddParagraph("Now that we have our completed OutputBehavior class, we can add it to the Button in our Main "
                            + "class using the Button's SetBehavior action. To do so, return to the CreateGame action, and "
                            + "add the following lines:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("OutputBehavior behavior" + cr
                                                        + "button:SetBehavior(behavior)"))

        bodyDiv:AddParagraph("This complete Main class is as follows:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Game.Game" + cr
                                                        + "use Libraries.Interface.Controls.Button" + cr + cr
                                                        + "class Main is Game" + cr + cr
                                                        + "    action Main" + cr
                                                        + "        StartGame()" + cr
                                                        + "    end" + cr + cr
                                                        + "    action CreateGame" + cr
                                                        + "        OutputBehavior behavior" + cr + cr
                                                        + "        Button button" + cr
                                                        + "        button:SetName(" + dq + "Click me!" + dq + ")" + cr
                                                        + "        button:SetPosition(300, 300)" + cr
                                                        + "        SetFocus(button)" + cr
                                                        + "        Add(button)" + cr + cr
                                                        + "        button:SetBehavior(behavior)" + cr + cr
                                                        + "    end" + cr
                                                        + "end" + cr))

        bodyDiv:AddParagraph("Now, when we run the program, clicking the Button or pressing the Spacebar will say and output the " + dq
                            + "Hello world!" + dq + " message.")

        bodyDiv:AddHeading("Accessibility", 3)
        Paragraph access
        access:AddText("In our example, we used an action named <b>SetFocus</b>, this action allowed for the Button 
                            to be used with only the keyboard. The <b>Focus</b> is covered in a later ")
        access:AddLink("tutorial", "/tutorials/ui/focus.html")
        access:AddText(", but we use it here to make our User 
                            Interface accessible. Accessibility is one of the principles that guides the development of Quorum, and that is 
                            why the language Screen Reader is friendly and why Quorum can easily be used to make 
                            accessible applications. Focus is what allows the use of a keyboard to interact with the User Interface, and it tells Screen Readers 
                            which object's information to read, so use of Focus will be found in most of the User Interface tutorials. ")
        bodyDiv:Add(access)
        bodyDiv:AddParagraph("Games made in the Quorum Game engine are made to be compatible with a Screen Reader, and when making accessible 
                            applications it is important to understand how a Screen Reader will interact with your application. A Screen 
                            Reader will read the name and any text that the Focused object displays. In our Button example, we used the 
                            <b>SetName</b> action call, which changes both the display text of the Button and what a Screen Reader will read when 
                            the Button has Focus. Using <b>SetName</b> and <b>Focus Cycles</b> allows the creation of accessible applications  
                            for users with Screen Readers, or for users that cannot use a mouse.")
        bodyDiv:AddHeading("Run the Program", 2)
        AddIDE(bodyDiv, "buttonTutorial","Activity: Button", "Try making a User Interface", "examples/UserInterface/Button/Main.quorum")

/* 
        //the section on using Icons as Buttons
        bodyDiv:AddHeading("Icons as Buttons", 2)

        bodyDiv:AddParagraph("In the last section, we created a simple rectangular Button. However, we can also use "
                            + "Icons as a Button. Icons are Drawables with the only difference being that "
                            + "Icons are also controls.")

        bodyDiv:AddParagraph("To do so, we must include the Icon library by adding the following use statement to "
                            + "the top of our main class:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Controls.Icon"))

        bodyDiv:AddParagraph("Returning to the CreateGame action, we need to declare a new Button at the bottom of the "
                            + "action, giving the following line:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("Button button2"))

        bodyDiv:AddParagraph("For this tutorial, we'll simply use a circle for this second Button. First, we need to "
                            + "create an Icon, and then load the circle just as you would with a  Drawable. This is done with the following lines:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("Icon circle" + cr
                                                        + "circle:LoadFilledCircle(50)"))

        bodyDiv:AddParagraph("Next, we need to tell the engine that we want to use the Icon as our button. This is done "
                            + "by calling the SetIcon and SetFont actions. We need the SetFont action because we need to "
                            + "set the font to undefined because that tells the engine that instead of making a box to "
                            + "fit text we are going to use the button's icon instead."
                            + "Which gives us the following lines:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("button2:SetIcon(circle)" + cr
                                                        + "button2:SetFont(undefined)"))

        bodyDiv:AddParagraph("We can reuse the OutputBehavior we created before, and then need to set the second Button's "
                            + "position and add it to the game, giving us the following lines of code:")

        
        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Game.Game" + cr
                                                        + "use Libraries.Interface.Controls.Button" + cr
                                                        + "use Libraries.Game.Graphics.Drawable" + cr + cr
                                                        + "class Main is Game" + cr + cr
                                                        + "    action Main" + cr
                                                        + "        StartGame()" + cr
                                                        + "    end" + cr + cr
                                                        + "    action CreateGame" + cr
                                                        + "        Button button" + cr
                                                        + "        button:Initialize(200, 100, " + dq + "Click me!" + dq + ")" + cr
                                                        + "        button:SetPosition(300, 300)" + cr
                                                        + "        Add(button)" + cr + cr
                                                        + "        OutputBehavior behavior" + cr
                                                        + "        button:SetBehavior(behavior)" + cr + cr
                                                        + "        Button button2" + cr + cr
                                                        + "        Icon circle" + cr
                                                        + "        circle:LoadFilledCircle(50)" + cr + cr
                                                        + "        button2:SetIcon(circle)" + cr
                                                        + "        button2:SetFont(undefined)"
                                                        + "        button2:SetBehavior(behavior)" + cr
                                                        + "        button2:SetPosition(350, 150)" + cr
                                                        + "        Add(button2)" + cr
                                                        + "    end" + cr + cr
                                                        + "    action Update(number seconds)" + cr
                                                        + "    end" + cr
                                                        + "end" + cr))

        bodyDiv:AddParagraph("Now, when the program is run, the white circle beneath the first Button can also be activated "
                            + "to run the OutputBehavior.")

        bodyDiv:AddImage("/media/userInterface/ButtonEnd.png", "This is an image of the end product window appearance.")
*/
        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about Buttons in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Buttons"
    end

    action GetName returns text
        return "Buttons"
    end

    action GetShortDescription returns text
        return "how to use Buttons"
    end

    action GetLocation returns text
        return "tutorials/ui/button.html"
    end
end