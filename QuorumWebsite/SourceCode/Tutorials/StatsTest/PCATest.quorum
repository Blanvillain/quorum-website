use Libraries.Web.Page.all
use Libraries.Containers.Array

class PCA is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Tests to Reduce Datasets - Quorum Programming Lanugage")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Tutorial: Actions", 1)

        headDiv:AddText("How to tell a program to take a behavior.")
        bodyDiv:Add(headDiv)
            
        bodyDiv:AddHeading("Reduce Large Sets of Data For Analysis ", 2)
        bodyDiv:AddHeading("Technical Name:<a href=" + dq + "https://en.wikipedia.org/wiki/Principal_component_analysis" + dq + "> Principal Component Analysis</a>", 3)

        bodyDiv:AddParagraph("The PrincipalComponentAnalysis (PCA) class in Quorum is a procedure in statistics that attempts to condense or summarize the information explained by large datasets (i.e. a large number of 
                              factors or variables) into a smaller set of components that can be easier to analyze or visualize.")
        bodyDiv:AddParagraph("One example would be figuring out what has caused cancer (generally). There can be many factors like genetics, diet, exposure, location, and so on which can be hard to understand. 
                              Using Principal Component Analysis, we can try to summarize these factors into a smaller number of components that will explain the variance between all of the factors and expose the 
                                key factors related to cancer.")
        bodyDiv:AddParagraph("It finds all the important information that could be related to what caused the cancer by looking at all the factors and figuring which ones are most different from each other. It then combines
                              all those factors into a couple of new ones, called principal components, that get all the most important information.")

        bodyDiv:AddHeading("Rotations", 3)
        bodyDiv:AddParagraph("Factors have a habit of loading on lots of variables, so to help us interpret them, we can " + dq + "rotate" + dq + "the results. This can maximize or minimize the loading of a particular variable 
                              on a particular factor. ")

        Array<text> statClass1
        statClass1:Add("Uncorrelated Component Rotation")
        statClass1:Add("Orthogonal Varimax Rotation - keeps factors unrelated")  
        statClass1:Add("UseUncorrelatedRotation()")       

        Array<text> statClass2
        statClass2:Add("Correlated Component Rotation")
        statClass2:Add("Oblique Direct Quartimin Rotation - allows factors to be correlated") 
        statClass2:Add("UseCorrelatedRotation()")
        
        Array<text> rHeader
        rHeader:Add(AddTextBoldFront("Rotations", " "))        
        rHeader:Add(AddTextBoldFront("Purpose", " "))
        rHeader:Add(AddTextBoldFront("Function Call", " ")) 

        Array<text> rRows
        rRows:Add(AddTableHeaderTag(rHeader))
      
        rRows:Add(AddTableDataTag(statClass1))
        rRows:Add(AddTableDataTag(statClass2))

        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rRows), "Rotations for PCA")) 
            
        bodyDiv:AddHeading("Customize Rotations", 3)
        bodyDiv:AddParagraph("Use the functions below to customize the rotations.")
    
        Array<text> statClass3
        statClass3:Add("Normalize()")
        statClass3:Add("Signifies if a Kaiser normalization takes place on the loading before the rotation. Resets to un-normalized afterwards.")         
        
    
        Array<text> statClass4
        statClass4:Add("SetEpsilon()")
        statClass4:Add("Signifies the convergence threshold (the percentage variance used to define key metrics as converged) compared to the difference of the criterion for each iteration in the rotation algorithm ")         
        

        Array<text> statClass5
        statClass5:Add("SetMaximumIterations()")
        statClass5:Add("Signifies the stopping point even if convergence is not reached during a rotation")         
             
  
    
        Array<text> rubricHeader
        rubricHeader:Add(AddTextBoldFront("Functions", " "))        
        rubricHeader:Add(AddTextBoldFront("Purpose", " "))        


        Array<text> rubricRows
        rubricRows:Add(AddTableHeaderTag(rubricHeader))
        rubricRows:Add(AddTableDataTag(statClass3))
        rubricRows:Add(AddTableDataTag(statClass4))
        rubricRows:Add(AddTableDataTag(statClass5))
       


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows), "Custom Functions for the PCA Class"))       
    
        bodyDiv:AddParagraph("An example of the PCA test implemented in Quorum is below.")        

        AddIDE(bodyDiv,"PCA","Reduce Large Sets of Data","Example of a Principal Component Analysis","examples/StatsTest/PCA.quorum")        

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about Principal Component Analysis on Quorum Language."
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "PCA, Eigenvalues, Eigenvectors, Covariance matrix, Correlation matrix, Identity Matrix, Variance, Explained variance, Factor loading, Rotation, Orthogonal rotation, Oblique rotation, Varimax rotation, Factor score, Principal component scores, Dimensionality reduction, 
                                          Multicollinearity, Outliers, Kaiser normalization, Large datasets")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "Principal Component Analysis Procedure"
    end

    action GetName returns text
        return "Principal Component Analysis"
    end

    action GetShortDescription returns text
        return "how to reduce big datasets"
    end

    action GetLocation returns text
        return "tutorials/statstest/pcaTest.html"
    end

    action GetLinkName returns text
        return "Principal Component Analysis"
    end

    action GetSectionName returns text
        return "Statistical Tests"
    end
end
