use Libraries.Web.Page.all
use Libraries.Containers.Array

class CompareGroupsTests is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Tests to Compare Means - Quorum Programming Lanugage")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Tutorial: Actions", 1)

        headDiv:AddText("How to tell a program to take a behavior.")
        bodyDiv:Add(headDiv)
            
        Section section_means
        section_means:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_means, "Compare Means", 2)
        section_means:AddParagraph("The CompareMeans class is ultimately getting at a tricky question in statistics. In English, we often think of this as whether separate distributions of data, like columns in a spreadsheet, are statistically significantly different from each other.")
        section_means:AddParagraph("Consider an example. Suppose we have two columns of data in a spreadsheet. In the first column, the average is higher than the second. We can declare that and it might be true, but that data also has variation 
                              in it. Statistical tests at their core often try to balance 1) measures of centricity, 2) measures of dispersion, and 3) how much evidence is available. Intuitively, this makes sense. If the second group has a 
                              higher mean, but there is a lot of variation in the data and a small sample, this might indicate the result is less reliable than if there were more evidence or less variation. Statistical tests, while imperfect, 
                              try to balance these ideas and assign a number to them.")
        section_means:AddParagraph("Quorum implements multiple parametric and non-parametric tests. It has the ability to measure differences in means or variables for data that is normally distributed and not normally distributed.")
        section_means:AddParagraph("Listed below are functions that allow you to customize the statistical tests that you run. For example, the Ranked() function would be called when you want the results to be ranked 
                              or the call the RepeatedMeasures() function for tests that use repeated measures.")

        WebTable table_compare_means = AddWebTable("Custom Functions for the Compare Means Class")
        TableBody tableBody_compare_means = AddTableBody()

        Array<text> rubricHeader
        rubricHeader:Add(AddTextBoldFront("Custom Functions", " "))        
        rubricHeader:Add(AddTextBoldFront("Purpose", " "))        
        TableHeader thead_compare_means = AddTableHeaderRow(rubricHeader)
        table_compare_means:Add(thead_compare_means)

        Array<text> statClass1
        statClass1:Add("Ranked()")
        statClass1:Add("Set the ranked boolean to true for ranked samples observations. Default is false")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass1))

        Array<text> statClass2
        statClass2:Add("Paired()")
        statClass2:Add("Set the ranked boolean to true for ranked samples observations. Default is false.") 
        tableBody_compare_means:Add(AddTableBodyRow(statClass2))
        
    
        Array<text> statClass3
        statClass3:Add("RepeatedMeasures()")
        statClass3:Add("Set the paired boolean to true for paired samples in a Two-Sample Test. Default is false.")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass3))
        
    
        Array<text> statClass4
        statClass4:Add("TestVarianceAssumption()")
        statClass4:Add("Set the repeatedMeasures boolean to true in an N-sample test. Default is false.t")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass4))
        

        Array<text> statClass5
        statClass5:Add("TestDistributionAssumption()")
        statClass5:Add("Set the testVarianceAssumption boolean to true to test variance assumptions. Default is false.")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass5))
        

        Array<text> statClass6
        statClass6:Add("AssumeEqualVariances()")
        statClass6:Add("Set the assumeEqualVariances boolean to true to assume variances are equal. Default is false.")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass6))
        

        Array<text> statClass7
        statClass7:Add("AssumeNormalDistribution()")
        statClass7:Add("Set the assumeNormalDistribution boolean to true to assume normal distribution.Default is false.")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass7))
        

        Array<text> statClass8
        statClass8:Add("CorrectFamilyWiseError()")
        statClass8:Add("Set the correctFamilyWiseError boolean to false in N-sample pairwise tests. Default is true.")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass8))
        

        Array<text> statClass9
        statClass9:Add("SetMean()")
        statClass9:Add("Set the mean in tests where it is applicable.")  
        tableBody_compare_means:Add(AddTableBodyRow(statClass9))
        
              
        Array<text> statClass10
        statClass10:Add("SetMedian()")
        statClass10:Add("Set the median in tests where it is applicable")         
        tableBody_compare_means:Add(AddTableBodyRow(statClass10))

        table_compare_means:Add(tableBody_compare_means)
        section_means:Add(table_compare_means)


        // ONE GROUP
        Section section_one_group
        section_one_group:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_one_group, "One Group", 2)
        section_one_group:AddParagraph("The tests listed below are used with a single sample group.")
             
        WebTable table_one_group = AddWebTable("Tests For One Group")
        TableBody tableBody_one_group = AddTableBody()

        Array<text> statTest
        statTest:Add(AddTextBoldFront("Formal Test", " "))        
        statTest:Add(AddTextBoldFront("Action in CompareMeans Class", " ")) 
        TableHeader thead_one_group = AddTableHeaderRow(statTest)
        table_one_group:Add(thead_one_group)

        Array<text> oneGroupT
        oneGroupT:Add("Parametric: One-Sample T-Test")
        oneGroupT:Add("CompareMeans")
        tableBody_one_group:Add(AddTableBodyRow(oneGroupT))
        
        Array<text> oneGroupT2
        oneGroupT2:Add("Non-Parametric: Wilcoxon Signed Rank Test")
        oneGroupT2:Add("CompareRelatedRankedMeans") 
        tableBody_one_group:Add(AddTableBodyRow(oneGroupT2))

        table_one_group:Add(tableBody_one_group)
        section_one_group:Add(table_one_group)


        AddHeading(section_one_group, "Compare Mean with a Given Value", 3)
        Heading h4_1 = section_one_group:AddHeading("Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Student%27s_t-test" + dq + " > One Sample T-Test </a>", 4)                
        AddHeadingAttributes(h4_1, "One Sample T-Test")

        section_one_group:AddParagraph("We can test whether the mean of a population is different from a proposed value in Quorum by using a One Sample T-Test.") 
        section_one_group:AddParagraph("Let's say you had a snack that claimed it had 25 grams of protein. You can compare whether it really does. To do this, collect a sample of the same energy bars 
                              from different stores and record the grams of protein in each one. Then run compare it to 25 to determine if it is true or not.")
        section_one_group:AddParagraph("An example of how the test is implemented in Quorum is shown below.")
        
        CodeForIDE code_compare1
        code_compare1:AddFileUrl("Main.quorum", "examples/StatsTest/OneSampleTTest.quorum")
        IDE ide_compare1 = AddIDE()
        ide_compare1:HideDisplay()
        ide_compare1:SetCodeForIDE(code_compare1:GetJsonArray())
        ide_compare1:SetIdeTitle("Example of a One Sample T-Test")
        section_one_group:Add(ide_compare1)

        AddHeading(section_one_group, "Compare Ranked Median with a Given Value", 3)
        Heading h4_2 = section_one_group:AddHeading("Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test" + dq + "> Wilcoxon Signed Rank</a>" , 4)
        AddHeadingAttributes(h4_2, "Wilcoxon Signed Rank Test")

        section_one_group:AddParagraph("Using a Wilcoxon Signed Rank Test, we can test the median of a group of numbers of a single sample with a given median for data that is not normally distributed to determine if it is different or not. 
                              Such data does not have a bell shaped curve or has really big values.") 
        section_one_group:AddParagraph("For example, you want to see if a new medicine influences driving abilities. You would randomly pick a group of drivers for your group that took the medicine and then compare their driving abilities to the basic driving 
                               abilities for drivers that have not taken any medicine.")
        section_one_group:AddParagraph("An example of how the test is implemented in Quorum is shown below.")


        CodeForIDE code_compare2
        code_compare2:AddFileUrl("Main.quorum", "examples/StatsTest/WilcoxonSignedRanks.quorum")
        IDE ide_compare2 = AddIDE()
        ide_compare2:HideDisplay()
        ide_compare2:SetCodeForIDE(code_compare2:GetJsonArray())
        ide_compare2:SetIdeTitle("Example of a Wilcoxon Signed Rank Test")
        section_one_group:Add(ide_compare2)
    
        // TWO GROUPS DIFF SUBJECTS
        Section section_two_groups
        AddHeading(section_two_groups, "Two Groups: Different Subjects Per Group", 2)
        section_two_groups:AddParagraph("The tests listed below are used with two sample groups from different populations.")
        
        WebTable table_two_groups = AddWebTable("Tests For Two Groups: Different Subjects")
        TableBody tableBody_two_groups = AddTableBody()

        Array<text> statTest2
        statTest2:Add(AddTextBoldFront("Formal Test", " "))        
        statTest2:Add(AddTextBoldFront("Action in CompareMeans Class", " ")) 
        TableHeader thead_two_groups = AddTableHeaderRow(statTest2)
        table_two_groups:Add(thead_two_groups)

        Array<text> twoGroupT
        twoGroupT:Add("Parametric: 
                  Two-Sample T-Test for Equal Variances, 
                  Welch's Two-Sample T-Test for Unequal Variances")
        twoGroupT:Add("CompareMeans")
        tableBody_two_groups:Add(AddTableBodyRow(twoGroupT))
        
        Array<text> twoGroupT2
        twoGroupT2:Add("Non-Parametric: Mann-Whitney U-Test (Wilcoxon Rank Sum Test)")
        twoGroupT2:Add("CompareRankedMeans")  
        tableBody_two_groups:Add(AddTableBodyRow(twoGroupT2))

        table_two_groups:Add(tableBody_two_groups)
        section_two_groups:Add(table_two_groups)

        AddHeading(section_two_groups, "Compare Means of Two Samples With Equal Variances", 3)
        Heading h4_3 = section_two_groups:AddHeading( "Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Student%27s_t-test" + dq + ">Two-Sample T-Test </a>", 4)
        AddHeadingAttributes(h4_3, "Two-Sample T-Test")

        section_two_groups:AddParagraph("We can use a Two-Sample T-test to determine if the means of two samples are equal assuming that the sample groups have equal variances or in other words, the data is spread out equally.") 
        section_two_groups:AddParagraph("One example where this test could be used is comparing the average scores on a quiz for students from two different schools.")
        section_two_groups:AddParagraph("Below is an example of how to run it in Quorum")
        

        CodeForIDE code_compare3
        code_compare3:AddFileUrl("Main.quorum", "examples/StatsTest/TwoSampleTTest.quorum")
        IDE ide_compare3 = AddIDE()
        ide_compare3:HideDisplay()
        ide_compare3:SetCodeForIDE(code_compare3:GetJsonArray())
        ide_compare3:SetIdeTitle("Example of a Two-Sample T-Test")
        section_two_groups:Add(ide_compare3)

        AddHeading(section_two_groups, "Compare Means of Two Samples With Unequal Variances", 3)
        Heading h4_4 = section_two_groups:AddHeading("Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Welch%27s_t-test" + dq + "> Welch's Two-Sample T-Test</a>", 4)
        AddHeadingAttributes(h4_4, "Welch's Two-Sample T-Test")


        section_two_groups:AddParagraph("We can test data samples that have unequal variances to determine if the means of two populations are equal through a Welch's Two-Sample T-Test. This is the default test in Quorum.") 
        section_two_groups:AddParagraph("Suppose that we want to improve the reading ability of elementary students through a series of activities for reading. Two groups of students would be needed - one group participating 
                              in the reading activities and one group not participating. At the end of the trial period, all students take a test to see if their reading abilities have improved or not. 
                              We can then compare if the activities helped from all the student's scores. ")
        section_two_groups:AddParagraph("To implement this test in Quorum, refer to the example below.")


        CodeForIDE code_compare4
        code_compare4:AddFileUrl("Main.quorum", "examples/StatsTest/WelchTwoSample.quorum")
        IDE ide_compare4 = AddIDE()
        ide_compare4:HideDisplay()
        ide_compare4:SetCodeForIDE(code_compare4:GetJsonArray())
        ide_compare4:SetIdeTitle("Example of a Welch Two-Sample T-Test")
        section_two_groups:Add(ide_compare4)

               
        AddHeading(section_two_groups, "Compare Sample Populations", 3)
        Heading h4_5 = section_two_groups:AddHeading("Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test" + dq + ">Mann-Whitney U-Test or Wilcoxon Rank-Sum Test</a>", 4)
        AddHeadingAttributes(h4_5, "Mann-Whitney U-Test")

        section_two_groups:AddParagraph("We can determine if two different independent samples are from the same population through a Mann-Whitney U-Test. This test is for data that is not normally distributed, so it doesn't have a bell shaped curve.") 
        section_two_groups:AddParagraph("As an example, suppose we are trying to see if exercise or healthy eating is better at lowering sugar levels. One group would exercise and 
                              the other group would eat healthy to determine at the end of the study which one lowered sugar more.")
        section_two_groups:AddParagraph("To do this test in Quorum, refer to the example below.")
        
        CodeForIDE code_compare5
        code_compare5:AddFileUrl("Main.quorum", "examples/StatsTest/MannWhitney.quorum")
        IDE ide_compare5 = AddIDE()
        ide_compare5:HideDisplay()
        ide_compare5:SetCodeForIDE(code_compare5:GetJsonArray())
        ide_compare5:SetIdeTitle("Example of a Mann-Whitney U-Test")
        section_two_groups:Add(ide_compare5)
          

        // TWO GROUPS SAME SUBJECTS
        Section section_two_groups_same
        section_two_groups_same:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_two_groups_same, "Two Groups: Different Subjects Per Group", 2)
        section_two_groups_same:AddParagraph("The tests listed below are used with two sample groups from different populations.")

        WebTable table_two_groups_same = AddWebTable("Tests For Two Groups: Same Subjects")
        TableBody tableBody_two_groups_same = AddTableBody()
        
        Array<text> statTest3
        statTest3:Add(AddTextBoldFront("Formal Test", " "))        
        statTest3:Add(AddTextBoldFront("Action in CompareMeans Class", " ")) 
        TableHeader thead_two_groups_same = AddTableHeaderRow(statTest3)
        table_two_groups_same:Add(thead_two_groups_same)

        Array<text> twoGroupST
        twoGroupST:Add("Parametric: Paired T-Test")
        twoGroupST:Add("CompareRelatedMeans")
        tableBody_two_groups_same:Add(AddTableBodyRow(twoGroupST))
        
        Array<text> twoGroupST2
        twoGroupST2:Add("Non-Parametric: Wilcoxon Signed Rank Test")
        twoGroupST2:Add("CompareRelatedRankedMeans")  
        tableBody_two_groups_same:Add(AddTableBodyRow(twoGroupST2))

        table_two_groups_same:Add(tableBody_two_groups_same)
        section_two_groups_same:Add(table_two_groups_same)

        AddHeading(section_two_groups_same, "Compare Means of Two Dependent/Paired Groups with a Given Value", 3)
        Heading h4_6 = section_two_groups_same:AddHeading("Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Student%27s_t-test" + dq + ">Paired Two-Sample T-Test </a>", 4)
        AddHeadingAttributes(h4_6, "Paired Two-Sample T-Test")

        section_two_groups_same:AddParagraph("We can determine if the means of two paired groups are different from a proposed mean. To use this test in Quorum, refer to the example below.") 
        section_two_groups_same:AddParagraph("One scenario for this test to be used would be seeing the effect of two different study methods on the average exam scores of students in the same class.")
        section_two_groups_same:AddParagraph("Below is an example of how to run it in Quorum")


        CodeForIDE code_compare6
        code_compare6:AddFileUrl("Main.quorum", "examples/StatsTest/PairedTTest.quorum")
        IDE ide_compare6 = AddIDE()
        ide_compare6:HideDisplay()
        ide_compare6:SetCodeForIDE(code_compare6:GetJsonArray())
        ide_compare6:SetIdeTitle("Example of a Paired Two-Sample T-Test")
        section_two_groups_same:Add(ide_compare6)

        AddHeading(section_two_groups_same, "Compare Ranked Medians of Two Paired Samples With a Given Value", 3)
        Heading h4_7 = section_two_groups_same:AddHeading("Technical Test Name:<a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test" + dq + "> Wilcoxon Signed Rank Test - Two Groups</a>", 4)
        AddHeadingAttributes(h4_7, "Wilcoxon Signed Rank Test - Two Groups")

        section_two_groups_same:AddParagraph("We use a Wilcoxon Signed Rank Test to determine if the ranked medians of two paired samples is different from a proposed median. It is the same as the one previously mentioned, just with two groups now.") 
        section_two_groups_same:AddParagraph("For example, imagine you are a student in an 8th-grade science class, and your teacher wants to see if a new way of teaching helps students learn better. She decides to split the class into 
                              two groups - one group will be taught using the traditional method, and the other group will be taught using the new method. Both groups will take a pre-test to see what they already know, 
                              and then they will be taught using their assigned methods. After a certain period of time, both groups will take a post-test to see how much they have learned. The Wilcoxon Signed Rank Test can be used to 
                              compare the scores of the two groups. Since the same students are taking both tests, we can pair up their scores and see if there is a significant difference between the two groups.")
        section_two_groups_same:AddParagraph("To implement this test factorin Quorum, refer to the example below.")

        CodeForIDE code_compare7
        code_compare7:AddFileUrl("Main.quorum", "examples/StatsTest/WilcoxonSignedRanks2.quorum")
        IDE ide_compare7 = AddIDE()
        ide_compare7:HideDisplay()
        ide_compare7:SetCodeForIDE(code_compare7:GetJsonArray())
        ide_compare7:SetIdeTitle("Example of a Wilcoxon Signed Rank Test")
        section_two_groups_same:Add(ide_compare7)


         // N GROUPS DIFF SUBJECTS
        Section section_n_groups
        section_n_groups:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_n_groups, "N Groups - Different Subjects Per Group", 2)
        // !!!!!!!TODO: add link for post hoc 
        section_n_groups:AddParagraph("The tests listed below are used for a N (two or more) amount of different groups. Consider the post-hoc analysis tests after running the tests below.")

        WebTable table_n_groups = AddWebTable("Tests For N Groups: Different Subjects")
        TableBody tableBody_n_groups = AddTableBody()
        
        Array<text> statTest4
        statTest4:Add(AddTextBoldFront("Formal Test", " "))        
        statTest4:Add(AddTextBoldFront("Action in CompareMeans Class", " ")) 
        TableHeader thead_n_groups = AddTableHeaderRow(statTest4)
        table_n_groups:Add(thead_n_groups)

        Array<text> nGroupT
        nGroupT:Add("Parametric: 
                  One-Way ANOVA for Equal Variances, 
                  Welch's One-Way ANOVA for Unequal Variances")
        nGroupT:Add("CompareMeans, CompareMeansAssumingEqualVariances")
        tableBody_n_groups:Add(AddTableBodyRow(nGroupT))
        
        Array<text> nGroupT2
        nGroupT2:Add("Non-Parametric: Kruskal-Wallis H-Test")
        nGroupT2:Add("CompareRankedMeans")  
        tableBody_n_groups:Add(AddTableBodyRow(nGroupT2))

        table_n_groups:Add(tableBody_n_groups)
        section_n_groups:Add(table_n_groups)

        AddHeading(section_n_groups, "Compare Means of Two or More Different Groups with Equal Variances", 3)
        Heading h4_8 = section_n_groups:AddHeading("Technical Test Name:<a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/One-way_analysis_of_variance" + dq + "> One-Way ANOVA </a>", 4)
        AddHeadingAttributes(h4_8, "One-Way ANOVA")

        section_n_groups:AddParagraph("We can check if the means of two or more different groups are different from each other by using a One-Way ANOVA. It would work best with three or more groups.") 
        section_n_groups:AddParagraph("A scenario in which this test would be used is finding the difference between average headache relief given three different medicines.")
        section_n_groups:AddParagraph(" An example of how to implement this test in Quorum is shown below.")
    

        CodeForIDE code_compare8
        code_compare8:AddFileUrl("Main.quorum", "examples/StatsTest/OneWayAnova.quorum")
        IDE ide_compare8 = AddIDE()
        ide_compare8:HideDisplay()
        ide_compare8:SetCodeForIDE(code_compare8:GetJsonArray())
        ide_compare8:SetIdeTitle("Example of a One-Way ANOVA")
        section_n_groups:Add(ide_compare8)

        // !!!!!TODO: ADD LINK TO post hoc test
        section_n_groups:AddParagraph("We can use Tukey's HSD Multiple Comparison Test as a followup to do some post-hoc analysis.")

        AddHeading(section_n_groups, "Compare Means of Two or More Different Groups with Unequal Variances", 3)
        Heading h4_9 = section_n_groups:AddHeading("Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/One-way_analysis_of_variance" + dq + ">Welch's ANOVA</a>", 4)
        AddHeadingAttributes(h4_9, "Welch's ANOVA")

        section_n_groups:AddParagraph("We can use Welch's ANOVA Test to check if the means of two or more different groups with unequal variances are different from each other.") 
        section_n_groups:AddParagraph("One scenario to use this test would be determining how outgoing different hair colors (brown, blonde, black, or red) are. It does not assume variances of the groups 
                              are equal meaning that there might be data that varies from the average.")
        section_n_groups:AddParagraph("An example of how to implement this test in Quorum is shown below.")

        CodeForIDE code_compare9
        code_compare9:AddFileUrl("Main.quorum", "examples/StatsTest/WelchAnova.quorum")
        IDE ide_compare9 = AddIDE()
        ide_compare9:HideDisplay()
        ide_compare9:SetCodeForIDE(code_compare9:GetJsonArray())
        ide_compare9:SetIdeTitle("Example of a Welch's ANOVA")
        section_n_groups:Add(ide_compare9)

        // !!!!!TODO: ADD LINK TO post hoc test
        section_n_groups:AddParagraph("The Games-Howell Multiple Comparison Test is most commonly used as the post-hoc analysis for this test.")

        AddHeading(section_n_groups, "Compare Medians of Two or More Different Groups", 3)
        Heading h4_10 = section_n_groups:AddHeading("Technical Test Name: <a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Kruskal%E2%80%93Wallis_one-way_analysis_of_variance" + dq + "> Kruskal-Wallis H-Test</a>", 4)
        AddHeadingAttributes(h4_10, "Kruskal-Wallis H-Test")

        section_n_groups:AddParagraph("We use a Kruskal-Wallis Test to compare the medians of two or more different groups to see if they are different. It is an ANOVA test for data that does not have a normal distribution.") 
        section_n_groups:AddParagraph("Suppose we want to measure the growth of a plant in different sunlight. We plant some seeds in five different spots with either lots of sunlight directly, medium sunlight, low sunlight, sunlight through a window, 
                              or no sunlight. After some time, we can measure the height of the plants that grew in each different sunlight. A Kruskal-Wallis test will help determine if sunlight impacts the growth of the plant using the median.")
        section_n_groups:AddParagraph("An example of how to do this test in Quorum is shown below. ")

        CodeForIDE code_compare10
        code_compare10:AddFileUrl("Main.quorum", "examples/StatsTest/KruskalWallis.quorum")
        IDE ide_compare10 = AddIDE()
        ide_compare10:HideDisplay()
        ide_compare10:SetCodeForIDE(code_compare10:GetJsonArray())
        ide_compare10:SetIdeTitle("Example of a Kruskal-Wallis H-Test")
        section_n_groups:Add(ide_compare10)

        
 // TWO GROUPS SAME SUBJECTS
        Section section_n_groups_same
        section_n_groups_same:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_n_groups_same, "N Groups - Same Subjects Per Group (Repeated Measurements/Observations)", 2)
        section_n_groups_same:AddParagraph("The tests listed below are used with a N (two or more) amount of groups from the same population.")

        WebTable table_n_groups_same = AddWebTable("Tests For N Groups: Same Subjects")
        TableBody tableBody_n_groups_same = AddTableBody()
        
        Array<text> statTest5
        statTest5:Add(AddTextBoldFront("Formal Test", " "))        
        statTest5:Add(AddTextBoldFront("Action in CompareMeans Class", " ")) 
        TableHeader thead_n_groups_same = AddTableHeaderRow(statTest5)
        table_n_groups_same:Add(thead_n_groups_same)

        Array<text> n2GroupT
        n2GroupT:Add("Parametric: Repeated Measures Anova")
        n2GroupT:Add("CompareRelatedMeans")
        tableBody_n_groups_same:Add(AddTableBodyRow(n2GroupT))
        
        Array<text> n2GroupT2
        n2GroupT2:Add("Non-Parametric: Friedman Test")
        n2GroupT2:Add("CompareRelatedRankedMeans")  
        tableBody_n_groups_same:Add(AddTableBodyRow(n2GroupT2))

        table_n_groups_same:Add(tableBody_n_groups_same)
        section_n_groups_same:Add(table_n_groups_same)

        AddHeading(section_n_groups_same, "Compare Means of Several Similar Groups", 3)
        Heading h4_11 = section_n_groups_same:AddHeading("Technical Test Name:<a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Repeated_measures_design" + dq + "> Repeated Measures ANOVA Test </a>", 4)
        AddHeadingAttributes(h4_11, "Repeated Measures ANOVA Test")

        section_n_groups_same:AddParagraph("We can determine if the means of several similar groups are the same or not through repeated observations or trials over time.") 
        section_n_groups_same:AddParagraph("One scenario to use the Repeated Measures One-Way ANOVA test would be tracking the weight gain of a puppy after eating a specific dog food for 6 weeks. Weighing the puppy before 
                              starting the dog food and every week after that for 6 weeks would be the repeated measures part.")
        section_n_groups_same:AddParagraph("Below is an example of how to run it in Quorum")
        
        CodeForIDE code_compare11
        code_compare11:AddFileUrl("Main.quorum", "examples/StatsTest/RMAnova.quorum")
        IDE ide_compare11 = AddIDE()
        ide_compare11:HideDisplay()
        ide_compare11:SetCodeForIDE(code_compare11:GetJsonArray())
        ide_compare11:SetIdeTitle("Example of a Repeated Measures ANOVA Test")
        section_n_groups_same:Add(ide_compare11)
        
        // !!!!!TODO: add link to post hoc test
        section_n_groups_same:AddParagraph("We can run a Bonferroni Pairwise Procedure as a post hoc analysis test.")

        AddHeading(section_n_groups_same, "Compare Medians of Several Similar Groups", 3)
        Heading h4_12 = section_n_groups_same:AddHeading("Technical Test Name:<a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Friedman_test" + dq + "> Friedman Test</a>", 4)
        AddHeadingAttributes(h4_12, "Friedman Test")

        section_n_groups_same:AddParagraph("We use a Friedman Test to compare the difference between the medians of three or more groups through repeated observations.") 
        section_n_groups_same:AddParagraph("An example scenario of when this test could be used is watching movies. We could have a group of people watch five different movies and rate how good it was. Every person will rate the five movies so a 
                              Friedman test could determine if there are any major differences in the ratings of the five movies. ")
        section_n_groups_same:AddParagraph("An example of how to do this test in Quorum is shown below.")

        CodeForIDE code_compare12
        code_compare12:AddFileUrl("Main.quorum", "examples/StatsTest/FriedmanTest.quorum")
        IDE ide_compare12 = AddIDE()
        ide_compare12:HideDisplay()
        ide_compare12:SetCodeForIDE(code_compare12:GetJsonArray())
        ide_compare12:SetIdeTitle("Example of a Friedman Test")
        section_n_groups_same:Add(ide_compare12)

        Section section_factorial
        section_factorial:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_factorial, "Factorial ANOVA and MANOVA", 2)        
        section_factorial:AddParagraph("A Factorial ANOVA is a type of ANOVA that looks at two or more factors at the same time and can be either balanced or unbalanced. A factor is just a category or 
                              group that we're interested in.")
        section_factorial:AddParagraph("This test uses the factors that we are interested in and tries to see what changes they caused on one dependent variable. 
                              For example, let's say we want to know if there's a difference in test scores based on both the number of hours studied per day AND the type of study method 
                              used (flashcards, reading notes, or practicing problems). We could use a Factorial ANOVA to analyze this data and see if there are significant differences 
                              between the different groups. Basically, a Factorial ANOVA is a statistical test that looks at multiple factors at the same time and can either be balanced or 
                              unbalanced which is explained in more detail below.") 
        section_factorial:AddParagraph("The tests listed below are used for a N (two or more) amount of different groups with more than one factor.")

        WebTable table_factorial = AddWebTable("Tests For N Groups: Multiple Factors")
        TableBody tableBody_factorial = AddTableBody()
        
        Array<text> statTest6
        statTest6:Add(AddTextBoldFront("Formal Test", " "))        
        statTest6:Add(AddTextBoldFront("Action in CompareMeans Class", " ")) 
        TableHeader thead_factorial = AddTableHeaderRow(statTest6)
        table_factorial:Add(thead_factorial)

        Array<text> fGroupT
        fGroupT:Add("Parametric: Balanced Factorial ANOVA")
        fGroupT:Add("CompareMeans")
        tableBody_factorial:Add(AddTableBodyRow(fGroupT))
        
        Array<text> fGroupT2
        fGroupT2:Add("Non-Parametric: Unbalanced Factorial ANOVA")
        fGroupT2:Add("CompareMeans")  
        tableBody_factorial:Add(AddTableBodyRow(fGroupT2))

        table_factorial:Add(tableBody_factorial)
        section_factorial:Add(table_factorial)

        AddHeading(section_factorial, "Compare Several Means With Same Number of Groups", 3)
        Heading h4_13 = section_factorial:AddHeading("Technical Test Name:<a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Two-way_analysis_of_variance" + dq + "> Balanced Factorial ANOVA </a>", 4)
        AddHeadingAttributes(h4_13, "Balanced Factorial ANOVA")

       
        section_factorial:AddParagraph("In a Balanced Factorial ANOVA, each group has the same number of participants.")
        section_factorial:AddParagraph("We are going to use the example above to see what different study methods and different amounts of time affect test scores. For a Balanced Factorial ANOVA, if we 
                              have 3 different study methods and 3 different study hours (which are the factors), we would need the same number of participants in each of the 9 resulting groups. 
                              Then it would make the data balanced and we can then compare any differences between the groups.")
    
        AddHeading(section_factorial, "Compare Several Means With Different Number of Groups", 3)
        Heading h4_14 = section_factorial:AddHeading("Technical Test Name:<a class="+dq+"underline text-quorum-blue-150"+dq+" href=" + dq + "https://en.wikipedia.org/wiki/Two-way_analysis_of_variance" + dq + "> Unbalanced Factorial ANOVA </a>", 4)
        AddHeadingAttributes(h4_14, "Unbalanced Factorial ANOVA")
       
        section_factorial:AddParagraph("In an Unbalanced Factorial ANOVA, groups might have more participants than others. 
                              This happens mostly when there are not enough groups or not enough people to recruit.")
        section_factorial:AddParagraph("Let's use the example above to see what different study methods and different amounts of time affect test scores. We might have three groups for studying time: 
                              one group that studies for 1 hour, another group that studies for 2 hours, and a third group that studies for 3 hours. With these, there might be more participants 
                              in one group than in another like we have 10 participants in the 1 hour group, 15 participants in the 2 hour group, and 8 participants in the 3 hour group. This 
                              unequal grouping makes it harder to see differences between the groups, but it can be done using an Unbalanced Factorial ANOVA!")
            
        CodeForIDE code_compare13
        code_compare13:AddFileUrl("Main.quorum", "examples/StatsTest/FactorialAnova.quorum")
        IDE ide_compare13 = AddIDE()
        ide_compare13:HideDisplay()
        ide_compare13:SetCodeForIDE(code_compare13:GetJsonArray())
        ide_compare13:SetIdeTitle("Example of a Factorial ANOVA")
        section_factorial:Add(ide_compare13)
    
        AddHeading(section_factorial, "Factorial MANOVA", 3) 
        section_factorial:AddParagraph("MANOVA stands for multivariate analysis of variance which is a type of statistical analysis that looks at the relationship between multiple variables.")
        section_factorial:AddParagraph("A Factorial MANOVA looks at the effects of multiple independent variables (factors) on multiple dependent variables at the same time. This test helps us compare 
                              groups of data based on different variables (factors or characteristics) to see if there are any differences between them. 
                              Our goal is to see how the independent variables or factors affect the dependent variables.") 
        section_factorial:AddParagraph("The tests listed below are used for a N (two or more) amount of different groups with more than one factor.")

        WebTable table_factorial2 = AddWebTable("Tests For N Groups: Multiple Dependent Variables")
        TableBody tableBody_factorial2 = AddTableBody()
        
        Array<text> statTest7
        statTest7:Add(AddTextBoldFront("Formal Test", " "))        
        statTest7:Add(AddTextBoldFront("Action in CompareMeans Class", " ")) 
        TableHeader thead_factorial2 = AddTableHeaderRow(statTest7)
        table_factorial2:Add(thead_factorial2)

        Array<text> fMGroupT
        fMGroupT:Add("Parametric: Factorial MANOVA")
        fMGroupT:Add("CompareSeveralMeans")
        tableBody_factorial2:Add(AddTableBodyRow(fMGroupT))
                
        table_factorial2:Add(tableBody_factorial2)
        section_factorial:Add(table_factorial2)

        AddHeading(section_factorial, "Compare Means Of Several Groups With Multiple Dependent and Independent Variables", 3)
        section_factorial:AddHeading("Technical Test Name:<a class="+dq+"underline text-quorum-blue-150"+dq+"  href=" + dq + "https://en.wikipedia.org/wiki/Multivariate_analysis_of_variance" + dq + "> Factorial MANOVA </a>", 4)

       
        section_factorial:AddParagraph("In a Balanced Factorial ANOVA, each group has the same number of participants.")
        section_factorial:AddParagraph("Imagine you have a bunch of data about different things, like the height, weight, and age of a group of people. Now, you want to find out if certain factors, 
                              like gender and exercise, have an effect on people's height or weight.  A Factorial MANOVA lets you look at multiple factors together at the same time instead
                              of looking at them one at a time.")


        CodeForIDE code_compare14
        code_compare14:AddFileUrl("Main.quorum", "examples/StatsTest/FactorialManova.quorum")
        IDE ide_compare14 = AddIDE()
        ide_compare14:HideDisplay()
        ide_compare14:SetCodeForIDE(code_compare2:GetJsonArray())
        ide_compare14:SetIdeTitle("Example of a Factorial MANOVA")
        section_factorial:Add(ide_compare14)


        bodyDiv:Add(section_means)
        bodyDiv:Add(section_one_group)
        bodyDiv:Add(section_two_groups)
        bodyDiv:Add(section_two_groups_same)
        bodyDiv:Add(section_n_groups)
        bodyDiv:Add(section_n_groups_same)
        bodyDiv:Add(section_factorial)
        
        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about Statistical Tests Overview on Quorum Language."
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "One-sample t-test, Two-sample t-test, Paired t-test, ANOVA (Analysis of Variance), MANOVA (Multivariate Analysis of Variance), ANCOVA (Analysis of Covariance), 
                                          Repeated measures ANOVA, Independent samples t-test, Welch's t-test, Student's t-test, Z-test, Wilcoxon rank-sum test, Mann-Whitney U-test, Kruskal-Wallis test, Friedman test, mean, median")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "Compare Means Statistical Tests"
    end

    action GetName returns text
        return "Compare Means"
    end

    action GetShortDescription returns text
        return "how to compare the difference between groups "
    end

    action GetLocation returns text
        return "tutorials/statstest/compareGroupsTests.html"
    end

    action GetLinkName returns text
        return "Compare Means"
    end

    action GetSectionName returns text
        return "Statistical Tests"
    end
end
