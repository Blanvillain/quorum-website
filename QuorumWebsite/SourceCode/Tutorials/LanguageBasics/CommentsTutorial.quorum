use Libraries.Web.Page.all
use Libraries.Containers.Array

class CommentsTutorial is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Notes and comments - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Tutorial: Commenting Code", 1)

        headDiv:AddText("How to write notes to remind ourselves of what code does.")
        bodyDiv:Add(headDiv)
        Section section_comments
        AddHeading(section_comments, "Comments", 2)
        section_comments:AddParagraph(   "Since computer code can be esoteric, "
                            +   "programmers sometimes write notes to help sort out what a piece of code does. "
                            +   "We do this using comments in two ways: an "
                            +   "1) end-of-line comment and a 2) multiline comment.")

 
        //the section on end-of-line comments
        AddHeading(section_comments, "End-of-line comments", 2)
        section_comments:AddParagraph(   "An end-of-line comment tells the computer to ignore any text after the comment indicator. "
                            +   "We can also put an end-of-line comment on its own line. "
                            +   "For an end-of-line comment, we start with two forward slashes, like so:")
        CodeBlock cb1
        Span s1
        s1:AddText("// This is a comment." + cr )
        s1:SetClassAttribute("comment")
        cb1:Add(s1)
        section_comments:Add(preformatter:GeneratePreformattedCode(cb1))

        section_comments:AddParagraph("Anything after the slashes will be ignored by the compiler.")


        //the section on multiline
        Section section_multiline
        section_multiline:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_multiline, "Multiline Comments", 2)
        section_multiline:AddParagraph(   "A multiline comment can include  many lines. "
                            +   " To insert a multiline comment, we "
                            +   "start with a forward slash and an asterisk and end with an asterisk and a forward slash. Here is an example:")
        CodeBlock cb2
        Span s2
        s2:AddText("/* This is" + cr + " a comment. */")
        s2:SetClassAttribute("comment")
        cb2:Add(s2)
        section_multiline:Add(preformatter:GeneratePreformattedCode(cb2))

        section_multiline:AddParagraph("Quorum will ignore any text between the beginning of the comment and the end of the comment, even if it spans multiple lines.")
  


        //the section on uses of comments
        Section section_uses_of_comments
        section_uses_of_comments:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_uses_of_comments, "Uses of Comments", 2)
        section_uses_of_comments:AddParagraph(   "In addition to explaining code, comments can serve other purposes. "
                            +   "One such purpose is temporarily turning off code for testing. For instance, "
                            +   "suppose we wrote the following code:")
        section_uses_of_comments:Add(preformatter:GeneratePreformattedCode(  "class Main" + cr
                                                        +   "   action Main" + cr
                                                        +   "       integer i = 15" + cr
                                                        +   "       integer j = 25" + cr
                                                        +   "       integer k = 35" + cr
                                                        +   "       output i " + cr
                                                        +   "       output j " + cr
                                                        +   "       output k " + cr
                                                        +   "   end" + cr
                                                        +   "end" + cr))
        section_uses_of_comments:AddParagraph(   "Here is an example of commenting out a few lines of code:")

        CodeBlock cb3
        Span s3
        cb3:AddText("class Main" + cr
                +   "   action Main" + cr
                +   "       integer i = 15" + cr )
        s3:AddText( "       //integer j = 25" + cr 
                +   "       //integer k = 35" + cr)
        s3:SetClassAttribute("comment")
        cb3:Add(s3)
        cb3:AddText("       output i" + cr
                +   "   end" + cr
                +   "end" + cr)
        section_uses_of_comments:Add(preformatter:GeneratePreformattedCode(cb3))

  
        section_uses_of_comments:AddParagraph("or with a multiline comment:")

        CodeBlock cb4
        Span s4
        cb4:AddText("class Main" + cr
                +   "   action Main" + cr
                +   "       integer i = 15" + cr )
        s4:AddText( "       /*integer j = 25" + cr 
                +   "       integer k = 35*/" + cr)
        s4:SetClassAttribute("comment")
        cb4:Add(s4)
        cb4:AddText("       output i" + cr
                +   "   end" + cr
                +   "end" + cr)
        section_uses_of_comments:Add(preformatter:GeneratePreformattedCode(cb4))

 
        section_uses_of_comments:AddParagraph("This way, the compiler won't see the code but it will still be in our file. Below " +
            " is a development environment where we can try out comments. Now, " +
            "these comments will obviously not do anything, but the point is to try " +
            "them out to practice how it works.")


        CodeForIDE code_comments
        code_comments:AddFileText("Main.quorum", "//Try the above code blocks.")
        IDE ide_comments = AddIDE()
        ide_comments:HideDisplay()
        ide_comments:SetLightTheme()
        ide_comments:SetCodeForIDE(code_comments:GetJsonArray())
        ide_comments:SetIdeTitle("Activity: Try comments")
        section_uses_of_comments:Add(ide_comments)

        bodyDiv:Add(section_comments)
        bodyDiv:Add(section_multiline)
        bodyDiv:Add(section_uses_of_comments)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about how write notes or comments when using Quorum programming language."
    end

    action GetSummaryName returns text
        return "Comments"
    end

    action GetImageLocation returns text
        return "/media/basics/comments.png"
    end

    action GetName returns text
        return "comments"
    end

    action GetShortDescription returns text
        return "how to make notes and documentation to help us understand the code"
    end


    action GetLinkName returns text
        return "Comments"
    end

    action GetLocation returns text
      if GetNewLocation() not= ""
        return GetNewLocation()
      end
      return "tutorials/language/comments.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Quorum Basics"
    end
end
