use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.OrderedList
use Libraries.Containers.Array
use Libraries.Web.Page.Link

class DatabaseModifyingTables is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Modifying a Table - Quorum Programming Lanugage")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Tutorial: Databases", 1)
        headDiv:AddText("This tutorial shows us how to modify our table in our database")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        
        bodyDiv:AddHeading("Modifying Tables", 2)
        
        bodyDiv:AddParagraph("In a database system, we often break up what we want to store into a series of tables. The reasons are numerous, but largely come down to taking less storage or retrieving data more quickly. An example might be making online purchases. In such a case, one table might have a user's card information and another would have transactions. It would be easier to separate the two because if a user changes credit card information previous purchases would not have to get updated information since it is in its own separate category.
")
        
        Array<text> rubricText1
        rubricText1:Add("1")
        rubricText1:Add("Steven Universe") 
        rubricText1:Add("67891") 
        rubricText1:Add("8/24/2022") 
        rubricText1:Add("Steam") 
        rubricText1:Add("1") 
        
        Array<text> rubricText2
        rubricText2:Add("2")
        rubricText2:Add("Steven Universe") 
        rubricText2:Add("67891") 
        rubricText2:Add("8/24/2022") 
        rubricText2:Add("Uniqlo") 
        rubricText2:Add("2") 

        Array<text> rubricText3
        rubricText3:Add("3")
        rubricText3:Add("Steven Universe") 
        rubricText3:Add("67891") 
        rubricText3:Add("8/25/2022") 
        rubricText3:Add("Target") 
        rubricText3:Add("3") 

        Array<text> rubricHeader2
        rubricHeader2:Add(AddTextBoldFront("User ID", " "))
        rubricHeader2:Add(AddTextBoldFront("Name", " "))
        rubricHeader2:Add(AddTextBoldFront("Card Number", " "))
        rubricHeader2:Add(AddTextBoldFront("Date of Purchase", " "))
        rubricHeader2:Add(AddTextBoldFront("Vendor", " "))
        rubricHeader2:Add(AddTextBoldFront("TransactionID", " "))

       
        Array<text> rubricRows2
        rubricRows2:Add(AddTableHeaderTag(rubricHeader2))

        rubricRows2:Add(AddTableDataTag(rubricText1))
        rubricRows2:Add(AddTableDataTag(rubricText2))
        rubricRows2:Add(AddTableDataTag(rubricText3))


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows2), "Before Updating (Single Table)"))
        
        Array<text> rubricText6
        rubricText6:Add("1")
        rubricText6:Add("Steven Universe") 
        rubricText6:Add("12345") 
        rubricText6:Add("8/24/2022") 
        rubricText6:Add("Steam") 
        rubricText6:Add("1") 

        Array<text> rubricText4
        rubricText4:Add("2")
        rubricText4:Add("Steven Universe") 
        rubricText4:Add("12345") 
        rubricText4:Add("8/24/2022") 
        rubricText4:Add("Uniqlo") 
        rubricText4:Add("2") 

        Array<text> rubricText5
        rubricText5:Add("3")
        rubricText5:Add("Steven Universe") 
        rubricText5:Add("12345") 
        rubricText5:Add("8/25/2022") 
        rubricText5:Add("Target") 
        rubricText5:Add("3") 

        Array<text> rubricHeader3
        rubricHeader3:Add(AddTextBoldFront("User ID", " "))
        rubricHeader3:Add(AddTextBoldFront("Name", " "))
        rubricHeader3:Add(AddTextBoldFront("Card Number", " "))
        rubricHeader3:Add(AddTextBoldFront("Date of Purchase", " "))
        rubricHeader3:Add(AddTextBoldFront("Vendor", " "))
        rubricHeader3:Add(AddTextBoldFront("TransactionID", " "))

       
        Array<text> rubricRows3
        rubricRows3:Add(AddTableHeaderTag(rubricHeader3))

        rubricRows3:Add(AddTableDataTag(rubricText6))
        rubricRows3:Add(AddTableDataTag(rubricText4))
        rubricRows3:Add(AddTableDataTag(rubricText5))


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows3), "After Updating (Single Table)"))
        
        Array<text> rubricText7
        rubricText7:Add("1")
        rubricText7:Add("Steven Universe") 
        rubricText7:Add("67891") 



        Array<text> rubricHeader4
        rubricHeader4:Add(AddTextBoldFront("UserID", " "))
        rubricHeader4:Add(AddTextBoldFront("Name", " "))
        rubricHeader4:Add(AddTextBoldFront("Card Number", " "))


        Array<text> rubricRows4
        rubricRows4:Add(AddTableHeaderTag(rubricHeader4))

        rubricRows4:Add(AddTableDataTag(rubricText7))


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows4), "Before Updating (Multiple Tables)"))

        Array<text> rubricText8
        rubricText8:Add("1")
        rubricText8:Add("8/24/2022") 
        rubricText8:Add("Steam") 


          Array<text> rubricText9
        rubricText9:Add("2")
        rubricText9:Add("8/24/2022") 
        rubricText9:Add("Uniqlo") 

         Array<text> rubricText10
        rubricText10:Add("3")
        rubricText10:Add("8/24/2022") 
        rubricText10:Add("Target") 

        Array<text> rubricHeader5
        rubricHeader5:Add(AddTextBoldFront("TransactionID", " "))
        rubricHeader5:Add(AddTextBoldFront("Date of Purchase", " "))
        rubricHeader5:Add(AddTextBoldFront("Vendor", " "))


        Array<text> rubricRows5
        rubricRows5:Add(AddTableHeaderTag(rubricHeader5))

        rubricRows5:Add(AddTableDataTag(rubricText8))
        rubricRows5:Add(AddTableDataTag(rubricText9))
        rubricRows5:Add(AddTableDataTag(rubricText10))


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows5), "Before Updating (Multiple Tables)"))

        Array<text> rubricText11
        rubricText11:Add("1")
        rubricText11:Add("Steven Universe") 
        rubricText11:Add("67891") 



        Array<text> rubricHeader6
        rubricHeader6:Add(AddTextBoldFront("UserID", " "))
        rubricHeader6:Add(AddTextBoldFront("Name", " "))
        rubricHeader6:Add(AddTextBoldFront("Card Number", " "))


        Array<text> rubricRows6
        rubricRows6:Add(AddTableHeaderTag(rubricHeader6))

        rubricRows6:Add(AddTableDataTag(rubricText11))


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows4), "After Updating (Multiple Tables)"))

        Array<text> rubricText12
        rubricText12:Add("1")
        rubricText12:Add("8/24/2022") 
        rubricText12:Add("Steam") 


          Array<text> rubricText13
        rubricText13:Add("2")
        rubricText13:Add("8/24/2022") 
        rubricText13:Add("Uniqlo") 

         Array<text> rubricText14
        rubricText14:Add("3")
        rubricText14:Add("8/24/2022") 
        rubricText14:Add("Target") 

        Array<text> rubricHeader7
        rubricHeader7:Add(AddTextBoldFront("TransactionID", " "))
        rubricHeader7:Add(AddTextBoldFront("Date of Purchase", " "))
        rubricHeader7:Add(AddTextBoldFront("Vendor", " "))


        Array<text> rubricRows7
        rubricRows7:Add(AddTableHeaderTag(rubricHeader7))

        rubricRows7:Add(AddTableDataTag(rubricText12))
        rubricRows7:Add(AddTableDataTag(rubricText13))
        rubricRows7:Add(AddTableDataTag(rubricText14))


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows7), "After Updating (Multiple Tables)"))

        bodyDiv:AddParagraph("As shown by our tables, if we have multiple tables, we can spend less time trying to update a larger table. We can have simple tables and update a smaller one which gives less overhead.")

        bodyDiv:AddParagraph("Say that we have created a new table, but we accidentally forgot to add a column or may have made a typo in our table name. Instead of deleting that table and creating a new one, we can modify the table. To do this, we would create a new object called EditTable, that allows us to use helper actions to edit the existing table inside of our database. ")

        bodyDiv:AddParagraph(" ")
        bodyDiv:AddText("With our EditTable object, we are now able to change the name of our table, remove columns, edit column data types, filter our data, and ")
        Link link2
        link2:AddText("many more other actions to use")
        link2:SetAddress("https://quorumlanguage.com/Libraries/Data/Database/EditTable.html#AlterAutoIncrement:integer")
        link2:SetTarget(link2:newTab)
        bodyDiv:Add(link2)
        bodyDiv:AddText("For this example, we are going to create another empty table, which we can do in a separate file or use SQL commands in order to modify our table using Quorum actions. Below is some sample code on creating an empty table and it is important that this table exists before using the EditTable object.")

        bodyDiv:AddParagraph(" ")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(" CreateTable newTable
    newTable:SetTable("+dq+"newtable"+dq+")
    newTable:AddIntegerColumn("+dq+"tableID"+dq+")
    newTable:AddIntegerColumn("+dq+"tableText"+dq+")
    newTable:AddIntegerColumn("+dq+"tableText2"+dq+")
    database:CreateTable(newTable)
"))

        bodyDiv:AddParagraph("We will be learning how to edit the name of our table, change a column's data type, remove a column, and establish an autoincrement on our table. A note on auto increment is that  typically when adding new queries, we would have to manually log in the ID. However, if we edit our table, we can increment a value automatically.")

        bodyDiv:AddParagraph("To have access to these actions, we will need to create the EditTable object, which we can name 'edit.'")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Data.Database.Database
    use Libraries.Data.Database.EditTable
    use Libraries.Data.Database.CreateTable

    Database database
    database:Connect("+dq+"localhost"+dq+", "+dq+"myfirstdatabase"+dq+", "+dq+"root"+dq+", "+dq+"coolPasseword"+dq+")

    EditTable edit
"))

        bodyDiv:AddParagraph("Using edit we will be using the actions: SetTable(text tableName), AlterAutoIncrement(int newStart), renameTable(text newName), ModifyColumn(text columnName, text dataType), AddColumn(text columnName, text dataType), DropColumn(text columnName), and EditTable(EditTable objectName).")

        Array<text> rubricText15
        rubricText15:Add("EditTable query")
        rubricText15:Add("The EditTable query represents the ALTER TABLE command of the SQL (Structured Query Language) language. This query allows for table manipulations by adding, dropping, or modifying columns.") 
        rubricText15:Add("EditTable edit") 

        Array<text> rubricText16
        rubricText16:Add("AddColumn(text column, text dataType)")
        rubricText16:Add("Adds objects that have been remapped to a single table for reference in actions called when building the query to text.")
        rubricText16:Add("edit:AddColumn("+dq+"newColumn"+dq+","+dq+"integer"+dq+")") 

        Array<text> rubricText17
        rubricText17:Add("AlterAutoIncrement(integer newStart)")
        rubricText17:Add("This action allows the auto increment value to be changed.") 
        rubricText17:Add("edit:AlterAutoIncrement(1)") 

        Array<text> rubricText18
        rubricText18:Add("DropColumn(text column)")
        rubricText18:Add("This action drops a column from a table.") 
        rubricText18:Add("edit:DropColumn("+dq+"tableText2"+dq+")") 


    Array<text> rubricText19
        rubricText19:Add("RenameTable(text newName)")
        rubricText19:Add("This action renames a table in the database.") 
        rubricText19:Add("edit:RenameTable("+dq+"superNewTable"+dq+")") 

        Array<text> rubricText20
        rubricText20:Add("SetTable(text table)")
        rubricText20:Add("This action sets the table of the query.") 
        rubricText20:Add("edit:SetTable("+dq+"newtable"+dq+")") 

        Array<text> rubricText21
        rubricText21:Add("ModifyColumn(text column, text dataType)")
        rubricText21:Add("This action allows the type of a column to be changed.")
        rubricText21:Add("edit:ModifyColumn("+dq+"tableText"+dq+","+dq+"string"+dq+")") 


        Array<text> rubricText22
        rubricText22:Add("databaseObject:EditTable(EditTable object)")
        rubricText22:Add("This action allows the modified changed to be committed and reflected upon the database.") 
        rubricText22:Add("database:EditTable(edit)") 




        Array<text> rubricHeader8
        rubricHeader8:Add(AddTextBoldFront("Action / Object", " "))
        rubricHeader8:Add(AddTextBoldFront("Structure", " "))
        rubricHeader8:Add(AddTextBoldFront("Functionality", " "))



        Array<text> rubricRows8
        rubricRows8:Add(AddTableHeaderTag(rubricHeader8))

        rubricRows8:Add(AddTableDataTag(rubricText15))
        rubricRows8:Add(AddTableDataTag(rubricText16))
        rubricRows8:Add(AddTableDataTag(rubricText17))
        rubricRows8:Add(AddTableDataTag(rubricText18))
        rubricRows8:Add(AddTableDataTag(rubricText19))
        rubricRows8:Add(AddTableDataTag(rubricText20))
        rubricRows8:Add(AddTableDataTag(rubricText21))
        rubricRows8:Add(AddTableDataTag(rubricText22))

        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows8), "EditTable Actions"))

        bodyDiv:AddParagraph("With our object created, let's first get the table we are modifying using SetTable() and let's pass in "+dq+"newTable"+dq+" which is the table object we previously made. Because we do not want to manually change the IDs of each entry, lets also use AlterAutoIncrement and pass in the value of 1 so it automatically starts to change the IDs as soon as we start adding entries. Next, the current name "+dq+"newtable"+dq+" does not seem that descriptive in terms of the changes we have reflected so far, so now we will want to change the table name using RenameTable(); let's rename our table "+dq+"supernewtable"+dq+" and pass that string as the parameter to RenameTable.")

        bodyDiv:AddParagraph("edit:SetTable("+dq+"newtable"+dq+")
edit:AlterAutoIncrement(1)
edit:RenameTable("+dq+"superNewTable"+dq+")
")

        bodyDiv:AddParagraph("Next, suppose we want to edit the columns of this "+dq+"supernewtable"+dq+" such as modifying an existing column, removing a column, and adding a new column. To modify a column, we will be using ModifyColumn and pass in two parameters, the column name and the new data type we can convert this column to accept. For this, let's pass in the value "+dq+"tableText"+dq+" as the first parameter and "+dq+"string"+dq+" as the second parameter. ")

        bodyDiv:AddParagraph("Originally "+dq+"tableText"+dq+" was an integer column but it is now a text column. Additional actions we can take on "+dq+"newtable"+dq+" would lead us to know how to modify an existing column, remove a column, and add a new column. To add a column, we will be using the AddColumn(columnName, datatype) and pass in two parameters, the column name and the data type. For this let's pass in the value "+dq+"newColumn"+dq+" as the first parameter and "+dq+"integer"+dq+" as the second parameter.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("edit:ModifyColumn("+dq+"tableText"+dq+","+dq+"string"+dq+")
 edit:AddColumn("+dq+"newColumn"+dq+","+dq+"integer"+dq+")
 edit:DropColumn("+dq+"tableText2"+dq+")
"))

        bodyDiv:AddParagraph("To reflect our modifications, we will need to call our database object and pass in the EditTable object using the EditTable() action.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("database:EditTable(edit)
"))

        bodyDiv:AddParagraph("Below is the full code of altering a table in our database.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("/* equivalent to alter table*/
/* changing table labels */
/* changing the datatypes */

    use Libraries.Data.Database.Database
    use Libraries.Data.Database.EditTable
    use Libraries.Data.Database.CreateTable

    Database database
    database:Connect("+dq+"localhost"+dq+", "+dq+"myfirstdatabase"+dq+", "+dq+"root"+dq+", "+dq+"password"+dq+")

    EditTable edit
    edit:SetTable("+dq+"newtable"+dq+")
    edit:AlterAutoIncrement(1)
    edit:RenameTable("+dq+"superNewTable"+dq+")
    edit:ModifyColumn("+dq+"tableText"+dq+","+dq+"string"+dq+")
    edit:AddColumn("+dq+"newColumn"+dq+","+dq+"integer"+dq+")
    edit:DropColumn("+dq+"tableText2"+dq+")
    database:EditTable(edit)
"))

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about modifying a database table on Quorum Language."
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "databases, tables, data tables, charts, data science, relational, relational data,
        SQL, mySQL, noSQL, database tutorial for visually impaired")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "modifying database tables"
    end

    action GetName returns text
        return "modifying database tables"
    end

    action GetShortDescription returns text
        return "how to modify database tables by alterning columns"
    end

    action GetLocation returns text
        return "tutorials/databases/databaseModifyTables.html"
    end
end