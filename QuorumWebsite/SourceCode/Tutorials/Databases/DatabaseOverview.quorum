use Libraries.Web.Page.all
use Libraries.Containers.Array

class DatabaseOverview is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Databases Overview - Quorum Programming Lanugage")
        AddDefaultHeaders()

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Tutorial: Databases", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Tutorial: Databases")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial introduces what databases are and their basic structures")
        bodyDiv:Add(headDiv)
        
        Section section_overview
        section_overview:SetClassAttribute("flex flex-col gap-y-2")

        Heading h_overview = section_overview:AddHeading("Databases Overview", 2)
        h_overview:AddClassAttribute("text-2xl font-bold")
        h_overview:AddAttribute("data-text", "Databases Overview")
        AddToHeadingArray(h_overview)

        section_overview:AddParagraph("Data is all around us, from Amazon history purchases to student grades contained inside a gradebook. What to do with all this data depends on context, but all data requires storage. Most websites today use databases, including  video streaming, social media, e-commerce, finances, and many others. ")
       


        Section section_what_is_database
        section_what_is_database:SetClassAttribute("flex flex-col gap-y-2")

        Heading h_what_is_database = section_what_is_database:AddHeading("What is a Database?", 3)
        h_what_is_database:AddClassAttribute("text-2xl font-bold")
        h_what_is_database:AddAttribute("data-text", "What is a Database?")
        AddToHeadingArray(h_what_is_database)

        section_what_is_database:AddParagraph("A database is a collection of data stored electronically within a computer system. Within a database, they are typically stored in rows and columns to make processing, managing, updating, and organizing efficient. As mentioned before, most databases use SQL to write and query data. 
To query data is to take an action on a database such as SELECT, INSERT, UPDATE, or DELETE. Quorum does not use SQL syntax for databases. 
There are many different types of databases, but for our purposes we will mostly be working with a relational database. 
Here are brief descriptions of the many different types of databases organizations use [1]:
")

        WebTable table = AddWebTable("Types of Databases")
        TableBody tableBody = AddTableBody()

        Array<text> rubricHeader
        rubricHeader:Add("Database Type")
        rubricHeader:Add("Structure")
        rubricHeader:Add("Functionality")
        TableHeader thead = AddTableHeaderRow(rubricHeader)
        table:Add(thead)
        
        Array<text> rubricText1
        rubricText1:Add("Relational")
        rubricText1:Add("Tables with columns and rows") 
        rubricText1:Add("Provides the most efficient and flexible way to access structured information") 
        tableBody:Add(AddTableBodyRow(rubricText1))

        Array<text> rubricText2
        rubricText2:Add("Object-Oriented")
        rubricText2:Add("In the form of objects") 
        rubricText2:Add("Database for object-oriented programming")  
        tableBody:Add(AddTableBodyRow(rubricText2))

        Array<text> rubricText3
        rubricText3:Add("Distributed")
        rubricText3:Add("Two or more files located in different machines") 
        rubricText3:Add("To store data on multiple computers in the same location or scattered on different networks") 
        tableBody:Add(AddTableBodyRow(rubricText3))
     
        Array<text> rubricText4
        rubricText4:Add("Data warehouse")
        rubricText4:Add("Central repository for data") 
        rubricText4:Add("Fast query and analysis") 
        tableBody:Add(AddTableBodyRow(rubricText4))
      
        Array<text> rubricText5
        rubricText5:Add("NoSQL")
        rubricText5:Add("Allows unstructured and semistructured data to be stored and manipulated") 
        rubricText5:Add("Databases for more complex web applications") 
        tableBody:Add(AddTableBodyRow(rubricText5))
        
        Array<text> rubricText6
        rubricText6:Add("Graph")
        rubricText6:Add("Entities and relationships between entities") 
        rubricText6:Add(" tailored to very specific scientific, financial, or other functions") 
        tableBody:Add(AddTableBodyRow(rubricText6))
    
        Array<text> rubricText7
        rubricText7:Add("Open Sourced")
        rubricText7:Add("Same as SQL / NoSQL database") 
        rubricText7:Add("Source code is open sourced") 
        tableBody:Add(AddTableBodyRow(rubricText7))
      
        Array<text> rubricText8
        rubricText8:Add("Cloud")
        rubricText8:Add("collection of data, either structured or unstructured, that resides on a private, public, or hybrid cloud computing platform") 
        rubricText8:Add("traditional and database as a service (DBaaS). With DBaaS, administrative tasks and maintenance are performed by a service provider") 
        tableBody:Add(AddTableBodyRow(rubricText8))

        Array<text> rubricText9
        rubricText9:Add("Multimodel")
        rubricText9:Add("Various structures") 
        rubricText9:Add(" combine different types of database models into a single, integrated back end") 
        tableBody:Add(AddTableBodyRow(rubricText9))

        Array<text> rubricText10
        rubricText10:Add("JSON / Document")
        rubricText10:Add("JSON formats") 
        rubricText10:Add("storing, retrieving, and managing document-oriented information") 
        tableBody:Add(AddTableBodyRow(rubricText10))

        Array<text> rubricText11
        rubricText11:Add("Self-Driving")
        rubricText11:Add("ML Models") 
        rubricText11:Add("automate database tuning, security, backups, updates, and other routine management tasks") 
        tableBody:Add(AddTableBodyRow(rubricText11))

        table:Add(tableBody)
        section_what_is_database:Add(table)

       section_what_is_database:AddParagraph("In order to run our database, we will need to use database software to help assist in creating, editing, and maintaining our records. Such software allows users to manage and access data easily. In the current version, Quorum supports only MySQL, an open source database implementation. It was designed and optimized for web applications and can run on any platform.")

        
        Section section_database_structure
        section_database_structure:SetClassAttribute("flex flex-col gap-y-2")

        Heading h_database_structure = section_database_structure:AddHeading("Database Table Structure", 2)  
        h_database_structure:AddClassAttribute("text-2xl font-bold")
        h_database_structure:AddAttribute("data-text", "Database Table Structure")
        AddToHeadingArray(h_database_structure)

        section_database_structure:AddParagraph("Our database structure will be similar to what we see on Google Sheets and Microsoft Excel: a table of rows and columns. The rows of a table represent entities or events in some application domain. The columns of a table represent row attributes. Let's go through an example of our relational database structure. Let us have a model of a group of information regarding students, classes, and professors. Each box is represented by a table:")   

        WebTable table_student = AddWebTable("Student Tables")
        TableBody tableBody_student = AddTableBody()

        Array<text> rubricHeader1
        rubricHeader1:Add(AddTextBoldFront("StudentID", " "))
        rubricHeader1:Add(AddTextBoldFront("LastName", " "))
        rubricHeader1:Add(AddTextBoldFront("FirstName", " "))
        rubricHeader1:Add(AddTextBoldFront("Phone", " "))
        rubricHeader1:Add(AddTextBoldFront("GPA", " "))
        TableHeader thead_student = AddTableHeaderRow(rubricHeader1)
        table_student:Add(thead_student)

        Array<text> rubricText12
        rubricText12:Add("68765707")
        rubricText12:Add("Doe") 
        rubricText12:Add("Jane") 
        rubricText12:Add("7024933451")
        rubricText12:Add("3.8")
        tableBody_student:Add(AddTableBodyRow(rubricText12))

        Array<text> rubricText13
        rubricText13:Add("47587465")
        rubricText13:Add("Doe") 
        rubricText13:Add("John") 
        rubricText13:Add("7256731912")
        rubricText13:Add("4.0")
        tableBody_student:Add(AddTableBodyRow(rubricText13))

        Array<text> rubricText14
        rubricText14:Add("68764700")
        rubricText14:Add("Vader") 
        rubricText14:Add("Darth") 
        rubricText14:Add("7024318418")
        rubricText14:Add("3.8")
        tableBody_student:Add(AddTableBodyRow(rubricText14))

        table_student:Add(tableBody_student)
        section_database_structure:Add(table_student)

        WebTable table_course = AddWebTable("Course Tables")
        TableBody tableBody_course = AddTableBody()

        Array<text> rubricHeader2
        rubricHeader2:Add(AddTextBoldFront("CourseID", " "))
        rubricHeader2:Add(AddTextBoldFront("Title", " "))
        rubricHeader2:Add(AddTextBoldFront("Semester", " "))
        rubricHeader2:Add(AddTextBoldFront("Units", " "))
        rubricHeader2:Add(AddTextBoldFront("Location", " "))
        rubricHeader2:Add(AddTextBoldFront("Time", " "))
        rubricHeader2:Add(AddTextBoldFront("InstructorID", " "))
        TableHeader thead_course = AddTableHeaderRow(rubricHeader2)
        table_course:Add(thead_course)

        Array<text> rubricText15
        rubricText15:Add("55461")
        rubricText15:Add("CS 420") 
        rubricText15:Add("FA 2021") 
        rubricText15:Add("3")
        rubricText15:Add("MOP 203")
        rubricText15:Add("1:00 PM")
        rubricText15:Add("23452")
        tableBody_course:Add(AddTableBodyRow(rubricText15))

        Array<text> rubricText16
        rubricText16:Add("52551")
        rubricText16:Add("MUS 115") 
        rubricText16:Add("SP 2022") 
        rubricText16:Add("3")
        rubricText16:Add("TYB 455")
        rubricText16:Add("2:30 PM")
        rubricText16:Add("31341")
        tableBody_course:Add(AddTableBodyRow(rubricText16))

        Array<text> rubricText17
        rubricText17:Add("64513")
        rubricText17:Add("HIST 202") 
        rubricText17:Add("FA 2022") 
        rubricText17:Add("3")
        rubricText17:Add("RCC 110")
        rubricText17:Add("8:30 AM")
        rubricText17:Add("31313")
        tableBody_course:Add(AddTableBodyRow(rubricText17))

        table_course:Add(tableBody_course)
        section_database_structure:Add(table_course)

        WebTable table_instructor = AddWebTable("Instructor Tables")
        TableBody tableBody_instructor = AddTableBody()

        Array<text> rubricHeader3
        rubricHeader3:Add(AddTextBoldFront("InstructorID", " "))
        rubricHeader3:Add(AddTextBoldFront("LastName", " "))
        rubricHeader3:Add(AddTextBoldFront("FirstName", " "))
        rubricHeader3:Add(AddTextBoldFront("Rank", " "))
        rubricHeader3:Add(AddTextBoldFront("Department", " "))
        TableHeader thead_instructor = AddTableHeaderRow(rubricHeader3)
        table_instructor:Add(thead_instructor)

        Array<text> rubricText18
        rubricText18:Add("23452")
        rubricText18:Add("Montana") 
        rubricText18:Add("Hannah") 
        rubricText18:Add("AP") 
        rubricText18:Add("MUS") 
        tableBody_instructor:Add(AddTableBodyRow(rubricText18))

        Array<text> rubricText19
        rubricText19:Add("31341")
        rubricText19:Add("Sparrow") 
        rubricText19:Add("Jack") 
        rubricText19:Add("AP") 
        rubricText19:Add("HIST") 
        tableBody_instructor:Add(AddTableBodyRow(rubricText19))

        Array<text> rubricText20
        rubricText20:Add("31313")
        rubricText20:Add("Possible") 
        rubricText20:Add("Kim") 
        rubricText20:Add("AP") 
        rubricText20:Add("CS") 
        tableBody_instructor:Add(AddTableBodyRow(rubricText20))

        table_instructor:Add(tableBody_instructor)
        section_database_structure:Add(table_instructor)
    
        section_database_structure:AddParagraph("These tables contain unique values like student ID, instructor ID, and course ID and we refer to these as keys. The keys in one table can refer to a row in another table such as matching the Instructor key inside of Courses to Instructor ID key inside of Instructor. These so-called "+dq+"foreign keys"+dq+" are a common way of tracking data between tables. Note that Quorum only currently supports relational databases. ")

        section_database_structure:AddHeading("References", 3):AddClassAttribute("text-lg font-bold")

        Paragraph para1
        para1:AddText("[1]: ")
        para1:AddText("Oracle, What is a Database? ")
        
        Link link3
        link3:AddClassAttribute("underline text-quorum-blue-150")
        link3:AddText("https://www.oracle.com/database/what-is-database")
        link3:SetAddress("https://www.oracle.com/database/what-is-database")
        link3:SetTarget(link3:newTab)
        
        para1:Add(link3)
        para1:AddText(".")
        section_database_structure:Add(para1)

        bodyDiv:Add(section_overview)
        bodyDiv:Add(section_what_is_database)
        bodyDiv:Add(section_database_structure)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about Database Overview on Quorum Language."
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "databases, tables, data tables, charts, data science, relational, relational data,
        SQL, mySQL, noSQL, database tutorial for visually impaired")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "Overview of Databases"
    end

    action GetName returns text
        return "Overview of Databases"
    end

    action GetShortDescription returns text
        return "overview on databases and table structure"
    end

    action GetLocation returns text
        return "tutorials/databases/overview.html"
    end

    action GetLinkName returns text
        return "Databases Overview"
    end

    action GetSectionName returns text
        return "Databases"
    end
end
