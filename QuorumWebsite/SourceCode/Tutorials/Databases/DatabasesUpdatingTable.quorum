use Libraries.Web.Page.all
use Libraries.Containers.Array

class DatabasesUpdating is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Updating A Database - Quorum Programming Lanugage")
        AddDefaultHeaders()

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Tutorial: Databases", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Tutorial: Databases")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial shows us how to update a table from our database")
        bodyDiv:Add(headDiv)
        
        bodyDiv:AddHeading("Updating Our Table", 2)
       
        bodyDiv:AddParagraph("Over time, data becomes outdated and database managers or architects are required to constantly update data so users or other administrators do not use outdated information. An example data changes in the real world are Disneyland tickets; overtime, Disneyland increases their prices from $45 in 2000 to $99 in 2015 to $159 in 2022, and as a database architect, it is necessary to update prices inside a table so consumers know how much to pay when ordering a ticket on a website (although, it would not be a terrible idea to keep it at the price during 2000).")
        
        bodyDiv:AddParagraph("")
        bodyDiv:AddText("We will want to connect our database once again as well as create an Update object.  To do this, we would create a new object called Update, that allows us to use ")
        Link link2
        link2:AddText("helper actions")
        link2:SetAddress("https://quorumlanguage.com/Libraries/Data/Database/Update.html")
        link2:SetTarget(link2:newTab)
        bodyDiv:Add(link2)
        bodyDiv:AddText(" to delete the existing table inside of our database.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("use Libraries.Data.Database.Database
use Libraries.Data.Database.Update

 Database database
database:Connect("+dq+"localhost"+dq+", "+dq+"myfirstdatabase"+dq+", "+dq+"root"+dq+", "+dq+"password"+dq+")

Update query
"))

        bodyDiv:AddParagraph("With our Update object, we are now able to filter and modify existing data within the table. Because we have multiple data entries on our table, we'll want to confirm that our filter worked which we can test using UsingFilter() because it is important that we modify one record of our data instead of the entire column in our table. To have access to these Filter and Add actions, we will be creating our Insert object and call it 'query.' The actions we will be using are Add(text column, dataType), Filter(text expression), and UsingFilter(), Update(Update objectName), and SetTable(text tableName).")
        
        Array<text> rubricText1
        rubricText1:Add("Update objectName")
        rubricText1:Add("The Update query represents the Update command of the SQL (Structured Query Language) language. This query allows for the modification of a record that already exists in the database.") 
        rubricText1:Add("Update query") 

        Array<text> rubricText2
        rubricText2:Add("updateObject:SetTable(text tableName)")
        rubricText2:Add("This action sets the table of the query. Most queries run against a single table and this action is used to set which table the query will affect or search.") 
        rubricText2:Add("query:SetTable("+dq+"Theme Park Prices"+dq+")") 

        Array<text> rubricText3
        rubricText3:Add("updateObject:Filter(text expression)")
        rubricText3:Add("Some queries make use of the filter which is an expression checked against the values of the columns in the rows of a database table. The filter is written using Quorum syntax and will be type checked to see if it's valid. Column names can be used and the names made by the user using name remaps. An example filter would be "+dq+"priority < 4"+dq+" where priority is a column that exists and can be mapped to an integer.") 
        rubricText3:Add("query:Filter("+dq+"price > 120"+dq+")") 

        Array<text> rubricText4
        rubricText4:Add("updateObject:UsingFilter()")
        rubricText4:Add("This action returns whether or not this Update query will use a filter.
Returns boolean: Returns true if not using a filter and false if it will") 
        rubricText4:Add("query:UsingFilter()") 

        Array<text> rubricText5
        rubricText5:Add("updateObject:Add(text columnName, dataType modifedEntry)")
        rubricText5:Add("This action is used to add which column will be modified and what value it will be set to.
") 
        rubricText5:Add("query:Add("+dq+"price"+dq+", 140)") 

        Array<text> rubricText6
        rubricText6:Add("databaseObject:Update(Update objectName)")
        rubricText6:Add("This takes an Update query and sends it to the database and returns the result. An Update allows for changing the data in rows that already exist on the database. ") 
        rubricText6:Add("database:Update(query)") 


        Array<text> rubricHeader1
        rubricHeader1:Add(AddTextBoldFront("Action / Object", " "))
        rubricHeader1:Add(AddTextBoldFront("Description", " "))
        rubricHeader1:Add(AddTextBoldFront("Usage", " "))


        Array<text> rubricRows1
        rubricRows1:Add(AddTableHeaderTag(rubricHeader1))

        rubricRows1:Add(AddTableDataTag(rubricText1))


        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows1), "Updating Database Table Actions"))
        
        bodyDiv:AddParagraph("What we want to do first is use SetTable() on our 'query' object which allows us to select a specific table inside our database. For example, SetTable() takes in one parameter, the table title and in this case we will be passing in "+dq+"grocerylist"+dq+" into the action. ")

        bodyDiv:AddParagraph("Next, what we will be wanting to do is filter our table so that we will only be targeting one row. The row(s) we'll be wanting to change are when foodCost > 3.00, and we can see from our previous insert that "+dq+"Italian Sausage"+dq+" is the only row that will be affected. We will be using our 'query' object and call Filter() and pass in "+dq+"foodCost > 3.00"+dq+" inside the parameter. Let's confirm this filter worked by calling the action UsingFilter() on 'query' and output that value; if true, the filter was successful.")

        bodyDiv:AddParagraph("Next, what we will be wanting to do is modify  values using Add(); the action add requires two parameters: the column name and the data type value associated with the column. For example, say that we have a column called "+dq+"firstName,"+dq+" we would want to pass "+dq+"firstName"+dq+" in the first parameter and because names are strings, we will insert "+dq+"Bob"+dq+" as the second parameter. In our grocerylist table, let's update foodCost from 3.99 to 3.50 and specify our Italian Sausage to "+dq+"Italian Sausage (Hot)."+dq+"")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("query:SetTable("+dq+"grocery_list"+dq+")
query:Filter("+dq+"foodCost > 3.00"+dq+")
boolean filtering = query:UsingFilter()
output "+dq+"If it is using filter correctly value should be true: "+dq+" +  filtering
query:Add("+dq+"foodCost"+dq+", 3.50)
query:Add("+dq+"foodName"+dq+", "+dq+"Italian Sausage (Hot)"+dq+")
"))

        bodyDiv:AddParagraph("Our data has successfully changed, however it is not actually reflected on the table yet. To do this, we will be wanting to call the Update() action from the database library and pass in our Update object to it which will reflect it onto our database. We can also call ToText() onto 'query' to confirm that there has been an update on our selected row.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("database:Update(query) "))

        bodyDiv:AddParagraph("Congrats! We have modified a row inside our data table. We can view the entire code below.")

        AddCodeSample(bodyDiv,"examples/Databases/DBUpdate.quorum")

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about updating a database table"
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "databases, tables, data tables, charts, data science, relational, relational data,
        SQL, mySQL, noSQL, database tutorial for visually impaired")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "updating database data"
    end

    action GetName returns text
        return "updating databases"
    end

    action GetShortDescription returns text
        return "how to update data in a database table"
    end

    action GetLocation returns text
        return "tutorials/databases/updatingDatabases.html"
    end

    action GetLinkName returns text
        return "Updating Data in a Database Table"
    end

    action GetSectionName returns text
        return "Databases"
    end
end
