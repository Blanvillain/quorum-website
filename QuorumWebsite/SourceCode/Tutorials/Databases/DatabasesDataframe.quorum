use Libraries.Web.Page.all
use Libraries.Containers.Array

class DatabasesDataframe is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Converting a Database Table into a DataFrame - Quorum Programming Lanugage")
        AddDefaultHeaders()

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Tutorial: Databases", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Tutorial: Databases")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial shows us how to convert a database table into a DataFrame")
        bodyDiv:Add(headDiv)
        
        Section section_converting_tables_to_dataframe
        section_converting_tables_to_dataframe:SetClassAttribute("flex flex-col gap-y-2")

        Heading h_converting_tables_to_dataframe = section_converting_tables_to_dataframe:AddHeading("Converting Tables into a DataFrame", 2)
        h_converting_tables_to_dataframe:SetClassAttribute("text-2xl font-bold")
        h_converting_tables_to_dataframe:AddAttribute("data-text", "Converting Tables into a DataFrame")
        AddToHeadingArray(h_converting_tables_to_dataframe)
        
        section_converting_tables_to_dataframe:AddParagraph("Let's start off with defining what a DataFrame is in Quorum. A DataFrame is essentially a container of a series of rows and columns that are read from a dataset. We can visualize this as a spreadsheet or our tables inside our database. DataFrames are useful in numerous ways in Quorum as they serve as the foundation for topics around Data Science. With a DataFrame, we can manipulate datasets, use descriptive statistics, and even create charts from datasets or in our case, our database tables.")

        section_converting_tables_to_dataframe:AddParagraph("For this tutorial, we will be using three different methods on how to convert a database table into a dataframe as well as preview our data in a chart. While all these methods to convert to a DataFrame are similar, it is important to know the many different methods to convert a database table into a DataFrame for the ease of the programmer. ")

        Paragraph p_converting_tables_to_dataframe
        p_converting_tables_to_dataframe:AddText("We will want to connect our database once again as well as create a DataFrame object. To do this, we would create a new object called DataFrame, that allows us to use ")
        Link link
        link:AddClassAttribute("underline text-quorum-blue-150")
        link:AddText("helper actions")
        link:SetAddress("https://quorumlanguage.com/Libraries/Compute/Statistics/DataFrame.html")
        link:SetTarget(link:newTab)
        p_converting_tables_to_dataframe:Add(link)
        p_converting_tables_to_dataframe:AddText(" that give us more ways to organize and modify our datasets. As mentioned previously, we can use a DataFrame to be used with other libraries such as our ")

        Link link2
        link2:AddText("Charts library")
        link2:SetAddress("https://quorumlanguage.com/Libraries/Interface/Controls/Charts/Chart.html")
        link2:SetTarget(link2:newTab)
        p_converting_tables_to_dataframe:Add(link2)
        p_converting_tables_to_dataframe:AddText(". We will go ahead and create our object and name it "+dq+"frame."+dq+"
")

        section_converting_tables_to_dataframe:Add(p_converting_tables_to_dataframe)


        section_converting_tables_to_dataframe:Add(preformatter:GeneratePreformattedCode("use Libraries.Data.Database.Database
use Libraries.Compute.Statistics.DataFrame

Database database
database:Connect("+dq+"localhost"+dq+", "+dq+"myfirstdatabase"+dq+", "+dq+"root"+dq+", "+dq+"password"+dq+")

output database:IsConnected()

DataFrame frame
"))

        section_converting_tables_to_dataframe:AddParagraph("Saving onto our DataFrame object, we will be using the actions: FindAsDataFrame(text tableName), FindAsDataFrame(text tableName, text expressionFilter), and FindAsDataFrame(Find objectName) with the Database object.")

        WebTable table = AddWebTable("Find Actions")
        TableBody tableBody = AddTableBody()

        Array<text> rubricHeader1
        rubricHeader1:Add(AddTextBoldFront("Action", " "))
        rubricHeader1:Add(AddTextBoldFront("Description", " "))
        rubricHeader1:Add(AddTextBoldFront("Usage", " "))
        TableHeader tableHeader = AddTableHeaderRow(rubricHeader1)
        table:Add(tableHeader)

        
        Array<text> rubricText1
        rubricText1:Add("databaseName:FindAsDataFrame(text tableName)")
        rubricText1:Add("This action runs a find based on the given parameter and returns the result as a DataFrame. This action will return all columns and rows from a database table.") 
        rubricText1:Add("database:FindAsDataFrame("+dq+"MovieData"+dq+")") 
        tableBody:Add(AddTableBodyRow(rubricText1))

        Array<text> rubricText2
        rubricText2:Add("databaseName:FindAsDataFrame(text tableName, text filterExpression)")
        rubricText2:Add("This action runs a find based on the given parameters and returns the result as a DataFrame. This action will return all columns and rows from a database table where the filter expression is true.") 
        rubricText2:Add("database:FindAsDataFrame("+dq+"MovieData"+dq+", "+dq+"TicketPrice > 12"+dq+")") 
        tableBody:Add(AddTableBodyRow(rubricText2))

        Array<text> rubricText3
        rubricText3:Add("databaseName:FindAsDataFrame(Find objectName)")
        rubricText3:Add("This action runs a find query and returns the result as a DataFrame.") 
        rubricText3:Add("database:FindAsDataFrame(find)") 
        tableBody:Add(AddTableBodyRow(rubricText3))

        table:Add(tableBody)
        section_converting_tables_to_dataframe:Add(table)


        //I put this in the toc but not a new section
        Heading h_method_one = section_converting_tables_to_dataframe:AddHeading("Method 1", 3)
        h_method_one:AddClassAttribute("text-xl font-bold")
        h_method_one:AddAttribute("data-text", "Method 1")
        AddToHeadingArray(h_method_one)

        section_converting_tables_to_dataframe:AddParagraph("For this method we will be using FindAsDataFrame(text tableName) action onto our database and save it onto a DataFrame. Once again, let's work with the grocerylist table and what we will want to do is pass in the string "+dq+"grocerylist"+dq+" as a parameter for FindAsDataFrame(). This action returns the database table to run the query on and will be saved onto our DataFrame object, frame. ")
        
        section_converting_tables_to_dataframe:Add(preformatter:GeneratePreformattedCode("frame = database:FindAsDataFrame("+dq+"grocerylist"+dq+")"))

        section_converting_tables_to_dataframe:AddParagraph("Below is the entire code for our first method of saving our database as a DataFrame! ")

        AddCodeSample(section_converting_tables_to_dataframe,"examples/Databases/DBDatabase1.quorum")

        Heading h_method_two = section_converting_tables_to_dataframe:AddHeading("Method 2", 3)
        h_method_two:AddClassAttribute("text-xl font-bold")
        h_method_two:AddAttribute("data-text", "Method 2")
        AddToHeadingArray(h_method_two)

        section_converting_tables_to_dataframe:AddParagraph("For this method we will be using FindAsDataFrame(Find objectName) action onto our database and save it onto a DataFrame. What we need to do first is create a Find object which we will name it "+dq+"find."+dq+" To learn more about Finds we can click this link that shows us how to properly use the Find object. Using our Find object, we will be using the action SetTable(text tableName) and pass in our "+dq+"grocerylist"+dq+" table. This will help us connect our database onto Quorum. Now, similar to our first method, we will be calling the action, FindAsDataFrame(Find objectName) with our database object and passing in the 'find' object. This action returns the database table to run the query on and will be saved onto our DataFrame object, frame. ")

        section_converting_tables_to_dataframe:Add(preformatter:GeneratePreformattedCode("Find find
find:SetTable("+dq+"grocerylist"+dq+")

DataFrame frame

frame = database:FindAsDataFrame(find)
"))
        section_converting_tables_to_dataframe:AddParagraph("Below is the entire code for our first method of saving our database as a DataFrame!  ")

        AddCodeSample(section_converting_tables_to_dataframe,"examples/Databases/DBDatabase2.quorum")

        Heading h_method_three = section_converting_tables_to_dataframe:AddHeading("Method 3", 3)
        h_method_three:AddClassAttribute("text-xl font-bold")
        h_method_three:AddAttribute("data-text", "Method 3")
        AddToHeadingArray(h_method_three)

        section_converting_tables_to_dataframe:AddParagraph("For this method we will be using FindAsDataFrame(text tableName, text expressionFilter) action onto our database and save it onto a DataFrame. Once again, let's work with the grocerylist table and what we will want to do is pass in the string "+dq+"grocerylist"+dq+" as a parameter for FindAsDataFrame(). Now that we are also adding a filter, for the second parameter, we will want to insert a string expression, so let's pass in "+dq+"foodCalories = 50"+dq+" into our action. This will only put in any records where foodCalories = 50 onto our DataFrame. This action returns the database table to run the query on and will be saved onto our DataFrame object, frame. 

")
        section_converting_tables_to_dataframe:Add(preformatter:GeneratePreformattedCode("frame = database:FindAsDataFrame("+dq+"grocery_list"+dq+", "+dq+"foodCalories = 50"+dq+")"))

        section_converting_tables_to_dataframe:AddParagraph("Below is the entire code for our first method of saving our database as a DataFrame!  ")

        AddCodeSample(section_converting_tables_to_dataframe,"examples/Databases/DBDatabase3.quorum")

        bodyDiv:Add(section_converting_tables_to_dataframe)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about DataFrames and Databases."
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "databases, tables, data tables, charts, data science, relational, relational data,
        SQL, mySQL, noSQL, database tutorial for visually impaired")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "converting a data table into a data frame"
    end

    action GetName returns text
        return "dataframe from database"
    end

    action GetShortDescription returns text
        return "how to convert a database table into a dataframe"
    end

    action GetLocation returns text
        return "tutorials/databases/DataFrameDatabase.html"
    end

    action GetLinkName returns text
        return "Converting a Database Table into a DataFrame"
    end

    action GetSectionName returns text
        return "Databases"
    end
end
