use Libraries.Web.Page.all
use Libraries.Containers.Array

class DataPrimitives is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Adding Primitive Values to a JavaScriptObjectNotation Object")
        AddDefaultHeaders()

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Tutorial: Adding Primitive Values to a JavaScriptObjectNotation Object", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Tutorial: Adding Primitive Values to a JavaScriptObjectNotation Object")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial tells you how to add primitive values to a JavaScriptObjectNotation (JSON) object")
        bodyDiv:Add(headDiv)

Section section_primitive
section_primitive:AddClassAttribute("flex flex-col gap-y-2")

Heading h_primitive = section_primitive:AddHeading("Primitives", 2)
h_primitive:AddClassAttribute("text-2xl font-bold")
h_primitive:AddAttribute("data-text", "Primitives")
AddToHeadingArray(h_primitive)

section_primitive:AddText("In this tutorial we will go over how to add key 
names and their associated primitive type values to a JavaScriptObjectNotation object, including: " )
UnorderedList list1
list1:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list1, "Integer Values", " : such as (1, 2, 3)")
        AddListItemWithBoldAtFront(list1, "Number Values", " : such as (1.0, 2.2, 3.7)")
        AddListItemWithBoldAtFront(list1, "Boolean Values", " : true or false ")
        AddListItemWithBoldAtFront(list1, "Text Values", " : such as (" + dq + "name" + dq + ", " + dq + "John" + dq + ", " + dq + "Smith" + dq + ")")        
        section_primitive:Add(list1)
section_primitive:AddText("Although integer value types are not standardly
 used in JavaScript Object Notation, we have added the integer value type as an
 added convenience for the user.")

Section section_activity
section_activity:AddClassAttribute("flex flex-col gap-y-2")

Heading h_activity = section_activity:AddHeading("Adding an Integer Value to a JavaScriptObjectNotation Object", 2)
h_activity:AddClassAttribute("text-2xl font-bold")
h_activity:AddAttribute("data-text", "Adding an Integer Value to a JavaScriptObjectNotation Object")
AddToHeadingArray(h_activity)

section_activity:AddParagraph("We start by creating a JavaScriptObjectNotation object, 
called “json” in this example.")
section_activity:Add(preformatter:GeneratePreformattedCode(  "use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr
                                                        +   "class Main" + cr
                                                        +   "    action Main" + cr
                                                        +   "        JavaScriptObjectNotation json" + cr))
section_activity:AddParagraph("We then have to “Add” the text key, and associated integer
 value to the JavaScriptObjectNotation object json.")                                                       
section_activity:Add(preformatter:GeneratePreformattedCode("         json:Add(" + dq + "item1" + dq + ", 1)" + cr
                                                  +   "         json:Add(" + dq + "item2" + dq + ", 2)" + cr))
section_activity:AddParagraph("Here is the complete code section, which outputs our 
formatted JavaScriptObjectNotation object to the screen, allowing us to view 
each of the { name : value } pairs within the curly braces that encapsulate 
the object:")                           
section_activity:Add(preformatter:GeneratePreformattedCode(  "use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr
                                                        +   "class Main" + cr
                                                        +   "    action Main" + cr
                                                        +   "        JavaScriptObjectNotation json" + cr
                                                        +   "        json:Add(" + dq + "item1" + dq + ", 1)" + cr
                                                        +   "        json:Add(" + dq + "item2" + dq + ", 2)" + cr
                                                        +   "        output json:ToText()" + cr
                                                        +   "    end" + cr
                                                        +   "end"))

        CodeForIDE code1
        code1:AddFileText("AddInteger.quorum", "//This code will output the name and integer value pairs in JavaScript Object Notation format")
        IDE ide1 = AddIDE()
        ide1:SetLightTheme()
        ide1:SetCodeForIDE(code1:GetJsonArray())
        ide1:SetIdeTitle("Activity: Adding an Integer Value")
        section_activity:Add(ide1)


section_activity:AddParagraph("Where the output should look something like this:")
section_activity:Add(preformatter:GeneratePreformattedCode("{" + cr
                                                        +   "  " + dq + "item1" + dq + ": 1," + cr
                                                        +   "  " + dq + "item2" + dq + ": 2" + cr
                                                        +   "}" + cr))    
Section section_adding_other
section_adding_other:AddClassAttribute("flex flex-col gap-y-2")

Heading h_adding_other = section_adding_other:AddHeading("Adding Other Value Types to a JavaScriptObjectNotation Object", 2)
h_adding_other:AddClassAttribute("text-2xl font-bold")
h_adding_other:AddAttribute("data-text", "Adding Other Value Types to a JavaScriptObjectNotation Object")
AddToHeadingArray(h_adding_other)

section_adding_other:AddParagraph("Similar to the way in which we added an integer value to 
the JavaScriptObjectNotation we start by creating a JavaScriptObjectNotation 
object. However, when “Add”ing our { name : value } pairs to the object we will 
change the value type accordingly to a number, boolean, or text type.")
section_adding_other:AddParagraph("Adding a number type value to the JavaScriptObjectNotation object:")
section_adding_other:Add(preformatter:GeneratePreformattedCode(  "use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr
                                                        +   "class Main" + cr
                                                        +   "    action Main" + cr
                                                        +   "        JavaScriptObjectNotation json" + cr
                                                        +   "        json:Add(" + dq + "item1" + dq + ", 1.1)" + cr
                                                        +   "        json:Add(" + dq + "item2" + dq + ", 2.2)" + cr
                                                        +   "        output json:ToText()" + cr
                                                        +   "    end" + cr
                                                        +   "end"))

        CodeForIDE code2
        code2:AddFileText("AddNumber.quorum", "//This code will output the name and number value pairs in JavaScript Object Notation format")
        IDE ide2 = AddIDE()
        ide2:SetLightTheme()
        ide2:SetCodeForIDE(code2:GetJsonArray())
        ide2:SetIdeTitle("Activity: Adding an Number Value")
        section_adding_other:Add(ide2)


section_adding_other:AddParagraph("Adding a boolean type value to a JavaScriptObjectNotation object:")
section_adding_other:Add(preformatter:GeneratePreformattedCode(  "use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr
                                                        +   "class Main" + cr
                                                        +   "    action Main" + cr
                                                        +   "        JavaScriptObjectNotation json" + cr
                                                        +   "        json:Add(" + dq + "item1" + dq + ", true)" + cr
                                                        +   "        json:Add(" + dq + "item2" + dq + ", false)" + cr
                                                        +   "        output json:ToText()" + cr
                                                        +   "    end" + cr
                                                        +   "end"))

        CodeForIDE code3
        code3:AddFileText("AddBoolean.quorum", "//This code will output the name and boolean value pairs in JavaScript Object Notation format")
        IDE ide3 = AddIDE()
        ide3:SetLightTheme()
        ide3:SetCodeForIDE(code3:GetJsonArray())
        ide3:SetIdeTitle("Activity: Adding an Boolean Value")
        section_adding_other:Add(ide3)

section_adding_other:AddParagraph("Adding a text type value to a JavaScriptObjectNotation object:")
section_adding_other:Add(preformatter:GeneratePreformattedCode(  "use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr
                                                        +   "class Main" + cr
                                                        +   "    action Main" + cr
                                                        +   "        JavaScriptObjectNotation json" + cr
                                                        +   "        json:Add(" + dq + "firstName" + dq + ", " + dq + "Joe" + dq + ")" + cr
                                                        +   "        json:Add(" + dq + "lastName" + dq + ", " + dq + "Smith" + dq + ")" + cr
                                                        +   "        output json:ToText()" + cr
                                                        +   "    end" + cr
                                                        +   "end"))

        CodeForIDE code4
        code4:AddFileText("AddText.quorum", "//This code will output the name and text value pairs in JavaScript Object Notation format")
        IDE ide4 = AddIDE()
        ide4:SetLightTheme()
        ide4:SetCodeForIDE(code4:GetJsonArray())
        ide4:SetIdeTitle("Activity: Adding an Text Value")
        section_adding_other:Add(ide4)

        bodyDiv:Add(section_primitive)
        bodyDiv:Add(section_activity)
        bodyDiv:Add(section_adding_other)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn to read and write data with primitive value types using JSON with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Introducing Primitive values using JSON"
    end
    action GetName returns text
        return "JavaScript Object Notation Using Primitives"
    end
    action GetShortDescription returns text
        return "an introduction to creating JavaScriptObjectNotation objects with primitive value types."
    end
    action GetLocation returns text
        return "tutorials/data/primitives.html"
    end

    action GetLinkName returns text
        return "Primitives"
    end

    action GetSectionName returns text
        return "Reading and Writing JavaScript Object Notation (JSON) Data"
    end
end
