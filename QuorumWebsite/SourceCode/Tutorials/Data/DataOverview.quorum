use Libraries.Web.Page.all
use Libraries.Containers.Array

class DataOverview is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Reading and Writing Data Overview")
        AddDefaultHeaders()
        AddJsonPrism()

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Reading and Writing Data Overview", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Reading and Writing Data Overview")
        AddToHeadingArray(h_heading)

        headDiv:AddText("Reading and Writing data using JavaScript Object Notation (JSON)")
        bodyDiv:Add(headDiv)

Section section_overview
section_overview:SetClassAttribute("flex flex-col gap-y-2")

Heading h_overview = section_overview:AddHeading("Overview", 2)
h_overview:AddClassAttribute("text-2xl font-bold")
h_overview:AddAttribute("data-text", "Overview")
AddToHeadingArray(h_overview)

section_overview:AddParagraph("JavaScript Object Notation (JSON) is a human-readable way 
to format data and is commonly used for transmission between a server and web 
applications. JavaScript Object Notation (JSON) is a more “lightweight” and 
understandable format than another commonly used alternative known as Extensible 
Markup Language (XML).  Because of these advantages and the fact that it is 
understood natively by the JavaScript programming language used in browsers, it 
is generally the preferred format today.")
section_overview:AddParagraph("JavaScript Object Notation (JSON) objects are a set of unordered key-value pairs, separated by a colon (“:“) and encapsulated with curly brackets (“{“ “}”), also called braces. The key portion of the pair is a name in double quotes and the value can be a text, integer, number, boolean or array value. Each of the pairs is separated by a comma (“,”) and any whitespace is ignored.")
section_overview:AddParagraph("In the following example, the first key name is “firstName” with a text value of “Joe”, the second key name is “lastName” with a text value of “Smith”, the third key name is “age” with an integer value of 15, and the fourth key name is “student” with a boolean value of true.")

section_overview:AddParagraph("Example JavaScript Object Notation format:")
PreformattedText jsonExample1
section_overview:Add(jsonExample1)
jsonExample1:AddAttribute("class", "language-json")

CodeBlock code1
        code1:AddText("{" + cr
    + "     " + dq + "firstName" + dq + " : " + dq + "Joe" + dq + "," + cr
    + "     " + dq + "lastName" + dq + " : " + dq + "Smith" + dq + "," + cr
    + "     " + dq + "age" + dq + " : 15," + cr
    + "     " + dq + "student" + dq + " : true" + cr
    +"}")
jsonExample1:Add(code1)

Section section_json_in_quorum
section_json_in_quorum:SetClassAttribute("flex flex-col gap-y-2")

Heading h_json_in_quorum = section_json_in_quorum:AddHeading("JSON in Quorum", 2)
h_json_in_quorum:AddClassAttribute("text-2xl font-bold")
h_json_in_quorum:AddAttribute("data-text", "JSON in Quorum")
AddToHeadingArray(h_json_in_quorum)

section_json_in_quorum:AddParagraph("In order to access the JavaScriptObjectNotation class we 
must add the 
“use Libraries.Data.Formats.JavaScriptObjectNotation” 
statement at the beginning of our class definitions when working with 
JavaScript Object Notation (JSON). 
")

bodyDiv:Add(section_overview)
bodyDiv:Add(section_json_in_quorum)





        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn to read and write data using JSON with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Introducing JSON and writing data"
    end
    action GetName returns text
        return "Reading and Writing Data Overview"
    end
    action GetShortDescription returns text
        return "an overview into reading and writing data."
    end
    action GetLocation returns text
        return "tutorials/data/overview.html"
    end
    action GetLinkName returns text
        return "Overview of JavaScript Object Notation (JSON) Data"
    end
    action GetSectionName returns text
        return "Reading and Writing JavaScript Object Notation (JSON) Data"
    end
end
