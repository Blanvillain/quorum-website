use Libraries.Web.Page.all
use Libraries.Containers.Array

class DataNesting is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Adding a JavaScriptObjectNotation Value Type to a JavaScriptObjectNotation Object (Nesting)")
        AddDefaultHeaders()
        AddJsonPrism()

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Tutorial: Adding a JavaScriptObjectNotation Value Type to a JavaScriptObjectNotation Object (Nesting)", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Tutorial: Adding a JavaScriptObjectNotation Value Type to a JavaScriptObjectNotation Object (Nesting)")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial tells you how to nest JavaScriptObjectNotation object values within a JavaScriptObjectNotation object")
        bodyDiv:Add(headDiv)

Section section_nesting
section_nesting:AddClassAttribute("flex flex-col gap-y-2")

Heading h_nesting = section_nesting:AddHeading("Nesting", 2)
h_nesting:AddClassAttribute("text-2xl font-bold")
h_nesting:AddAttribute("data-text", "Nesting")
AddToHeadingArray(h_nesting)

section_nesting:AddParagraph("In this tutorial, we will create a JavaScriptObjectNotation 
object “data” which will be nested in another JavaScriptObjectNotation object 
“json” and then output the final result. We begin by creating the JavaScriptObjectNotation object 
that we plan on nesting, “data” and “Add”ing the necessary { name : value } 
pairs to the nested JavaScriptObjectNotation object “data.”")

CodeBlock cb1
        cb1:AddText("use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr)
        cb1:AddText("class Main" + cr)
        cb1:AddText("   action Main" + cr)
        cb1:AddText("       JavaScriptObjectNotation data" + cr)
        cb1:AddText("       data:Add(" + dq + "item1" + dq + ", " + dq + "a" + dq + ")" + cr) 
        cb1:AddText("       data:Add(" + dq + "item2" + dq + ", " + dq + "b" + dq + ")" + cr) 
        cb1:AddText("       data:Add(" + dq + "item3" + dq + ", " + dq + "c" + dq + ")" + cr) 
        
        section_nesting:Add(preformatter:GeneratePreformattedCode(cb1))

section_nesting:AddParagraph("We then create the JavaScriptObjectNotation object, which 
will encapsulate the nested object, “json” and “Add” the necessary 
{ name : value } pairs. To add the JavaScriptObjectNotation object to a 
{ name : value } pair we change the value to the object to be nested, in this 
case “data.”")

section_nesting:Add(preformatter:GeneratePreformattedCode("     json:Add(" + dq + "detail" + dq + ", data)"))

section_nesting:AddParagraph("Here is the complete code section which will create a 
nested JavaScriptObjectNotation object and output the formatted 
JavaScriptObjectNotation objects.")

CodeBlock cb2
        cb2:AddText("use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr)
        cb2:AddText("class Main" + cr)
        cb2:AddText("   action Main" + cr)   
        cb2:AddText("       JavaScriptObjectNotation data" + cr)
        cb2:AddText("       data:Add(" + dq + "item1" + dq + ", " + dq + "a" + dq + ")" + cr) 
        cb2:AddText("       data:Add(" + dq + "item2" + dq + ", " + dq + "b" + dq + ")" + cr) 
        cb2:AddText("       data:Add(" + dq + "item3" + dq + ", " + dq + "c" + dq + ")" + cr + cr) 
        cb2:AddText("       JavaScriptObjectNotation json" + cr)
        cb2:AddText("       json:Add(" + dq + "data1" + dq + ", " + dq + "A" + dq + ")" + cr) 
        cb2:AddText("       json:Add(" + dq + "data2" + dq + ", " + dq + "B" + dq + ")" + cr) 
        cb2:AddText("       json:Add(" + dq + "detail" + dq + ", data)" + cr)
        cb2:AddText("       output json:ToText()" + cr)
        cb2:AddText("   end" + cr)
        cb2:AddText("end" + cr)
        section_nesting:Add(preformatter:GeneratePreformattedCode(cb2))

        CodeForIDE code1
        code1:AddFileText("Nesting.quorum", "//This code will output a JavaScriptObjectNotation object value nested within another JavaScriptObjectNotation object")
        IDE ide1 = AddIDE()
        ide1:SetLightTheme()
        ide1:SetCodeForIDE(code1:GetJsonArray())
        ide1:SetIdeTitle("Activity: Nesting a JavaScriptObjectNotation object")
        section_nesting:Add(ide1)




section_nesting:AddParagraph("The output should look something like this, with the 
nested JavaScriptObjectNotation object enclosed by an inner pair of curly braces 
following its corresponding key name “detail”:")

PreformattedText jsonExample1
jsonExample1:AddClassAttribute("language-json line-numbers")
CodeBlock cb3
        cb3:AddText("{" + cr
        + "   " + dq + "data1" + dq + ": " + dq + "A" + dq + "," + cr
        + "   " + dq + "data2" + dq + ": " + dq + "B" + dq + "," + cr
        + "   " + dq + "detail" + dq + ":   {" + cr
        + "           " + dq + "item1" + dq + ": " + dq + "a" + dq + "," + cr
        + "           " + dq + "item2" + dq + ": " + dq + "b" + dq + "," + cr
        + "           " + dq + "item3" + dq + ": " + dq + "c" + dq + cr
        + "   }" + cr
        + "}")
        jsonExample1:Add(cb3)
        section_nesting:Add(jsonExample1)

        bodyDiv:Add(section_nesting)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn to read and write data using nesting and JSON with the Quorum programming language"
    end

    action GetSummaryName returns text
        return "Introducing nesting values using JSON"
    end
    action GetName returns text
        return "JavaScript Object Notation Using Nesting"
    end
    action GetShortDescription returns text
        return "how to nest a JavaScriptObjectNotation object as a value within another JavaScriptObjectNotation object"
    end
    action GetLocation returns text
        return "tutorials/data/nesting.html"
    end
    action GetLinkName returns text
        return "Nesting"
    end
    action GetSectionName returns text
        return "Reading and Writing JavaScript Object Notation (JSON) Data"
    end
end
