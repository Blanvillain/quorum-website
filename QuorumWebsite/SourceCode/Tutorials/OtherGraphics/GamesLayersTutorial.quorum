use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header

class GamesLayersTutorial is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Layers - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Tutorial: Layers in Quorum", 1)
        headDiv:AddText("This is an optional tutorial on Layers in Quorum.")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        bodyDiv:AddHeading("An Introduction to Layers in Quorum", 2)
        bodyDiv:AddParagraph(   "This tutorial will cover items, working with layers, and using 2D and 3D layers together")


        //the section on items
        bodyDiv:AddHeading("Items", 2)
        bodyDiv:AddParagraph(   "In Quorum, many of the objects we would add to our games: Drawables, Models, Audio objects, cameras, point lights, etc. "
                            +   "inherit from one of two classes: Item2D or Item3D. Drawables and Audio2D objects inherit from Item2D. "
                            +   "Models, Audio3D objects, cameras, and point lights inherit from Item3D. Many of the actions in both of these classes are the same, "
                            +   "Add() and Remove(), for example, or simply have an additional parameter for the Item3D like SetPosition() and Move()." )
        bodyDiv:AddParagraph(   "Recall the Drawing in 2D and the Drawing in 3D tutorials. When we add Drawables to our game, they are, by default, "
                            +   "positioned in the bottom corner of our game screen. When we add models however, they are positioned, by default, in the center of the game screen. "
                            +   "The reason that these items have different defaults is that they exist on different layers.")

        //the section on layers
        bodyDiv:AddHeading("Layers", 2)
        bodyDiv:AddParagraph(   "In Quorum and many other drawing applications, one image is made up of multiple layers. "
                            +   "Layers tell Quorum the order in which to draw objects on the screen. All of the items in a particular layer will be rendered at the same time. "
                            +   "When there are multiple layers, Quorum will draw them back to front. This is how we can draw objects in front of other objects. "
                            +   "Each layer in Quorum is either a 2D layer or a 3D layer. We can add as many layers as we choose, and in any order.")

        //the section on working with layers
        bodyDiv:AddHeading("Working With Layers", 3)
        bodyDiv:AddParagraph(   "A Quorum game has two default layers, a Layer3D and a Layer2D. By default, each of those is our current layer for objects of that kind "
                            +   "(CurrentLayer3D and CurrentLayer2D). The game draws the 3D layer first followed by the 2D layer, "
                            +   "so any items on the 3D layer will be behind items on the 2D layer and may be hidden. When we call the action Add() and pass it an item, "
                            +   "the layer that the item is added to is determined by whether it inherits from Item2D or from Item3D. "
                            +   "For example, Drawables will be added to the 2D layer and Models to the 3D layer." )
        bodyDiv:AddParagraph(   "Each layer has its own camera that can be moved and directed specific to the items on that layer. "
                            +   "We can also add more layers to our game, by instantiating the layer, then calling either the AddLayer2D() or the AddLayer3D() actions, "
                            +   "and passing the new layer. When we call the Add() action, it will add the item to the appropriate current layer. "
                            +   "To change the current layer, we call SetCurrentLayer2D() or SetCurrentLayer3D() and pass the layer.")
        bodyDiv:AddParagraph(   "To change a layer’s camera, we use the layer action SetCamera(). We should be sure that the camera is 2D for a 2D layer or 3D for a 3D layer. "
                            +   "To assign a camera on a 3D layer for example, the line of code would be:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(  "layer:SetCamera(camera)"))
        bodyDiv:AddParagraph(   "Now that we have discussed the basics of layers, let’s try using 2D and 3D layers together.")

        //the section on combining 2D and 3D layers
        bodyDiv:AddHeading("Combining 2D and 3D Layers", 3)
        bodyDiv:AddParagraph(   "We are going to practice with layers by creating a 3D object and a status bar. When the status bar reaches 0, the object disappears from the screen. "
                            +   "We will only need the default layers in order to complete this example." )
        bodyDiv:AddParagraph(   "First, we need to create a new Quorum Game Application. We will need the libraries (use statements) for Drawable, Model, Camera, Color, and Vector3. "
                            +   "We also need to instantiate two drawables, one model, two cameras, a color, and an integer that holds the maximum stat for our status bar (600)." )
        bodyDiv:AddParagraph(   "This is what our code should look like to start:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(  "use Libraries.Game.Game" + cr
                                                        +   "use Libraries.Game.Graphics.Camera" + cr
                                                        +   "use Libraries.Game.Graphics.Drawable" + cr
                                                        +   "use Libraries.Game.Graphics.Model" + cr
                                                        +   "use Libraries.Game.Graphics.Color" + cr
                                                        +   "use Libraries.Compute.Vector3" + cr + cr
                                                        +   "class Main is Game" + cr
                                                        +   "    Drawable status_bar" + cr
                                                        +   "    Drawable status" + cr
                                                        +   "    Model character" + cr
                                                        +   "    Color color" + cr
                                                        +   "    integer stat = 600" + cr
                                                        +   "    Camera cam3D = undefined" + cr
                                                        +   "    Camera cam2D = undefined" + cr + cr
                                                        +   "    action Main" + cr
                                                        +   "        StartGame()" + cr
                                                        +   "    end" + cr + cr
                                                        +   "    action CreateGame" + cr
                                                        +   "    end" + cr + cr
                                                        +   "    action Update(number seconds) " + cr
                                                        +   "    end" + cr
                                                        +   "end"))
        bodyDiv:AddParagraph(   "Now, in the CreateGame action, we need to set up our cameras, Load our status bar and our character, and Add these items to the game. "
                            +   "Remember that our status bar will be added to the 2D layer and our character will be added to the 3D layer. "
                            +   "This is what our CreateGame action should look like:")

        CodeBlock cb1
        Span s1
        Span s2
        Span s3
        cb1:AddText(    "action CreateGame" + cr
                    +   "    cam3D = GetCamera3D()" + cr
                    +   "    cam2D = GetCamera2D()" + cr)
        s1:AddText(     "    //our status bar is by default at the bottom left of our screen. " + cr
                    +   "    //this moves it to the low center of the game screen" + cr)
        s1:SetClassAttribute("comment")
        cb1:Add(s1)
        cb1:AddText(    "    status_bar:LoadRectangle(stat, 50, color:White())" + cr
                    +   "    status_bar:SetPosition(100, 50)" + cr
                    +   "    Add(status_bar)" + cr) 
        s2:AddText(     "    //Load full status and add it to the status bar" + cr
                                                        +   "    status:LoadFilledRectangle(stat, 50, color:Green())" + cr)
        s2:SetClassAttribute("comment")
        cb1:Add(s2)
        cb1:AddText(    "    status:LoadFilledRectangle(stat, 50, color:Green())" + cr
                    +   "    status_bar:Add(status)" + cr) 
        s3:AddText(     "    //we add our character to the center of our screen" + cr)
        s3:SetClassAttribute("comment")
        cb1:Add(s3)
        cb1:AddText(    "    character:LoadBox(3, 3, 3, color:Purple())" + cr
                    +   "    Add(character)" + cr
                    +   "end") 
        bodyDiv:Add(preformatter:GeneratePreformattedCode(cb1))


        bodyDiv:AddParagraph(   "The image below is the result of that code.")
        bodyDiv:AddImage("/media/games/layers.png", "This is an image of the layers")
        bodyDiv:AddParagraph(   "Now, we will add the rest of our code to the Update action. We are going to decrease stat by 1 each frame and then load our status as a filled rectangle. "
                            +   "When our status is below 200, the status will turn red. When the status is 0 our character will be removed from the game." )
        bodyDiv:AddParagraph(   "We will have each camera do something different:")
        UnorderedList list
        list:AddListItem("The 3D camera will rotate around around our character.")
        list:AddListItem("The 2D camera will move so that the status bar goes toward the center of the screen when the status becomes low")
        bodyDiv:Add(list)
        bodyDiv:AddParagraph(   "Here is what our Update action will look like:")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(  "action Update(number seconds)" + cr
                                                        +   "    Vector3 yAxis" + cr
                                                        +   "    yAxis:Set(0, 1, 0)" + cr
                                                        +   "    cam3D:RotateAround(character:GetGlobalPosition(), yAxis, 1)" + cr
                                                        +   "    stat = stat - 1" + cr
                                                        +   "    if stat > 0" + cr
                                                        +   "        if stat < 200" + cr
                                                        +   "            status:LoadFilledRectangle(stat, 50, color:Red())" + cr
                                                        +   "            cam2D:Move(0, -1, 0)            " + cr
                                                        +   "        else " + cr
                                                        +   "            status:LoadFilledRectangle(stat, 50, color:Green())" + cr
                                                        +   "        end" + cr
                                                        +   "    else" + cr
                                                        +   "        Remove(character)" + cr
                                                        +   "    end        " + cr
                                                        +   "end"))
        bodyDiv:AddParagraph(   "The images below capture two different times during our game.")
        bodyDiv:AddImage("/media/games/layers_green.png", "This is an image of the layers bar green")
        bodyDiv:AddImage("/media/games/layers_red.png", "This is an image of the layers bar red")
        bodyDiv:AddParagraph(   "In this tutorial we have learned how to work with layers, and how 2D and 3D layers can work together in a game.")

        //the section on the next tutorial
//        bodyDiv:AddHeading("Next Tutorial", 2)
//        bodyDiv:AddParagraph(   "This is the last tutorial for the Quorum Game Engine.")


        //bodyDiv:AddText(     "The next step is about the ")
        //bodyDiv:AddLink("Lego Robots Tutorials", "/lego.html")


        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about how to layer 2D and 3D animations for user interfaces in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Layers"
    end

    action GetImageLocation returns text
        return "/media/games/Layers.png"
    end

    action GetName returns text
        return "Layers"
    end

    action GetShortDescription returns text
        return "how to use layers"
    end

    action GetLocation returns text
        return "tutorials/games/layers.html"
    end
end