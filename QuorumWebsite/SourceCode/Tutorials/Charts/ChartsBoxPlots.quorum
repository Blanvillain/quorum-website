use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.OrderedList
use Libraries.Containers.Array

class ChartsBoxPlots is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Box Plots - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Tutorial: Charts", 1)
        headDiv:AddText("This tutorial introduces how to make Charts in Quorum")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        
        bodyDiv:AddHeading("Making a Box Plot", 2)

        bodyDiv:AddParagraph("The next chart to learn about is the box plot. For data scientists, box charts are useful to display data distribution separated by quartiles, meaning highlighting upper, lower, and middle ranged values. Box plots also show viewers data outliers in relation to the upper and lower extremes so we can examine what is different from the norm. Box plots are a great resource for data analytics in order to see the distribution of numerical data, similar to a Histogram.")

        bodyDiv:AddParagraph("In this dataset, we will compare the height of males and females in the world. It will compare the height between the sexes based on the data from 199 countries collected in 2022.")

        bodyDiv:AddText("To follow along, we can download the Height of Male and Female by Country 2022 dataset ")
        bodyDiv:AddLink("here", "https://github.com/qorf/curriculum/blob/4846bad77582e8d1da8325669b4de932b659e965/Reference/DataScience/Charts%20(New)/Data/Population/Height%20of%20Male%20and%20Female%20by%20Country%202022.csv")
        bodyDiv:AddText(".")

        bodyDiv:AddParagraph("Here is a snippet of what the dataset should look like:")

        Array<text> rubricText1
        rubricText1:Add("Netherlands")
        rubricText1:Add("183.78") 
        rubricText1:Add("170.36")
        
        
        Array<text> rubricText2
        rubricText2:Add("Montenegro")
        rubricText2:Add("183.30") 
        rubricText2:Add("169.96")


        Array<text> rubricText3
        rubricText3:Add("Estonia")
        rubricText3:Add("182.79") 
        rubricText3:Add("168.66")

        
        Array<text> rubricText4
        rubricText4:Add("Bosnia and Herzegovina")
        rubricText4:Add("182.47") 
        rubricText4:Add("167.47")

        
        Array<text> rubricText5
        rubricText5:Add("Iceland")
        rubricText5:Add("182.10") 
        rubricText5:Add("168.91")

        
        Array<text> rubricHeader
        rubricHeader:Add(AddTextBoldFront("Country Name", " "))
        rubricHeader:Add(AddTextBoldFront("Male Height in Cm", " "))
        rubricHeader:Add(AddTextBoldFront("Female Height in Cm", " "))

        Array<text> rubricRows
        rubricRows:Add(AddTableHeaderTag(rubricHeader))
      
        rubricRows:Add(AddTableDataTag(rubricText1))
        rubricRows:Add(AddTableDataTag(rubricText2))
        rubricRows:Add(AddTableDataTag(rubricText3))
        rubricRows:Add(AddTableDataTag(rubricText4))
        rubricRows:Add(AddTableDataTag(rubricText5))
        
        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows), "Height of Male and Female by Country 2022 CSV"))

        bodyDiv:AddHeading("Loading and Formatting", 2)

        bodyDiv:AddParagraph("As mentioned previously, to load and read in the dataset, we will need to create a DataFrame component named 'frame'. Using the frame, we must use the Load function and type in the file path of the insurance CSV. Recall that a CSV is a comma separated text file that holds in data.")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("
use Libraries.Compute.Statistics.DataFrame
use Libraries.Interface.Controls.Charts.BoxPlot

/*
    This is an example of a simple box plot in quorum.
    The data collected is the average height of 2 sexes in 199 countries.
*/

// create dataframe to read in data
DataFrame frame
frame:Load("+dq+"../Data/Population/Height of Male and Female by Country 2022.csv"+dq+")
"))

        bodyDiv:AddParagraph("Note that, we stored this dataset in a Data folder, and contained in that folder is an inner folder named Population.")

        bodyDiv:AddParagraph("Once the data has been loaded in, we will now extract this data to use in the data chart. We will be using two functions from our frame component, AddSelectedColumns(text header), and AddSelectedFactors(text header) where the columns will be used to label our x-axis, signifying the groups we are observing and the factor will be used to label our y-axis, signifying the change over time. AddSelectedColumn(text header) and AddSelectedFactor(text header) take in a parameter of either the column number or the column label in the CSV file. We will be using the column number to demonstrate. ")

        bodyDiv:AddParagraph("Please note that for a BoxPlot, we will only be using the AddSelectedColumns(text header) because of the simplicity of the dataset and this type of chart. This goes for other datasets as well, in which we will not be modifying the y axis. AddSelectedColumns(text header) will take a string as the parameter which represents the text header in the data file.")

        Array<text> rubricText6
        rubricText6:Add("frame:AddSelectedColumns(text heading)")
        rubricText6:Add("AddSelectedColumns() takes in a string that matches a column heading from our dataset. This function is used to format our axises. For this tutorial, we will be calling this function twice and extract "+dq+"Male Height in Cm"+dq+" and "+dq+"Female Height in Cm."+dq+"") 
        rubricText6:Add("frame:AddSelectedColumns("+dq+"heading"+dq+")")     

        Array<text> rubricHeader1
        rubricHeader1:Add(AddTextBoldFront("Function", " "))
        rubricHeader1:Add(AddTextBoldFront("Description", " "))
        rubricHeader1:Add(AddTextBoldFront("Usage", " "))

        Array<text> rubricRows1
        rubricRows1:Add(AddTableHeaderTag(rubricHeader1))
      
        rubricRows1:Add(AddTableDataTag(rubricText6))
        
        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows1), "Adding CSV columns onto Charts"))

        bodyDiv:AddParagraph("We should have the following code:")

        bodyDiv:Add(preformatter:GeneratePreformattedCode("
// pull out selected data, for this we will be categorizing by Male and Female Height
frame:AddSelectedColumns("+dq+"Male Height in Cm"+dq+")
frame:AddSelectedColumns("+dq+"Female Height in Cm"+dq+")
"))

        bodyDiv:AddParagraph("
Now it is time to create the Box Plot which can be done with the following code. This creates a chart object from our DataFrame component, frame. For the rest of this lesson, we will be using the chart object we have created to change and format the rest of our line chart. 
")
        bodyDiv:Add(preformatter:GeneratePreformattedCode("
// using the data frame, format data by creating a box plot chart component
BoxPlot chart = frame:BoxPlot()
chart:Display()
"))

        AddIDE(bodyDiv,"BP1","Box Plots: Reading in Data and Displaying","Example of loading our data and creating box plot object","examples/Charts/BP1.quorum")

        bodyDiv:AddParagraph("Calling the Display() function will give us a pop-up of our formatted data so far. We still need to give meaning to our data, therefore, the following steps will show us how to label and customize our chart.")
        bodyDiv:AddHeading("Labeling the Box Plot",2)

        bodyDiv:AddParagraph("In order for viewers to understand our data, labels give a clear comprehension of what is being presented. This means that we will be labeling the x axis, y axis, legend, and giving our chart a title that describes the dataset. To do so, we will call the following functions with our chart object: SetTitle(), SetXAxisTitle(), SetYAxisTitle(), SetLegendTitle(), and SetSubtitle(). Here is a brief description on what each function does and what it takes in.")
       
        Array<text> rubricText7
        rubricText7:Add("SetTitle(text name)")
        rubricText7:Add("SetTitle() takes in a string as a parameter, which would be the title of the chart. For this example, we will name the chart "+dq+"Height of Male and Female in the World"+dq+"")
        rubricText7:Add("chart:SetTitle("+dq+"Height of Male and Female in the World"+dq+")")        

        Array<text> rubricText8
        rubricText8:Add("SetXAxisTitle(text name)")
        rubricText8:Add("SetXAxisTitle() takes in a string as a parameter, which would be the label of the x axis. For this example, we will label this section "+dq+"Sex"+dq+"")
        rubricText8:Add("chart:SetXAxisTitle("+dq+"Sex"+dq+"")
        
        Array<text> rubricText9
        rubricText9:Add("SetYAxisTitle(text name)")
        rubricText9:Add("SetYAxisTitle() takes in a string as a parameter, which would be the label of the y axis. For this example, we will label this section "+dq+"Height (cm)."+dq+"
")
        rubricText9:Add("chart:SetYAxisTitle("+dq+"Height (cm)"+dq+")")

        Array<text> rubricText10
        rubricText10:Add("SetLegendTitle(text name)")
        rubricText10:Add("SetLegendTitle() takes in a string as a parameter, which would label the legend of the chart. The legend identifies the separate ages for the dots. For this example, we will label the legend "+dq+"Average Height of a Human"+dq+"
")
        rubricText10:Add("chart:SetLegendTitle("+dq+"Average Height of a Human"+dq+")")

        Array<text> rubricText11
        rubricText11:Add("SetSubtitle(text title)")
        rubricText11:Add("SetSubtitle() takes in a string as a parameter which would set a subtitle under the title. This can be any short description or any other necessary information for our chart. For this example, we will label the subtitle "+dq+"What is the average height of the population by sex?"+dq+"")
        rubricText11:Add("chart:SetSubtitle("+dq+"What is the average height of the population by sex?"+dq+")")

        Array<text> rubricHeader2
        rubricHeader2:Add(AddTextBoldFront("Function", " "))
        rubricHeader2:Add(AddTextBoldFront("Description", " "))
        rubricHeader2:Add(AddTextBoldFront("Usage", " "))

        Array<text> rubricRows2
        rubricRows2:Add(AddTableHeaderTag(rubricHeader2))
      
        rubricRows2:Add(AddTableDataTag(rubricText7))
        rubricRows2:Add(AddTableDataTag(rubricText8))
        rubricRows2:Add(AddTableDataTag(rubricText9))
        rubricRows2:Add(AddTableDataTag(rubricText10))
        rubricRows2:Add(AddTableDataTag(rubricText11))
        
        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows2), "Labeling Charts"))        

        bodyDiv:Add(preformatter:GeneratePreformattedCode("
// label your box plot
chart:SetXAxisTitle"+dq+"Sex"+dq+")
chart:SetYAxisTitle("+dq+"Height (cm)"+dq+")
chart:SetLegendTitle("+dq+"Average Height of a Human"+dq+")
chart:SetSubtitle("+dq+"What is the average height of the population by sex?"+dq+")
chart:SetTitle("+dq+"Height of Male and Female in the World"+dq+")
"))
        bodyDiv:AddParagraph("Note, if we would like to see the data chart so far, we can type "+dq+"chart:Display()"+dq+" to view it with the labels we created.
")
        
        AddIDE(bodyDiv,"BP2","Box Plots: Labeling","Example of labeling our box plot","examples/Charts/BP2.quorum")

        bodyDiv:AddHeading("Customizing the Data Chart", 2)
        
        bodyDiv:AddParagraph("Now that we have our data labeled, we can customize our data to our liking, such as adjusting the intervals, changing starting values, and changing the color. We will be playing around with all these features and to do so, we will be again, using our chart object to call these functions. The functions we will be using for this would be: SetLegendLocation(text location), SetColorPaletteToDisurbing(), SetFontSize(integer size), and FlipOrientation(). Here are brief descriptions on what each function does and how to use it.")

        Array<text> rubricText12
        rubricText12:Add("SetLegendLocation(text location)")
        rubricText12:Add("SetLegendLocation() takes in a string as a parameter, which would be the directions, left, right, top or bottom. These directions would place the legend in the specified place. For this example, we will place the legend on the "+dq+"bottom"+dq+"")
        rubricText12:Add("chart:SetLegendLocation("+dq+"Legend Location"+dq+")")

        Array<text> rubricText13
        rubricText13:Add("SetFontSize(integer size)")
        rubricText13:Add("SetFontSize() takes in an integer as a parameter and will set the font size on all text based on the desired input. For this tutorial, we will insert 30 as the font size.")
        rubricText13:Add("chart:SetFontSize(20)")

        Array<text> rubricText14
        rubricText14:Add("SetColorPaletteToDisurbing()") 
        rubricText14:Add("SetColorPaletteToDisurbing() takes in no parameters, but will adjust the color palette based off of yellows, browns, oranges, and greens")
        rubricText14:Add("chart:SetColorPaletteToDisturbing()")  

        Array<text> rubricText15
        rubricText15:Add("FlipOrientation()")
        rubricText15:Add("FlipOrientation() takes in no parameters, and this function will swap the places of the x and y axis.")
        rubricText15:Add("chart:FlipOrientation()")    

        Array<text> rubricHeader3
        rubricHeader3:Add(AddTextBoldFront("Function", " "))
        rubricHeader3:Add(AddTextBoldFront("Description", " "))
        rubricHeader3:Add(AddTextBoldFront("Usage", " "))

        Array<text> rubricRows3
        rubricRows3:Add(AddTableHeaderTag(rubricHeader3))
      
        rubricRows3:Add(AddTableDataTag(rubricText12))
        rubricRows3:Add(AddTableDataTag(rubricText13))
        rubricRows3:Add(AddTableDataTag(rubricText14))
        rubricRows3:Add(AddTableDataTag(rubricText15))
        
        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows3), "Customizing Charts")) 


        bodyDiv:Add(preformatter:GeneratePreformattedCode("
// set the legend location, choices are left, right, top and bottom
chart:SetLegendLocation("+dq+"bottom"+dq+")

// color palette contains yellows, oranges, browns, and greens
chart:SetColorPaletteToDisturbing()

// adjust font size by preference, here we set it to 30 pt
chart:SetFontSize(20)

// if we would like to switch the x and y axis
chart:FlipOrientation()
"))

        AddIDE(bodyDiv,"BP3","Box Plots: Customization","Example of customizing our box plot","examples/Charts/BP3.quorum")

        bodyDiv:AddParagraph("Congratulations, our Box Chart is constructed! Now we can display our chart with the Display() function. There are two ways to do this, letting it automatically display and specifying a specific window size. By doing chart:Display() it will display in a size equal to the screen size. By doing chart:Display(num, num), it will display the chart in a respected constraint window size. We will be using the default display.")
        bodyDiv:Add(preformatter:GeneratePreformattedCode("chart:Display(1000, 750)"))      

         bodyDiv:AddParagraph(" ")
    bodyDiv:AddText("Now, feel free to clean, build, and run our program and we shortly should see a Game window pop-up. This is our Box Chart! To view the entire code, click ") 
    bodyDiv:AddLink("here ", "https://github.com/qorf/curriculum/blob/main/Reference/DataScience/Charts%20(New)/DataScienceCurric/SourceCode/BoxExample1.quorum")
    bodyDiv:AddText("to view the file.")

    AddIDE(bodyDiv,"BoxPlot","Creating a Box Plot","Full Example of the Box Plot","examples/Charts/BoxPlot.quorum")

    bodyDiv:AddParagraph(" ")
    bodyDiv:AddHeading("Final Chart",2)
    bodyDiv:AddImage("/media/tutorials/charts/boxexample1.jpg","Box Plot")

        bodyDiv:AddHeading("Further Useful Box Plot Functions",2)

        Array<text> rubricText16
        rubricText16:Add("HideOutliers()")
        rubricText16:Add("This function does not take any parameters and it will hide the outliers from the chart.")
        rubricText16:Add("chart:HideOutliers()")
  
        Array<text> rubricHeader4
        rubricHeader4:Add(AddTextBoldFront("Function", " "))
        rubricHeader4:Add(AddTextBoldFront("Description", " "))
        rubricHeader4:Add(AddTextBoldFront("Usage", " "))

        Array<text> rubricRows4
        rubricRows4:Add(AddTableHeaderTag(rubricHeader4))
      
        rubricRows4:Add(AddTableDataTag(rubricText16))
        
        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows4), "Extra Functions")) 
        
        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about creating box plots in the Quorum programming language."
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "charts, acessibility, charts for accessibility, accessible charts,
        box plot, how to create a box plot, accessible box plot, how to make charts, easy access box plot, box and whisker plot,
        how to make a box and whisker plot, accessible box and whisker plot, five number summary, minimum, maximum, quartiles, lower quartile,
        median, average, upper quartile, outliers, making a box plot, interquartile range, IQR, how to make IQR, data science, data statistics,
        descriptive statistics, frequency distribution, marginal likelihood, median test, range
        ")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "making a box plot"
    end

    action GetName returns text
        return "box plot"
    end

    action GetShortDescription returns text
        return "how to use the box plot chart in quorum"
    end

    action GetLocation returns text
        return "tutorials/charts/boxplot.html"
    end
end