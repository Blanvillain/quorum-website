use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Link
use Libraries.Web.Page.Section
use Libraries.Web.Page.Heading
use Libraries.Containers.Array
use Libraries.Web.Page.Image

class ChartsAccessibilityColor is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Color Accessibility - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        //MainContent mainRegion
        //AdjustMain(mainRegion)


        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


       //page header
        Section headerSection
        Heading head = headerSection:AddHeading("Color Accessibility", 1)
        head:AddAttribute("data-text", "Color Accessibility")
        head:AddClassAttribute("text-3xl font-bold") 
        AddToHeadingArray(head)       
        headerSection:AddText("This tutorial introduces how to make Charts in Quorum")
        bodyDiv:Add(headerSection)

        Section section_color
        section_color:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_color)
        
        Heading h2_color = section_color:AddHeading("Color Accessibility on Charts", 2)
        h2_color:AddAttribute("data-text", "Color Accessibility on Charts")
        
        h2_color:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_color)

        Paragraph para
        para:AddText("Accessible features include discriminable color palettes in order to provide better contrasting visualizations as well as screen reader enabling. Contrasting choices were developed through using the ")
        
        Link link
        link:AddText("Colorgorical")
        link:SetAddress("https://pubmed.ncbi.nlm.nih.gov/27875168/")
        link:SetTarget(link:newTab)
        para:Add(link)
        para:AddText(" palette picker noting that the chosen colors compare to current industry standards by balancing the importance of discriminability and aesthetic preference [1]. Other colors can also be manipulated by user preference such as converting colors to grayscale, negatives, warm tones, or cool tones as well. This small example will feature code on constructing color palettes for a bar chart. ")
        Bold b1
        b1:AddText("By default, the palette on the charts is based off of the Colorgorical palette.")
        para:Add(b1)
        para:AddText(" We can view how colorgorical works ")
        Link link1
        link1:AddText("here")
        link1:SetAddress("https://pubmed.ncbi.nlm.nih.gov/27875168/")
        link1:SetTarget(link1:newTab)
        para:Add(link1)
        para:AddText(".")
        section_color:Add(para)

        Paragraph para1
        para1:AddText("Other color palettes we considered were based off of the application between perceptual color properties (hue, chroma and lightness), palette composition (hue clusters, color frequency) and certain types of affect [2]. From this, the additional palettes were based off of eight affects, where four of them are core affects: Calm, Exciting, Positive, and Negative and four pragmatic affects: Serious, Playful, Trustworthy, and Disturbing. These affects relate the emotions users feel in relation to these palettes in order to have meaningful colors in data representations. Calm, Playful, and Positive palettes are in the lightest scales and most saturated while Serious, Disturbing, and Negative palettes are in the darkest scales and have more muted tones. Trustworthy palettes have more blue-green hues with a yellow to link, while Exciting had a similar palette, but more strongly saturated. The imporant aspect of this is learning how to give meaning to the colors we choose when creating our charts. ") 
        Bold b3 
        b3:AddText("These color palettes are focus more on the emotional design on viewers while maintaining discriminable palettes, similar to Colorgorical.")
        para1:Add(b3)        

        section_color:Add(para1)

        Image image = section_color:AddImage("/media/tutorials/charts/color.JPG","Tableau Color Palettes based off affects")
        image:AddAttribute("data-zoom","")
        section_color:AddParagraph("To change the color we can simply call a function such as SetColorPaletteToColorgorical() from our chart component which is a color palette that focuses on making distinguishable color palettes, providing accessibility for visually impaired viewers. Other color palettes we are able to choose from are as follows: ")
        
        section_color:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToColorgorical()
SetColorPaletteToCalm()
SetColorPaletteToCoolScale()
SetColorPaletteToWarmScale()
SetColorPaletteToDisturbing()
SetColorPaletteToExciting()
SetColorPaletteToMagma()
SetColorPaletteToNegative()
SetColorPaletteToPlayful()
SetColorPaletteToPositive()
SetColorPaletteToSerious()
SetColorPaletteToTrustworthy()
SetCurrentPaletteToGrayScale() // This one applies a grayscale filter to whichever other palette is currently being used.
SetColorPalette(Color A)
SetColorPalette(Color A, Color B)
SetColorPalette(Color A, Color B, Color C)
SetColorPalette(Array<Color> colors)
"))
        
        section_color:AddParagraph("Here is example code of using the palettes which can be run on Quorum Studios:")

        section_color:Add(preformatter:GeneratePreformattedCode("BarChart chart = frame:BarChart()
chart:SetColorPaletteToCalm() // will create a softer and cooler color palette
chart:SetColorPaletteToColorgorical() // uses the constructed color palettes references by article
chart:SetColorPaletteToExciting() // will create a bright and vibrant color palette"))

        section_color:AddParagraph("Color palettes can be manipulated by the user to best fit contrast levels in relation to the data. Below we will have examples on what each color palette looks like.")

        Section section_try_yourself_colorgorical
        section_try_yourself_colorgorical:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_colorgorical)
        Heading h2_try_yourself_colorgorical = section_try_yourself_colorgorical:AddHeading("Try it Yourself: Colorgorical Palette", 2)
        h2_try_yourself_colorgorical:AddAttribute("data-text", "Try it Yourself: Colorgorical Palette")
        h2_try_yourself_colorgorical:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_colorgorical)
        section_try_yourself_colorgorical:AddAttribute("data-text", "Try it Yourself: Colorgorical Palette")
        section_try_yourself_colorgorical:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_colorgorical:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToColorgorical()"))

        CodeForIDE code1
        code1:AddFileUrl("Colorgorical.quorum", "examples/Charts/colorPaletteColorgorical.quorum")
        IDE ide = AddIDE()
        ide:SetLightTheme()
        ide:SetCodeForIDE(code1:GetJsonArray())
        ide:SetIdeTitle("Colorgorical Color Palette")
        section_try_yourself_colorgorical:Add(ide)

        Section section_try_yourself_cool
        section_try_yourself_cool:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_cool)
        Heading h2_try_yourself_cool = section_try_yourself_cool:AddHeading("Try it Yourself: Cool Palette", 2)
        h2_try_yourself_cool:AddAttribute("data-text", "Try it Yourself: Cool Palette")
        h2_try_yourself_cool:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_cool)
        section_try_yourself_cool:AddAttribute("data-text", "Try it Yourself: Cool Palette")
        section_try_yourself_cool:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_cool:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToCoolScale()"))

        CodeForIDE code2
        code2:AddFileUrl("Cool.quorum", "examples/Charts/colorPaletteCool.quorum")
        IDE ide1 = AddIDE()
        ide1:SetLightTheme()
        ide1:SetCodeForIDE(code2:GetJsonArray())
        ide1:SetIdeTitle("Cool Color Palette")
        section_try_yourself_cool:Add(ide1)

        Section section_try_yourself_warm
        section_try_yourself_warm:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_warm)
        Heading h2_try_yourself_warm = section_try_yourself_warm:AddHeading("Try it Yourself: Warm Palette", 2)
        h2_try_yourself_warm:AddAttribute("data-text", "Try it Yourself: Warm Palette")
        h2_try_yourself_warm:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_warm)
        section_try_yourself_warm:AddAttribute("data-text", "Try it Yourself: Warm Palette")
        section_try_yourself_warm:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_warm:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToWarmScale()"))

        CodeForIDE code3
        code3:AddFileUrl("Warm.quorum", "examples/Charts/colorPaletteWarm.quorum")
        IDE ide2 = AddIDE()
        ide2:SetLightTheme()
        ide2:SetCodeForIDE(code3:GetJsonArray())
        ide2:SetIdeTitle("Warm Color Palette")
        section_try_yourself_warm:Add(ide2)
  

        Section section_try_yourself_disturbing
        section_try_yourself_disturbing:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_disturbing)
        Heading h2_try_yourself_disturbing = section_try_yourself_disturbing:AddHeading("Try it Yourself: Disturbing Palette", 2)
        h2_try_yourself_disturbing:AddAttribute("data-text", "Try it Yourself: Disturbing Palette")
        h2_try_yourself_disturbing:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_disturbing)
        section_try_yourself_disturbing:AddAttribute("data-text", "Try it Yourself: Disturbing Palette")
        section_try_yourself_disturbing:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_disturbing:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToDisturbing()"))

        CodeForIDE code4
        code4:AddFileUrl("Disturbing.quorum", "examples/Charts/colorPaletteDisturbing.quorum")
        IDE ide3 = AddIDE()
        ide3:SetLightTheme()
        ide3:SetCodeForIDE(code4:GetJsonArray())
        ide3:SetIdeTitle("Disturbing Color Palette")
        section_try_yourself_disturbing:Add(ide3)

        Section section_try_yourself_exciting
        section_try_yourself_exciting:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_exciting)
        Heading h2_try_yourself_exciting = section_try_yourself_exciting:AddHeading("Try it Yourself: Exciting Palette", 2)
        h2_try_yourself_exciting:AddAttribute("data-text", "Try it Yourself: Exciting Palette")
        h2_try_yourself_exciting:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_exciting)
        section_try_yourself_exciting:AddAttribute("data-text", "Try it Yourself: Exciting Palette")
        section_try_yourself_exciting:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_exciting:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToExciting()"))

        CodeForIDE code5
        code5:AddFileUrl("Exciting.quorum", "examples/Charts/colorPaletteExciting.quorum")
        IDE ide4 = AddIDE()
        ide4:SetLightTheme()
        ide4:SetCodeForIDE(code5:GetJsonArray())
        ide4:SetIdeTitle("Exciting Color Palette")
        section_try_yourself_exciting:Add(ide4)

        Section section_try_yourself_magma
        section_try_yourself_magma:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_magma)
        Heading h2_try_yourself_magma = section_try_yourself_magma:AddHeading("Try it Yourself: Magma Palette", 2)
        h2_try_yourself_magma:AddAttribute("data-text", "Try it Yourself: Magma Palette")
        h2_try_yourself_magma:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_magma)
        section_try_yourself_magma:AddAttribute("data-text", "Try it Yourself: Magma Palette")
        section_try_yourself_magma:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_magma:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToMagma()"))

        CodeForIDE code6
        code6:AddFileUrl("Magma.quorum", "examples/Charts/colorPaletteMagma.quorum")
        IDE ide5 = AddIDE()
        ide5:SetLightTheme()
        ide5:SetCodeForIDE(code6:GetJsonArray())
        ide5:SetIdeTitle("Magma Color Palette")
        section_try_yourself_magma:Add(ide5)


        Section section_try_yourself_neg
        section_try_yourself_neg:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_neg)
        Heading h2_try_yourself_neg = section_try_yourself_neg:AddHeading("Try it Yourself: Negative Palette", 2)
        h2_try_yourself_neg:AddAttribute("data-text", "Try it Yourself: Negative Palette")
        h2_try_yourself_neg:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_neg)
        section_try_yourself_neg:AddAttribute("data-text", "Try it Yourself: Negative Palette")
        section_try_yourself_neg:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_neg:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToNegative()"))

        CodeForIDE code7
        code7:AddFileUrl("Negative.quorum", "examples/Charts/colorPaletteNegative.quorum")
        IDE ide6 = AddIDE()
        ide6:SetLightTheme()
        ide6:SetCodeForIDE(code7:GetJsonArray())
        ide6:SetIdeTitle("Negative Color Palette")
        section_try_yourself_neg:Add(ide6)

        Section section_try_yourself_playful
        section_try_yourself_playful:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_playful)
        Heading h2_try_yourself_playful = section_try_yourself_playful:AddHeading("Try it Yourself: Playful Palette", 2)
        h2_try_yourself_playful:AddAttribute("data-text", "Try it Yourself: Playful Palette")
        h2_try_yourself_playful:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_playful)
        section_try_yourself_playful:AddAttribute("data-text", "Try it Yourself: Playful Palette")
        section_try_yourself_playful:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_playful:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToPlayful()"))

        CodeForIDE code8
        code8:AddFileUrl("Playful.quorum", "examples/Charts/colorPalettePlayful.quorum")
        IDE ide7 = AddIDE()
        ide7:SetLightTheme()
        ide7:SetCodeForIDE(code8:GetJsonArray())
        ide7:SetIdeTitle("Playful Color Palette")
        section_try_yourself_playful:Add(ide7)    


        Section section_try_yourself_pos
        section_try_yourself_pos:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_pos)
        Heading h2_try_yourself_pos = section_try_yourself_pos:AddHeading("Try it Yourself: Positive Palette", 2)
        h2_try_yourself_pos:AddAttribute("data-text", "Try it Yourself: Positive Palette")
        h2_try_yourself_pos:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_pos)
        section_try_yourself_pos:AddAttribute("data-text", "Try it Yourself: Positive Palette")
        section_try_yourself_pos:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_pos:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToPositive()"))

        CodeForIDE code9
        code9:AddFileUrl("Positive.quorum", "examples/Charts/colorPalettePositive.quorum")
        IDE ide8 = AddIDE()
        ide8:SetLightTheme()
        ide8:SetCodeForIDE(code9:GetJsonArray())
        ide8:SetIdeTitle("Positive Color Palette")
        section_try_yourself_pos:Add(ide8)     

        Section section_try_yourself_srs
        section_try_yourself_srs:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_srs)
        Heading h2_try_yourself_srs = section_try_yourself_srs:AddHeading("Try it Yourself: Serious Palette", 2)
        h2_try_yourself_srs:AddAttribute("data-text", "Try it Yourself: Serious Palette")
        h2_try_yourself_srs:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_srs)
        section_try_yourself_srs:AddAttribute("data-text", "Try it Yourself: Serious Palette")
        section_try_yourself_srs:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_srs:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToSerious()"))

        CodeForIDE code10
        code10:AddFileUrl("Serious.quorum", "examples/Charts/colorPaletteSerious.quorum")
        IDE ide9 = AddIDE()
        ide9:SetLightTheme()
        ide9:SetCodeForIDE(code10:GetJsonArray())
        ide9:SetIdeTitle("Serious Color Palette")
        section_try_yourself_srs:Add(ide9)   

        Section section_try_yourself_trust
        section_try_yourself_trust:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_try_yourself_trust)
        Heading h2_try_yourself_trust = section_try_yourself_trust:AddHeading("Try it Yourself: Trustworthy Palette", 2)
        h2_try_yourself_trust:AddAttribute("data-text", "Try it Yourself: Trustworthy Palette")
        h2_try_yourself_trust:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_try_yourself_trust)
        section_try_yourself_trust:AddAttribute("data-text", "Try it Yourself: Trustworthy Palette")
        section_try_yourself_trust:AddParagraph("Press the blue run button to execute the code in the code editor. Press the red stop button to end the program. Your program will work when the console outputs "+dq+"Build Successful!"+dq+"")
    
        section_try_yourself_trust:Add(preformatter:GeneratePreformattedCode("SetColorPaletteToTrustworthy()"))

        CodeForIDE code11
        code11:AddFileUrl("Trustworthy.quorum", "examples/Charts/colorPaletteTrustworthy.quorum")
        IDE ide10 = AddIDE()
        ide10:SetLightTheme()
        ide10:SetCodeForIDE(code11:GetJsonArray())
        ide10:SetIdeTitle("Trustworthy Color Palette")
        section_try_yourself_trust:Add(ide10)     

        section_try_yourself_trust:AddParagraph("Test out the different types of colors with the data being presented. 
Note that this chart may not fit the format of what to consider with making good charts.")
        

        Section section_ref
        section_ref:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_ref)
        
        Heading h2_ref = section_ref:AddHeading("References", 2)
        h2_ref:AddAttribute("data-text", "References")
        
        h2_ref:AddClassAttribute("text-2xl font-bold")
        AddToHeadingArray(h2_ref)

        Paragraph para3
        para3:AddText("[1]: ")
        para3:AddText("Gramazio CC, Laidlaw DH, Schloss KB. Colorgorical: Creating discriminable and preferable color palettes for information visualization. IEEE Trans Vis Comput Graph. 2017 Jan;23(1):521-530. doi: 10.1109/TVCG.2016.2598918. PMID: 27875168. ")
        
        Link link3
        link3:AddText("https://ieeexplore.ieee.org/document/7539386")
        link3:SetAddress("https://ieeexplore.ieee.org/document/7539386")
        link3:SetTarget(link3:newTab)
        
        para3:Add(link3)
        para3:AddText(".")
        section_ref:Add(para3)

        Paragraph para2
        para2:AddText("[2]: Lyn Bartram, Abhisekh Patra, and Maureen Stone. 2017. Affective Color in Visualization. In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems (CHI '17). Association for Computing Machinery, New York, NY, USA, 1364 1374. DOI: ")
        
        Link link4
        link4:AddText("https://doi.org/10.1145/3025453.3026041")
        link4:SetAddress("https://doi.org/10.1145/3025453.3026041")
        link4:SetTarget(link4:newTab)
        
        para2:Add(link4)
        para2:AddText(".")
        section_ref:Add(para2)

        Section nextLesson
        nextLesson:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(nextLesson)
        WriteNextTutorial(nextLesson)    
        onPageDiv:Add(CreateHeadingTableOfContents())

    end

    action GetMetaDescription returns text
        return "Learn about color accessibility in the Quorum programming language."
    end

     action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "charts, acessibility, charts for accessibility, accessible charts,
        charts for visually impaired, color palette, color contrast, wcag compliant charts, color discriminability,
        charts work with screen reader, text to speech charts, text to speech data, data science, colorgorical, 
        colorgorical charts, how to make accessible charts, chart aesthetics, easy read charts, navigational charts
        ")
        AddMetaData(keywords)
    end

    action GetSummaryName returns text
        return "making accessible color palettes"
    end

    action GetName returns text
        return "color accessibility"
    end

    action GetShortDescription returns text
        return "color accessibility with charts"
    end

    action GetLocation returns text
        return "tutorials/charts/coloraccessibility.html"
    end
    
    action GetLinkName returns text
        return "Color Accessibility"
    end

    action GetSectionName returns text
        return "Charts"
    end
end