use Libraries.Web.Page.all
use Libraries.Containers.Array

class Audio3DPositionalAudioTutorial is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Positional Audio - Quorum Programming Language")
        AddDefaultHeaders()

         /*
            contents of body
        */
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Tutorial: Positional Audio", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Tutorial: Positional Audio")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial teaches you how to position audio in 3D with Quorum.")
        bodyDiv:Add(headDiv)

        Section section_3dSound
        section_3dSound:AddClassAttribute("flex flex-col gap-y-2")
        Heading h_3dSound = section_3dSound:AddHeading("3D Sound: Positional Audio", 2)
        h_3dSound:AddClassAttribute("text-2xl font-bold")
        h_3dSound:AddAttribute("data-text", "3D Sound: Positional Audio")
        AddToHeadingArray(h_3dSound)

        section_3dSound:AddParagraph( "Quorum audio objects have the ability to be set in a position in a virtual 3D space. "
                            + "3D space is often represented in math and other applications with 3D (x, y, z) coordinate system. "
                            + "An example of a 3D coordinate system is below.")
 
        Image image_3dSound = section_3dSound:AddImage("/media/games/coordinate_system.png", "This is an image of the coordinate system with x, y, and z axes.")
        image_3dSound:AddAttribute("data-zoom", "")

        section_3dSound:AddParagraph( "Quorum uses a virtual 3D coordinate system very much like this one to set sounds in 3D space. "
                            + "Audio objects have x, y, and z-coordinates that can be set through the SetX, SetY, and SetZ actions. "
                            + "These three actions each take a single number parameter that represents the value of that coordinate. "
                            + "Audio objects also have corresponding GetX, GetY, and GetZ actions that return the requested coordinate.")
 
       section_3dSound:AddParagraph(  "Using positional audio can allow us to do some cool things in our programs. "
                            + "For example, we can use an audio object in a game, set its initial position, and then update its position in the game update loop. "
                            + "An example is below.")

        CodeBlock cb18
        Span s14
        Span s141
        Span s142
        cb18:AddText(   "use Libraries.Game.Game" +cr 
                    +   "use Libraries.Sound.Audio" + cr + cr
                    +   "class Main is Game" + cr
                    +   "   Audio audio" + cr + cr
                    +   "   action Main" + cr
                    +   "       StartGame()" + cr
                    +   "   end" + cr + cr
                    +   "   action CreateGame" + cr 
                    +   "       audio:Load(" + dq + "Sounds/Firework.ogg" + dq + ")" + cr + cr )

        s14:AddText(    "       // give the audio some initial coordinates" + cr)
        s14:SetClassAttribute("comment")
        cb18:Add(s14)
        cb18:AddText(   "       audio:SetX(-1)" + cr 
                    +   "       audio:SetY(-1)" + cr 
                    +   "       audio:SetZ(-1)" + cr + cr 
                    +   "       audio:Play()" + cr
                    +   "   end" + cr + cr
                    +   "   action Update(number seconds)" + cr )

        s141:AddText(   "       // calculate the new x, y, and z coordinates based off the current coordinates." + cr
                    +   "      //In this example, the x, y, and z coordinates are increased by 0.25 every second." + cr)
        s141:SetClassAttribute("comment")
        cb18:Add(s141)
        cb18:AddText(   "       number newX = audio:GetX() + 0.30 * seconds" + cr 
                    +   "       number newY = audio:GetY() + 0.30 * seconds" + cr 
                    +   "       number newZ = audio:GetZ() + 0.30 * seconds" + cr + cr )

        s142:AddText(   "       // using the newly calculated coordinates, update the position of the object" + cr)
        s142:SetClassAttribute("comment")
        cb18:Add(s142)
        cb18:AddText(   "       audio:SetX(newX)" + cr 
                    +   "       audio:SetY(newY)" + cr 
                    +   "       audio:SetZ(newZ)" + cr 
                    +   "   end" + cr 
                    +   "end" + cr )
        section_3dSound:Add(preformatter:GeneratePreformattedCode(cb18))

        CodeForIDE code1
        code1:AddFileText("Main.quorum", "//Using positional audio can allow us to do some cool things in our programs")
        IDE ide = AddIDE()
        ide:SetLightTheme()
        ide:SetCodeForIDE(code1:GetJsonArray())
        ide:SetIdeTitle("Activity: 3D Sound: Positional Audio")
        section_3dSound:Add(ide)




        Section section_3dSound2
        section_3dSound2:AddClassAttribute("flex flex-col gap-y-2")
        Heading h_3dSound2 = section_3dSound2:AddHeading("Audio3D", 2)
        h_3dSound2:AddClassAttribute("text-2xl font-bold")
        h_3dSound2:AddAttribute("data-text", "Audio3D")
        AddToHeadingArray(h_3dSound2)

        Paragraph p_sound1
        p_sound1:AddText( "The Quorum game engine also supports Audio3D objects, which inherit from the Item3D class and the Audio class. "
                            + "An Audio3D object can be moved, positioned, and rotated just like a Model in 3-space, and it can use all of the Audio actions. "
                            + "We can add Audio3D objects directly to our models so that the positional audio will be calculated for us. "
                            + "Our Audio3D objects share the same coordinate system as all other Item3D objects and can exist on the same ")
 
        Link link = p_sound1:AddLink( "Layer", "/tutorials/games/layers.html")
        link:AddClassAttribute("underline text-quorum-blue-150")

        p_sound1:AddText( " .")
        section_3dSound2:Add(p_sound1)


        Heading h_doppler_shift = section_3dSound2:AddHeading("Doppler Shift", 3)
        h_doppler_shift:AddClassAttribute("text-2xl font-bold")
        h_doppler_shift:AddAttribute("data-text", "Doppler Shift")
        AddToHeadingArray(h_doppler_shift)

        Paragraph p_sound
        p_sound:AddText( "Audio3D objects have their Doppler shift (the change in pitch based on listener position, for more information, see ")

        Link link1 = p_sound:AddLink( "here", "https://en.wikipedia.org/wiki/Doppler_effect")
        link1:AddClassAttribute("underline text-quorum-blue-150")
        p_sound:AddText( ") calculated and enabled by default. At any time we can disable Doppler by calling the Audio3D DisableDoppler() action. " 
                +   "Once it has been disabled, the Audio3D action EnableDoppler() will turn it back on. "
                +   "We should remember that these actions can only be called on an instantiated Audio3D object. For example:")
        section_3dSound2:Add(p_sound)


        section_3dSound2:Add(preformatter:GeneratePreformattedCode("audio:DisableDoppler()" + cr + "audio:EnableDoppler()"))


        Section section_listener_position
        section_listener_position:AddClassAttribute("flex flex-col gap-y-2")
        Heading h_lister_position = section_listener_position:AddHeading("Listener Position and Direction", 3)
        h_lister_position:AddClassAttribute("text-2xl font-bold")
        h_lister_position:AddAttribute("data-text", "Listener Position and Direction")
        AddToHeadingArray(h_lister_position)

        Paragraph p_sound2
        p_sound2:AddText( "Recall this from our ")
        Link link2 = p_sound2:AddLink( "Camera ", "/tutorials/games/cameras.html")
        link2:AddClassAttribute("underline text-quorum-blue-150")
        section_listener_position:Add(p_sound2)

        section_listener_position:AddText( "tutorial: A camera object has both a position and a direction that it uses to display a scene. "
                +   "Our Audio3D objects have a similar feature called a listener. That listener has a position and a direction that it uses to represent a scene. "
                +   "The default listener position is at (0, 0, 0), with the direction (0, 0, 1). Both of these can be changed to track the movement of a player in the game. "
                +   "The actions that we use to change the position are Audio3D actions that should be called on our audio object. Below is an example of how we can call these actions on our Audio3D object:")


        section_listener_position:Add(preformatter:GeneratePreformattedCode("audio:SetListenerPosition(0, 1, -1)" + cr + "audio:SetListenerDirection(0, -1, 1)"))

        section_listener_position:AddParagraph(   "We can also represent our position and direction as a Vector3.")
        section_listener_position:AddParagraph(   "Below is an example of a program that adds a sound to a moving box. "
                            +   "The default settings for Doppler (on) and Listener are used, but we can try any of the code fragments from the two previous sections to understand how Doppler and Listener position/direction affect our game.")

        CodeBlock cb19
        Span s15
        Span s151
        cb19:AddText(   "use Libraries.Game.Game" +cr 
                    +   "use Libraries.Game.Graphics.Model" +cr 
                    +   "use Libraries.Game.Graphics.Color" + cr 
                    +   "use Libraries.Game.Audio3D" + cr + cr
                    +   "class Main is Game" + cr 
                    +   "   Audio3D audio" + cr
                    +   "   Model model" + cr + cr
                    +   "   action Main" + cr
                    +   "       StartGame()" + cr 
                    +   "   end" + cr + cr
                    +   "   action CreateGame" + cr 
                    +   "       Color color" + cr 
                    +   "       model:LoadBox(0.5, 0.5, 0.5, color:Green())" + cr 
                    +   "       Add(model)" + cr 
                    +   "       audio:Load(" + dq + "Sounds/Robot.ogg" + dq + ")" + cr 
                    +   "       audio:EnableLooping()" + cr )

        s15:AddText(    "       //adds the audio to the model so position is automatically calculated" + cr)
        s15:SetClassAttribute("comment")
        cb19:Add(s15)
        cb19:AddText(   "       model:Add(audio)" + cr + cr  
                    +   "       model:SetX(-5)" + cr + cr
                    +   "       audio:Play()" + cr
                    +   "   end" + cr + cr
                    +   "   action Update(number seconds)" + cr )

        s151:AddText(   "       //Moves the model a small amount in each frame" + cr)
        s151:SetClassAttribute("comment")
        cb19:Add(s151)
        cb19:AddText(   "       model:Move(0.025, 0, 0)" + cr + cr 
                    +   "   end" + cr 
                    +   "end" + cr  )

        section_listener_position:Add(preformatter:GeneratePreformattedCode(cb19))

        CodeForIDE code2
        code2:AddFileText("Main.quorum", "//Using the Doppler Shift and also Listener Position and Direction")
        IDE ide2 = AddIDE()
        ide2:SetLightTheme()
        ide2:SetCodeForIDE(code2:GetJsonArray())
        ide2:SetIdeTitle("Activity: Audio3D")
        section_listener_position:Add(ide2)

        Section section_common_problems
        section_common_problems:AddClassAttribute("flex flex-col gap-y-2")
        Heading h_common_problems = section_common_problems:AddHeading("Common Problems", 2)
        h_common_problems:AddClassAttribute("text-2xl font-bold")
        h_common_problems:AddAttribute("data-text", "Common Problems")
        AddToHeadingArray(h_common_problems)


        Heading h_common_problems1 = section_common_problems:AddHeading("When I run my program, I get an error telling me that the file extension is unsupported.", 4)
        h_common_problems1:AddAttribute("data-text", "When I run my program, I get an error telling me that the file extension is unsupported.")
        h_common_problems1:AddClassAttribute("text-lg font-bold")
        AddToHeadingArray(h_common_problems1)


        section_common_problems:AddParagraph(   "Quorum can only play audio files in the " + dq + ".wav" + dq + " or " + dq + ".ogg" + dq + " formats. "
                            +   "Ensure that the audio file is one of these formats. "
                            +   "If it is not, there are many free programs available that will convert the file to one of these formats. ")
 
        Heading h_common_problems2 = section_common_problems:AddHeading("When I run my program, I get an error telling me that I can't play audio before it is loaded.", 4)
        h_common_problems2:AddAttribute("data-text", "When I run my program, I get an error telling me that I can't play audio before it is loaded.")
        h_common_problems2:AddClassAttribute("text-lg font-bold")
        AddToHeadingArray(h_common_problems2)

        section_common_problems:AddParagraph(   "In order to play an audio object, a file must be loaded to it. "
                            +   "Ensure that a file is loaded to the audio object before calling its Play action. ")

        Heading h_common_problems3 = section_common_problems:AddHeading("I have called SetBalance/SetPitch/Rotate on my audio object, but it did not have any effect.", 4)
        h_common_problems3:AddAttribute("data-text", "I have called SetBalance/SetPitch/Rotate on my audio object, but it did not have any effect.")
        h_common_problems3:AddClassAttribute("text-lg font-bold")
        AddToHeadingArray(h_common_problems3)

        section_common_problems:AddParagraph(   "The SetBalance, SetPitch, and Rotate actions only work on mono sounds. Ensure that the sound is not stereo. "
                            +   "If it is, there are many free programs available that will convert sound files from stereo to mono.")

        Heading h_common_problems4 = section_common_problems:AddHeading("I have called SetX/SetY/SetZ on my audio object, but it did not have any effect.", 4)
        h_common_problems4:AddAttribute("data-text", "I have called SetX/SetY/SetZ on my audio object, but it did not have any effect.")
        h_common_problems4:AddClassAttribute("text-lg font-bold")
        AddToHeadingArray(h_common_problems4)

        section_common_problems:AddParagraph(   "The SetX, SetY, and SetZ actions only work on mono sounds. Ensure that the sound is not stereo. "
                            +   "If it is, there are many free programs available that will convert sound files from stereo to mono.")

        bodyDiv:Add(section_3dSound)
        bodyDiv:Add(section_3dSound2)
        bodyDiv:Add(section_listener_position)
        bodyDiv:Add(section_common_problems)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn how to code sound applications using the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Sound"
    end

    action GetImageLocation returns text
        return "/media/Sound.gif"
    end

    action GetName returns text
        return "3D Sound: Positional Audio"
    end

    action GetShortDescription returns text
        return "how to play audio files Quorum"
    end

    action GetLocation returns text
        return "tutorials/dsp/audio3dpositionalaudiotutorial.html"
    end

    action GetLinkName returns text
        return "3D Audio: Positional Audio"
    end

    action GetSectionName returns text
        return "Audio"
    end
end
