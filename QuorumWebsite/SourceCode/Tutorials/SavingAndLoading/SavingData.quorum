use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.OrderedList
use Libraries.Containers.Array

class SavingData is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Data Science - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Tutorial: Saving data back to disk", 1)
        headDiv:AddText("This tutorial tells use the DataFrame to save data back to disk")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        
        bodyDiv:AddHeading("Saving Data", 2)
        
        bodyDiv:AddParagraph("Just like with loading, we can save DataFrame objects back to disk if we want to. Copying data is plausibly useful, but where this becomes more helpful is after cleaning. For example, in a typical data set in data science, we often gather data, clean it up to remove problems, and then make a copy of that cleaned data. We can automate that process in code, then save it back, so that we can then reproduce our results later. We will be showing two examples of how to save the data we have created using our DataFrames.")

        bodyDiv:AddParagraph("The first way is possibly the easiest way to save our data, which uses the Load(text fileLocation) function to read in a preexisting file such as:")
         
        bodyDiv:Add(preformatter:GeneratePreformattedCode("//We need the DataFrame class to load in files for Data Science operations.
use Libraries.Compute.Statistics.DataFrame

//Create a DataFrame, which is essentially a table that understands 
//more information about the data that is being loaded.
DataFrame frame

//This loads the project relative to the project, so the Population.csv file in the Data folder
//If we deploy our program, this path is relative to the binary.
frame:Load("+dq+"../Data/Geography/US States.csv"+dq+")
"))

        bodyDiv:AddParagraph("And in this program, we end up manipulating the data by either removing unnecessary columns or adding more to our dataset. In order to save our modified dataset without changing the preexisting one, we can use the Save(text fileDestination) function in order to create a new copy of our new data. Here is a brief description of what our Save(text fileDestination) function does:")

         Array<text> rubricText1
        rubricText1:Add("frame:Save(text fileDestination)")
        rubricText1:Add("This function takes in a string which is the file path of where we want this new dataset to be located in our file explorer. Note that the extension of our dataset must be a CSV file.") 
        rubricText1:Add("frame:Save("+dq+"..\Data\catsNew.csv"+dq+")")
   
        Array<text> rubricHeader1
        rubricHeader1:Add(AddTextBoldFront("Function", " "))
        rubricHeader1:Add(AddTextBoldFront("Description", " "))
        rubricHeader1:Add(AddTextBoldFront("Usage", " "))

        Array<text> rubricRows1
        rubricRows1:Add(AddTableHeaderTag(rubricHeader1))
      
        rubricRows1:Add(AddTableDataTag(rubricText1))
        
        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows1), "Save Helper Function"))


        bodyDiv:AddParagraph("Here is an example of changing our loaded dataset and saving it onto a new dataset:")
        
        bodyDiv:Add(preformatter:GeneratePreformattedCode("//We can now save this. This is not very useful in this example,
//but can be if we have data frames we have generated or transformed
frame:Save("+dq+"../Data/Geography/US States.csv"+dq+")"))

       AddIDE(bodyDiv,"Saving1","Saving a File with DataFrames","Example of saving a file","examples/DataFrames/Saving1.quorum")

    bodyDiv:AddParagraph(" ")
    bodyDiv:AddText("To view the whole code, we can click this")
    bodyDiv:AddLink(" link","https://github.com/qorf/curriculum/blob/main/Reference/DataScience/Data%20Frames/FileSaveExample1.quorum")
    bodyDiv:AddText(".")
    bodyDiv:AddParagraph(" ")

    bodyDiv:AddParagraph("The other method is to use our data creation "+dq+"by hand"+dq+" and save the data we made within Quorum onto our computer. To do this, let's take an example program:")

    bodyDiv:Add(preformatter:GeneratePreformattedCode("//We need the DataFrame class to load in files for Data Science operations.
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Columns.NumberColumn
use Libraries.Containers.Array
use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Compute.Statistics.Columns.TextColumn
use Libraries.Compute.Statistics.Columns.BooleanColumn
use Libraries.Compute.Statistics.Columns.IntegerColumn

//Create a DataFrame, which is essentially a table that understands 
//more information about the data that is being loaded.
DataFrame frame

//This creates a TextColumn, which contains strings/text
TextColumn txtColumn
txtColumn:SetHeader("+dq+"Names"+dq+")
txtColumn:Add("+dq+"Daniel"+dq+")
txtColumn:Add("+dq+"Yuria"+dq+")
txtColumn:Add("+dq+"Kristine"+dq+")
txtColumn:Add("+dq+"Yuri"+dq+")
txtColumn:Add("+dq+"Rebecca"+dq+")
txtColumn:Add("+dq+"Brianna"+dq+")

TextColumn txtColumn1
txtColumn1:SetHeader("+dq+"Favorite Ice Cream"+dq+")
txtColumn1:Add("+dq+"Vanilla"+dq+")
txtColumn1:Add("+dq+"Matcha"+dq+")
txtColumn1:Add("+dq+"Birthday Cake"+dq+")
txtColumn1:Add("+dq+"Rocky Road"+dq+")
txtColumn1:Add("+dq+"Chocolate"+dq+")
txtColumn1:Add("+dq+"Strawberry"+dq+")

//This creates a NumberColumn, which contains decimal values
NumberColumn numColumn
numColumn:SetHeader("+dq+"Cost"+dq+")
numColumn:Add(3.40)
numColumn:Add(3.50)
numColumn:Add(4.00)
numColumn:Add(4.10)
numColumn:Add(2.80)
numColumn:Add(2.50)

//This will add the data we added into a formal column
//Adding more columns will create the comma separation similar to a CSV
frame:AddColumn(txtColumn1)
frame:AddColumn(txtColumn)
frame:AddColumn(numColumn)

//The system loaded the file, but can also output it a text value, or the console, if we want that.
output frame:ToText()"))

    bodyDiv:AddParagraph(" ")
    bodyDiv:Add(preformatter:GeneratePreformattedCode("// save onto destination
frame:Save("+dq+"..\Data\Miscellaneous\IceCream.csv"+dq+")"))

    AddIDE(bodyDiv,"Saving2","Saving a File by Hand with DataFrames","Example of saving a file by hand","examples/DataFrames/Saving2.quorum")

    bodyDiv:AddParagraph(" ")
    bodyDiv:AddText("To view the whole code, we can click this")
    bodyDiv:AddLink(" link","https://github.com/qorf/curriculum/blob/main/Reference/DataScience/Data%20Frames/FileSaveExample2.quorum")
    bodyDiv:AddText(".")
    bodyDiv:AddParagraph("")

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about saving data back in the Quorum programming language."
    end

    action GetSummaryName returns text
        return "file saving back with DataFrames"
    end

    action GetName returns text
        return "file saving"
    end

    action GetShortDescription returns text
        return "how to save data back using DataFrames"
    end

    action GetLocation returns text
        return "tutorials/SavingAndLoading/SavingData.html"
    end
end