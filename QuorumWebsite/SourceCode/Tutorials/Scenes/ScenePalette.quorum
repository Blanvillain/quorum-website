use Libraries.Web.Page.all
use Libraries.Containers.Array

class ScenePalette is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Changing the Default Palette - Quorum Programming Language")
        AddDefaultHeaders()

        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
             Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Changing the Default Palette", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Changing the Default Palette")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial is on Changing the Palette in Quorum Studio")
        bodyDiv:Add(headDiv)

        
        Section section_palette
       section_palette:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_palette)
        AddHeading(section_palette, "Changing the Palette", 2)


        section_palette:AddParagraph("Quorum Studio allows adding images to the Palette, to set some default properties on them, and to give them names and descriptions. Effectively, these are special image sheets, loaded by Quorum's Scene Editor when Quorum Studio Loads. 
            There are defaults available, but the project may require different graphics. To do this, files must be added to tell Quorum Studio what to display, and how to label it.")
        section_palette:AddParagraph("For every item in the Palette, other than the primitives loaded in by default, there are two files. In the install folder for Quorum Studio, there is a folder labeled Resources. In that folder there is a folder labeled Tilesets. 
            This is where 2D images for the Palette are saved in paired files. Each pair has a PNG and a JSON file. The PNG holds a set of images. The JSON file is a text file that tells Quorum Studio which part of the image to display, and how to label it for screen readers.")

        Paragraph p1 = section_palette:AddParagraph("There are many tilesets available for free online. The default assets in Quorum Studio were referenced and used from ")
        Link link = p1:AddLink("itch.io"," https://itch.io/game-assets/free/tag-tileset")
        link:SetClassAttribute("underline text-quorum-blue-150")
        p1:AddText(". User-created tilesets can be added, as well.")

        section_palette:AddParagraph("Once a graphic is chosen and saved to the Tilesets folder, the JSON file is written and saved there, too. Here is an example of one of these files from the system for the character part of the Palette:")
        
        text source = GetTextFromSource("/html/sources/tutorials/scenes/tileset.json")
        section_palette:Add(preformatter:GeneratePreformattedCode(source))

        section_palette:AddParagraph("This is a regular JavaScript Object Notation (JSON) file which states:")

        //make the list
        UnorderedList list1
        list1:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list1, "Name: ", "The name to show in the Palette")
        AddListItemWithBoldAtFront(list1, "Source: ", "Where the file was downloaded from")
        AddListItemWithBoldAtFront(list1, "License: ", "The copyright license the file is under")
        AddListItemWithBoldAtFront(list1, "File: ", "Where in the Quorum Studio folder the corresponding image file is")
        AddListItemWithBoldAtFront(list1, "Width: ", "How wide the tiles are for the grid")
        AddListItemWithBoldAtFront(list1, "Height: ", "How high the tiles are for the grid")
        section_palette:Add(list1)

        section_palette:AddParagraph("For each tile, there is additional information for the system, which tells Quorum Studio how many tiles there are and what each piece of that image is. For each tile, specify:")

        UnorderedList list2
        AddListItemWithBoldAtFront(list2, "0: ", "A marker saying which tile it is. In this case, there is only one tile, so it is marked as 0. This number is used internally by the system but is not shown to a user. When there is more than one image, this counter would increase for each image.")
        AddListItemWithBoldAtFront(list2, "x: ", "The x coordinate of this part of the image in the Palette.")
        AddListItemWithBoldAtFront(list2, "y: ", "While in Quorum, y coordinates start with 0,0 at the bottom left, the y coordinate in this particular image system starts from the top left down. This is confusing compared to how things are normally done in Quorum itself and is a quirk in the design of this file format.")
        AddListItemWithBoldAtFront(list2, "Category: ", "This is a subcategory for this part of the Palette. Using this is not required.")
        AddListItemWithBoldAtFront(list2, "Name: ", "The name that should show up in the Palette for this item.")
        AddListItemWithBoldAtFront(list2, "Description: ", "A description of the item that is not shown visually, but is available for accessibility purposes.")
        AddListItemWithBoldAtFront(list2, "Physics enabled: ", "This states whether or not physics should be enabled by default inside of the system for this kind of tile. This is convenient if you are expecting all tiles of a given type to always be inaccessible to a player or something similar. If physics is not enabled, do not include this line.")
        AddListItemWithBoldAtFront(list2, "Responsiveness: ", "This states how responsiveness should be set by default for this kind of tile. If physics is not enabled, do not include this line.")
        list2:AddClassAttribute("list-disc list-outside pl-8")
        section_palette:Add(list2)

        section_palette:AddParagraph("When more images are used from the same PNG file, repeat the portion from the image number down for the next image. Unlike in the Scene Editor, the coordinates for the images are based on a set grid. The size of the grid is declared in the Width and Height part of the file. 
            So the next image to the right in the file mentioned above would have:")
        text source1 = GetTextFromSource("/html/sources/tutorials/scenes/tileset1.quorum")
        section_palette:Add(preformatter:GeneratePreformattedCode(source1))
        section_palette:AddParagraph("The image below the original one would have:")
        text source2 = GetTextFromSource("/html/sources/tutorials/scenes/tileset2.quorum")
        section_palette:Add(preformatter:GeneratePreformattedCode(source2))

        section_palette:AddParagraph("Not all properties available in scenes are available in tileset files, and specific will evolve over time based on user feedback.")

        
        Section nextLesson
        nextLesson:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(nextLesson)
        WriteNextTutorial(nextLesson)    
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about changing the Palette in Quorum Studio"
    end

    action GetSummaryName returns text
        return "Changing the Scene Palette"
    end

    action GetName returns text
        return "Changing the Scene Palette"
    end

    action GetShortDescription returns text
        return "changing the scene Palette in Quorum Studio"
    end

    action GetLocation returns text
        return "tutorials/Scenes/palette.html"
    end

    action GetLinkName returns text
        return "Change the Palette"
    end

    action GetSectionName returns text
        return "Scene Editing"
    end
end