use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.OrderedList

class SceneItems is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Manipulating a Running Scene - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Manipulating a Running Scene", 1)
        headDiv:AddText("This tutorial shows how to change a scene after running it")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        
        bodyDiv:AddHeading("Manipulating a Running Scene", 2)
        bodyDiv:AddParagraph("Loading a scene created in the visual editor creates a visual overlay graphically, but intentionally does nothing else. The objects in view match the scene editor's camera region and the graphics loaded match as well. 
            However, to actually adjust and manipulate a game, add logic, and other ideas require computer code.")
        bodyDiv:AddParagraph("Because making an application do what is wanted in code is a complicated topic, this tutorial does not go into detail here how everything works and instead will focus on the features that are related to getting items from a scene, to be used for movement or other actions. 
            Users who want more instruction on coding parts of an application should reference the various tutorials on the topic on the Quorum site. Here is a template for moving a character in a 2D game:")
        
        text source = GetTextFromSource("/html/Sources/tutorials/scenes/ManipulateScene.quorum")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(source))
        bodyDiv:AddParagraph("The most crucial point to notice is that when items are given a name, they can be located in a game using the following action:")
        
        source = GetTextFromSource("/html/Sources/tutorials/scenes/FindGirl.quorum")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(source))

        bodyDiv:AddParagraph("Here is a template for moving a character in a 3D game:")
        
        text source2 = GetTextFromSource("/html/Sources/tutorials/scenes/Manipulate3DScene.quorum")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(source2))
        bodyDiv:AddParagraph("The most crucial point to notice is that when items are given a name, they can be located in a game using the following action:")
        
        source2 = GetTextFromSource("/html/Sources/tutorials/scenes/Find3DGirl.quorum")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(source2))

        bodyDiv:AddParagraph("This action provides access to items created and loaded in a scene, allowing manipulations by keyboard, mouse, or however else makes sense for the product we are creating. In the above example, the Boy object is found and manipulated with keypresses. 
            Note that potentially, all objects in the scene could have the same name. In such a case, this action would return the first object it finds with the given name, but not all of them. In such a case, other actions in the Game class can be used.")

           

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn to manipulate running scenes in Quorum Studio"
    end

    action GetSummaryName returns text
        return "Manipulating Running Scenes"
    end

    action GetName returns text
        return "Manipulating a Running Scene"
    end

    action GetShortDescription returns text
        return "manipulating running scenes in Quorum Studio"
    end

    action GetLocation returns text
        return "tutorials/Scenes/items.html"
    end
end