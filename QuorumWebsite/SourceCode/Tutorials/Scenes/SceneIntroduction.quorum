use Libraries.Web.Page.all
use Libraries.Containers.Array

class SceneIntroduction is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        //html header stuff
        SetWebPageTitle("Introduction to Scene Editor - Quorum Programming Language")
        AddDefaultHeaders()

        
         //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Introduction to Scene Editor", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Introduction to Scene Editor")
        AddToHeadingArray(h_heading)

        headDiv:AddText("This tutorial explains the reasons behind the development of Scene Editor.")
        bodyDiv:Add(headDiv)

        //the section on general information
        Section section_overview
        section_overview:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_overview)
        AddHeading(section_overview, "Scene Editor Overview", 2)
        
        section_overview:AddParagraph("Modern computer programming gives users a lot of tools. For user interfaces, there are editors that allow dragging around buttons. Similarly, games are created in game engines that allow visual manipulation of objects and databases which can be adjusted without even writing code, in some cases. Historically, many of these advances have been near exclusively visual, using drag and drop, and are rarely accessible. Quorum Studio is working to change this by introducing " + dq + "Scene Editor." + dq)
       section_overview:AddParagraph("The idea of Scene Editor was inspired largely by computer gaming engines. For example, Unity3D contains a rich and powerful 2D or 3D editor, which can be used to make changes in games, create art or models, and generally manipulate the objects on the screen while writing little code. Other game engines are similar in many respects. For example, 3D modeling libraries, like Maya or Blender, use hardware-accelerated graphics to let a user drag and drop, or otherwise manipulate, graphical objects to 
                create 3D models. Game editors like Tiled have made it easier to create 2D map layouts for games, again using visual metaphors. Libraries for scientific computing, 3D printing, and many other applications have followed a similar path of development in using graphics to better afford ease of use. The advantages of these systems are clear, but traditionally these ideas have not been accessible to people with disabilities, especially visual ones. Scene Editor takes the advantages of many other visual editing systems and makes it accessible.")
        
        Section nextLesson
        nextLesson:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(nextLesson)
        WriteNextTutorial(nextLesson)    
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn about the development of Scene Editor"
    end

    action GetSummaryName returns text
        return "Introduction to Scene Editor"
    end

    action GetName returns text
        return "Introduction to Scene Editor"
    end

    action GetShortDescription returns text
        return "development of Scene Editor in Quorum Studio"
    end

    action GetLocation returns text
        return "tutorials/Scenes/intro.html"
    end

    action GetLinkName returns text
        return "Introduction to Scene Editing"
    end

    action GetSectionName returns text
        return "Scene Editing"
    end
end