use Libraries.Web.Page.all
use Libraries.Containers.Array

class LegoSoundTutorial is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("LEGO Sound - Quorum Programming Language")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Tutorial: Using Sounds with LEGO™ Robots", 1)

        headDiv:AddText("This tutorial helps explain the use of sounds with LEGO™ Robots.")
        bodyDiv:Add(headDiv)

        Section section_sounds
        section_sounds:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_sounds, "Using Sounds with LEGO™ Robots in Quorum", 2)
        section_sounds:AddParagraph("In this tutorial, we will talk about the 
            different ways a robot can produce sound. In particular, we will discuss:")

        UnorderedList list
          list:AddClassAttribute("list-disc list-outside pl-8")
          list:AddListItem("Gerenal information about sounds")
          list:AddListItem("Playing Tones")
          list:AddListItem("Playing Pre-defined Beeps")     
          list:AddListItem("Playing Audio Clips")
        section_sounds:Add(list)
                
        //the secticn on general information
        Section section_general
        section_general:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_general, "General Information About Sounds", 2)
        section_general:AddParagraph(   "The brick has a single speaker on its side, which all sounds are played out of. "
                            +   "Quorum has two actions that are used for controlling the volume of the sounds: ")

        Paragraph p_volume
        p_volume:AddClassAttribute("mb-4")
        CodeBlock cb1
        cb1:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb1:AddText("GetVolume")
        p_volume:Add(cb1)
        p_volume:AddText(" and ")
        CodeBlock cb2
        cb2:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb2:AddText("SetVolume")
        p_volume:Add(cb2)
        p_volume:AddText(". Volume levels are represented as percentages of the maximum volume, and thus the range that volume actions work with is between 0 and 100." )  
        section_general:Add(p_volume)

        section_general:AddParagraph(   "With the Sound class, we are able to play tones, pre-defined beeps, and even audio clips. "
                            +   "These sounds can be used to indicate that a robot is doing something, has reached a certain part in the program, "
                            +   "or to simply get the attention of others.")



        //the section on playing tones
        Section section_tones
        section_tones:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_tones, "Playing Tones", 2)
        section_tones:AddParagraph(   "Tones are sounds played at a certain frequency, measured in hertz (Hz). "
                            +   "For humans, the audible range for these tones is from around 20 Hz to 20,000 Hz where lower frequencies generate lower pitch sounds "
                            +   "and higher frequencies generate higher pitch sounds. An example of how to play a tone in a program is as follows:")

        CodeBlock tonecode1
        tonecode1:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        Span comment1
        tonecode1:AddText(    "use Libraries.Robots.Lego.Sound" + cr + cr 
                            +    "Sound sound" + cr
                            +    "sound:PlayTone(440, 200)"  )
        comment1:AddText(     "     //plays a tone corresponding to 440 Hz for 200 milliseconds" + cr)
        comment1:SetClassAttribute("comment")
        tonecode1:Add(comment1)      
        section_sounds:Add(preformatter:GeneratePreformattedCode(tonecode1))


        Paragraph p_tone
        p_tone:AddText(   "From the comment in the example, we can see that the ")
        CodeBlock cb3
        cb3:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb3:AddText("PlayTone")
        p_tone:Add(cb3)
        p_tone:AddText(" action takes two parameters: the frequency of the tone 
            we want to play and the amount of time, in milliseconds, 
            that we want it to play for.")
        section_tones:Add(p_tone)


        
        //the section on playing beeps
        Section section_beeps
        section_beeps:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_beeps, "Playing Pre-Defined Beeps", 2)   
        section_beeps:AddParagraph(   "Quorum has a set of actions to play different types of beeps. The different actions are as follows:")                                              
        UnorderedList list2
        list2:AddClassAttribute("list-disc list-outside pl-8")
        list2:AddListItem("Beep")
        list2:AddListItem("BeepTwice")
        list2:AddListItem("BeepSequenceUp")     
        list2:AddListItem("BeepSequenceDown")
        list2:AddListItem("Buzz")
        section_beeps:Add(list2)
        Paragraph p_beep
        p_beep:AddText(            "The ")
        CodeBlock cb4
        cb4:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb4:AddText("Beep")
        p_beep:Add(cb4)
        p_beep:AddText(" and ")
        CodeBlock cb5
        cb5:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb5:AddText("BeepTwice")
        p_beep:Add(cb5)
        p_beep:AddText(" actions do what you might think: beep and beep twice, respectively. The ")
        CodeBlock cb6
        cb6:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb6:AddText("BeepSequenceUp")
        p_beep:Add(cb6)
        p_beep:AddText(" plays four tones in quick succession, with each tone being a higher frequency than the last. On the other hand, ")
        CodeBlock cb7
        cb7:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb7:AddText("BeepSequenceDown")
        p_beep:Add(cb7)
        p_beep:AddText(" plays the same tones in reverse. The ")
        CodeBlock cb8
        cb8:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb8:AddText("buzz")
        p_beep:Add(cb8)
        p_beep:AddText(" action plays a lower frequency tone than any of the others for a short amount of time.")

        section_beeps:Add(p_beep)
                                      

                
        //the section on audio clips
        Section section_clips
        section_clips:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_clips, "Playing Audio Clips", 2)

        Paragraph p1
        p1:AddText("Custom audio clips can be played through the Sound class's ")
        CodeBlock cb9
        cb9:AddClassAttribute("text-text-light-red bg-neutral-white py-0.5 px-1")
        cb9:AddText("PlayAudio")
        p1:Add(cb9)
        p1:AddText(" action. The types of sound files that can be played are 
            limited to .wav files and must be in mono format (as opposed to stereo). 
            The easiest way to put a sound on the robot is to physically pull the 
            SD-card out of the robot and place it into a card reader in the computer. 
            If your computer does not have an SD card reader, you may need to purchase one. ")

        section_clips:Add(p1)
        section_clips:AddParagraph("On the SD card, there are two partitions, 
            or structures for storing files, one being named FAT32 and the other 
            named EXT4. In our case, the EXT4 partition is where Quorum programs 
            live. We want to transfer our files into the same folder as the 
            Quorum files, which is in the folder /home/lejos/programs. In order to read EXT4, you need to either use 
            Linux or a program to allow you to read that partition format. 
            More information on that can be found at the links below for 
            Mac or PC:")

        
        UnorderedList list3
            list3:AddClassAttribute("list-disc list-outside pl-8")
            ListItem listitem1
            Link link1 
            link1:SetAddress("https://www.howtogeek.com/112888/3-ways-to-access-your-linux-partitions-from-windows/")
            link1:AddText("Managing EXT4 from Windows")
            listitem1:Add(link1)

            ListItem listitem2
            Link link2
            link2:SetAddress("http://osxdaily.com/2014/03/20/mount-ext-linux-file-system-mac/")
            link2:AddText("Managing EXT4 from Mac")
            listitem2:Add(link2)
        section_clips:Add(list3)

        section_clips:AddParagraph("Once you have the file on the robot, the following code will allow the robot to play it:")

        
        section_clips:Add(preformatter:GeneratePreformattedCode(  
            "use Libraries.Robots.Lego.Sound" + cr
            +   "use Libraries.System.File" + cr + cr
            +   "File audioFile" + cr
            +   "Sound sound" + cr + cr
            +   "audioFile:SetPath(" + dq + "sound.wav" + dq + ")" + cr
            +   "sound:PlayAudio(audioFile)"))

        //the section on additional information
        Section section_additional
        AddHeading(section_additional, "Additional Information", 2)

        Paragraph p_additional
        p_additional:AddText("For more information on the Sound class, see the ")
        Link link3 = p_additional:AddLink("Sound class documentation","/Libraries/Robots/Lego/Sound.html")
        link3:SetClassAttribute("underline text-quorum-blue-150")
        p_additional:AddText(".")
        section_additional:Add(p_additional)

        bodyDiv:Add(section_sounds)
        bodyDiv:Add(section_general)
        bodyDiv:Add(section_tones)
        bodyDiv:Add(section_beeps)
        bodyDiv:Add(section_clips)
        bodyDiv:Add(section_additional)


        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn how code MIDI sounds on a LEGO Mindstorms robot with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Sound"
    end

    action GetImageLocation returns text
        return "/media/games/microphone.gif"
    end

    action GetName returns text
        return "Sound"
    end

    action GetShortDescription returns text
        return "how to use sounds with lego robots"
    end

    action GetLocation returns text
        return "tutorials/robots/legoSound.html"
    end

    action GetLinkName returns text
        return "Sound"
    end

    action GetSectionName returns text
        return "LEGO™ Robots"
    end
end
