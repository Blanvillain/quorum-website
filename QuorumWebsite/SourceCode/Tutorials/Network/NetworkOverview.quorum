use Libraries.Web.Page.all
use Libraries.Containers.Array

class NetworkOverview is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Managing a Network Connection Overview")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Managing a Network Connection Overview", 1)

        headDiv:AddText("Managing a Network Connection Using Hypertext Transfer Protocol (HTTP)")
        bodyDiv:Add(headDiv)

        Section section_overview
        section_overview:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_overview, "Overview", 2)
        Bold b1
        Bold b2
            b1:AddText("Request Message")
            b2:AddText("Response Message")
        Paragraph p_overview
          p_overview:AddText("A network connection is used to manage communication 
          between web browsers and web servers. Hypertext Transfer Protocol (HTTP) is one 
          of the more popular ways to manage this connection, with the web browser using 
          a ")
          p_overview:Add(b1)
          p_overview:AddText(" to locate and provide (GET) a resource or to POST data to 
          the web server, and the web server returning a ")
          p_overview:Add(b2)
          p_overview:AddText(" which includes 
          the requested resource, a success message, or an error message in some cases. 
          When a user enters a Uniform Resource Locator (URL) in the address bar on a web 
          browser, the browser converts that Uniform Resource Locator (URL) into a request 
          message to send to the web server for interpretation and a response. ")
        section_overview:Add(p_overview)

        Section section_request_message
        section_request_message:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_request_message, "Request Message", 2)
        Paragraph p_request_message
        Bold b3
            b3:AddText("Request Line")
        Bold b4
            b4:AddText("Request Headers")
        Bold b5
            b5:AddText("Blank Line")
        Bold b6
            b6:AddText("Request Message Body")
        p_request_message:AddText("A typical Request Message consists of a ")
        p_request_message:Add(b3)
        p_request_message:AddText(", ")
        p_request_message:Add(b4)
        p_request_message:AddText(", a ")
        p_request_message:Add(b5)
        p_request_message:AddText(" (which must be included to separate the Request 
        Headers from the Request Message Body), and a ")
        p_request_message:Add(b6)
        p_request_message:AddText(" (which we will go over in another tutorial)." + cr + cr)
        p_request_message:AddText("The ")
        Bold title1
            title1:AddText("Request Line")
            p_request_message:Add(title1)
            p_request_message:AddText(" includes:" + cr)
        section_request_message:Add(p_request_message)

        UnorderedList list
                list:AddClassAttribute("list-disc list-outside pl-8")
                AddListItemWithBoldAtFront(list, "Request Method", " : which are 
                predefined by the Hypertext Transfer Protocol (HTTP), case sensitive, and must be typed in all 
                uppercase letters (we will discuss a few of these, GET and POST, in a future 
                tutorial).")
                AddListItemWithBoldAtFront(list, "Web Address", " : specifies the 
                resource being requested from the server")
                AddListItemWithBoldAtFront(list, "HTTP Version", " :  either HTTP/1.0 or 
                HTTP/1.1 which is sent as a request to the server. If the server does not 
                support the requested version it will respond informing the user to switch to 
                the alternate version.")
        section_request_message:Add(list)

        section_request_message:AddParagraph("The Request Line is sent in the following format:")

        CodeBlock cb1
                cb1:AddText("RequestMethod  WebAddress  HTTP-Version")
                section_request_message:Add(preformatter:GeneratePreformattedCode(cb1))

        section_request_message:AddParagraph("To set the web address for a NetworkRequest object in Quorum, we 
        start by using the " + dq + "Libraries.Network.NetworkRequest" + dq + " library. We will then 
        create a NetworkRequest object " + dq + "request" + dq + " and set the web address for " + dq + "request" + dq + ". 
        Finally we will output the web address to the screen.")
        section_request_message:AddParagraph("Here is the complete code section:")

        CodeBlock cb2
            cb2:AddText("use Libraries.Network.NetworkRequest" + cr + cr)
            cb2:AddText("class Main"+ cr)
            cb2:AddText("   action Main" + cr)
            cb2:AddText("      NetworkRequest request" + cr)
            cb2:AddText("      request:SetWebAddress(" + dq + "https://quorumlanguage.com/GETtest.php" + dq + ")" + cr)
            cb2:AddText("      output request:GetWebAddress()" + cr)
            cb2:AddText("   end" + cr)
            cb2:AddText("end"+ cr)
            section_request_message:Add(preformatter:GeneratePreformattedCode(cb2))

        CodeForIDE code_overview1
        code_overview1:AddFileText("Main.quorum", "//This code will output the Web Address we have set")
        IDE ide_overview1 = AddIDE()
        ide_overview1:HideDisplay()
        ide_overview1:SetCodeForIDE(code_overview1:GetJsonArray())
        ide_overview1:SetIdeTitle("Activity: Setting the Web Address")
        section_request_message:Add(ide_overview1)


        section_request_message:AddParagraph("The output should look something like this:")
        CodeBlock cb3
                cb3:AddText("https://quorumlanguage.com/GETtest.php")
                section_request_message:Add(preformatter:GeneratePreformattedCode(cb3))
                


        Paragraph p_request_message2
        Bold title2
                title2:AddText("Request Headers")

                p_request_message:Add(title2)
                p_request_message:AddText(" ask the server to respond with specific 
                properties (such as in a specific language, or media type). These requested 
                properties are listed as name:value pairs with the name and value separated by a 
                colon " + dq + ":" + dq + " and multiple associated values separated by 
                commas " + dq + "," + dq + " as shown in the following example:")
        section_request_message:Add(p_request_message2)

        CodeBlock cb4
            cb4:AddText("Content-type: application/json" + cr)
            cb4:AddText("Connection: keep-alive"+ cr)
            cb4:AddText("Accept: text/plain, text/html, image/gif, application/json" + cr)
            cb4:AddText("Accept-Encoding: gzip, deflate" + cr)
            cb4:AddText("Accept-Language: en-us" + cr)
        section_request_message:Add(preformatter:GeneratePreformattedCode(cb4))

        section_request_message:AddParagraph("In order to add Request Headers to a NetworkRequest object 
        " + dq + "request" + dq + " we will need to use the " + dq + "Libraries.Network.NetworkRequest" + dq + " and 
        " + dq + "Libraries.Containers.HashTable" + dq + " libraries. Then we will create a HashTable 
        object " + dq + "headers" + dq + " to store our headers as shown below:")

        CodeBlock cb5
            Span s1
            Span s2
            Span s3
            s1:AddText("    //creates a HashTable object " + dq + "headers" + dq + " with text type key names and text type" + cr )
            s1:AddText("    //values" + cr )
            s1:SetClassAttribute("comment")
            s2:AddText("    //Adds the name, value pairs to be used as headers" + cr)
            s3:AddText("    //use comma’s " + dq + "," + dq + " to separate multiple values in a header" + cr)
            s2:SetClassAttribute("comment")
            s3:SetClassAttribute("comment")
            cb5:AddText("use Libraries.Network.NetworkRequest" + cr)
            cb5:AddText("use Libraries.Containers.HashTable" + cr + cr)
            cb5:AddText("class Main"+ cr)
            cb5:AddText("   action Main" + cr)
            cb5:Add(s1)
            cb5:AddText("   HashTable &lt;text, text&gt; headers" + cr)
            cb5:Add(s2)
            cb5:AddText("   headers:Add(" + dq + "Connection" + dq + ", " + dq + "keep-alive" + dq + ")" + cr)
            cb5:Add(s3)
            cb5:AddText("   headers:Add(" + dq + "Accept-Encoding" + dq + ", " + dq + "gzip, deflate" + dq + ")" + cr)
        section_request_message:Add(preformatter:GeneratePreformattedCode(cb5))

        section_request_message:AddParagraph("Next, we will create a NetworkRequest object " + dq + "request" + dq + " and 
        set " + dq + "request’s" + dq + " Headers to the HashTable object " + dq + "headers" + dq + ". ")
        CodeBlock cb6
            Span s4
            Span s5
            s4:AddText("    //creates a NetworkRequest object " + dq + "request" + dq + "" + cr )
            s4:SetClassAttribute("comment")
            s5:AddText("    //sets the NetworkRequest object " + dq + "request’s" + dq + " Headers to the Headers we" + cr)
            s5:AddText("    //created and set as the HashTable object " + dq + "headers" + dq + "" + cr)
            s5:SetClassAttribute("comment")
            cb6:Add(s4)
            cb6:AddText("   NetworkRequest request" + cr)
            cb6:Add(s5)
            cb6:AddText("   request:SetHeaders(headers)" + cr)
        section_request_message:Add(preformatter:GeneratePreformattedCode(cb6))

        section_request_message:AddParagraph("Finally we will output the associated value of " + dq + "request’s" + dq + " 
        header by its key name as shown below:")
        CodeBlock cb7
            Span s6
            Span s7
            s6:AddText("    //will output the header value that is associated with the key name " + dq + "Connection" + dq + "" + cr )
            s6:SetClassAttribute("comment")
            s7:AddText("    //will output the header values that are associated with the key name " + cr)
            s7:AddText("    //" + dq + "Accept-Encoding" + dq + ". Since this header has more than one value the values will" + cr)
            s7:AddText("    //be separated by a comma " + dq + "," + dq + " when they are output to the screen." + cr)
            s7:SetClassAttribute("comment")
            cb7:Add(s6)
            cb7:AddText("   output headers:GetValue(" + dq + "Connection" + dq + ")" + cr)
            cb7:Add(s7)
            cb7:AddText("   output headers:GetValue(" + dq + "Accept-Encoding" + dq + ")" + cr)
        section_request_message:Add(preformatter:GeneratePreformattedCode(cb7))

        section_request_message:AddParagraph("Here is the complete code section to set the NetworkRequest 
        object " + dq + "request’s" + dq + " headers and then output the key name’s specific " + dq + "header's" + dq + " 
        value(s) :")
        CodeBlock cb8
            cb8:AddText("use Libraries.Network.NetworkRequest" + cr)
            cb8:AddText("use Libraries.Containers.HashTable" + cr + cr)
            cb8:AddText("class Main" + cr)
            cb8:AddText("   action Main" + cr)
            cb8:AddText("       HashTable&lt;text, text&gt; headers" + cr)
            cb8:AddText("       headers:Add(" + dq + "Connection" + dq + ", " + dq + "keep-alive" + dq + ")" + cr)
            cb8:AddText("       headers:Add(" + dq + "Accept-Encoding" + dq + ", " + dq + "gzip, deflate" + dq + ")" + cr)
            cb8:AddText("       NetworkRequest request" + cr)
            cb8:AddText("       request:SetHeaders(headers)" + cr)
            cb8:AddText("       output headers:GetValue(" + dq + "Connection" + dq + ")" + cr)
            cb8:AddText("       output headers:GetValue(" + dq + "Accept-Encoding" + dq + ")" + cr)
            cb8:AddText("   end" + cr)
            cb8:AddText("end")
        section_request_message:Add(preformatter:GeneratePreformattedCode(cb8))

        CodeForIDE code_overview2
        code_overview2:AddFileText("Main.quorum", "//This code will output the Request Headers we have set")
        IDE ide_overview2 = AddIDE()
        ide_overview2:HideDisplay()
        ide_overview2:SetCodeForIDE(code_overview2:GetJsonArray())
        ide_overview2:SetIdeTitle("Activity: Setting the Web Address")
        section_request_message:Add(ide_overview2)


        section_request_message:AddParagraph("The output should look like this:")
        CodeBlock cb9
            cb9:AddText("keep-alive" + cr)
            cb9:AddText("gzip, deflate" + cr)
        section_request_message:Add(preformatter:GeneratePreformattedCode(cb9))

        Section section_response_message
        section_response_message:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_response_message, "Response Message", 2)


        Paragraph p_response_message
        Bold b7
            b7:AddText("Status Line")
        Bold b8
            b8:AddText("Response Text")
        p_response_message:AddText("The Response Message is similar in format to the request 
        message, however the request line is replaced with a ")
        p_response_message:Add(b7)
        p_response_message:AddText(" and the 
        Response Message Body, which we refer to as the ")
        p_response_message:Add(b8)
        p_response_message:AddText(", includes the resource data that was requested.")
        p_response_message:AddText("The ")
        Bold title3
            title3:AddText("Status Line ")
            p_response_message:Add(title3)
        p_response_message:AddText("includes a:" + cr)

        UnorderedList list2
                list2:AddClassAttribute("list-disc list-outside pl-8")
                AddListItemWithBoldAtFront(list2, "HTTP Version", " :  either HTTP/1.0 or 
                HTTP/1.1")
                AddListItemWithBoldAtFront(list2, "Status Code", " : which provides the outcome of the request")
                AddListItemWithBoldAtFront(list2, "Status Text", " :  which provides a short, human-readable message describing the status code such as " + dq + "200 OK" + dq + ", " + dq + "404 Not Found" + dq + ", or " + dq + "401 WWW-Authenticate" + dq + ". ")
        section_response_message:Add(list2)
        section_response_message:AddParagraph("The Status Line is returned in the following format:")

        CodeBlock cb10
                cb10:AddText("HTTP-Version  StatusCode  StatusText")
        section_response_message:Add(preformatter:GeneratePreformattedCode(cb10))

        section_response_message:AddParagraph("In order to view the Response Message’s Status Code and 
        Status Text in Quorum we will start by adding the following libraries:")
        CodeBlock cb11
            cb11:AddText("use Libraries.Network.NetworkConnection" + cr)
            cb11:AddText("use Libraries.Network.NetworkRequest" + cr)
            cb11:AddText("use Libraries.Network.NetworkResponseEvent" + cr)
            cb11:AddText("use Libraries.Network.NetworkRequestListener" + cr)
        section_response_message:Add(preformatter:GeneratePreformattedCode(cb11))

        section_response_message:AddParagraph("We will then create a NetworkRequest object " + dq + "request" + dq + " and 
        set its type and web address which are discussed in depth in the following 
        tutorials.")
        CodeBlock cb12
            Span s8
            Span s9
            Span s10
            s8:AddText("        //creates the NetworkRequest object " + dq + "request" + dq + "" + cr)
            s9:AddText("        //sets " + dq + "request’s" + dq + " type to GET" + cr)
            s10:AddText("       //sets " + dq + "request’s" + dq + " web address to " + dq + "https://quorumlanguage.com/GETtest.php" + dq + cr)
            s8:SetClassAttribute("comment")
            s9:SetClassAttribute("comment")
            s10:SetClassAttribute("comment")
            cb12:AddText("class Main is NetworkRequestListener" + cr)
            cb12:AddText("  action Main" + cr)
            cb12:Add(s8)
            cb12:AddText("      NetworkRequest request" + cr)
            cb12:Add(s9)
            cb12:AddText("      request:SetRequestTypeToGet()" + cr)
            cb12:Add(s10)
            cb12:AddText("      request:SetWebAddress(" + dq + "https://quorumlanguage.com/GETtest.php" + dq + ")" + cr)
        section_response_message:Add(preformatter:GeneratePreformattedCode(cb12))

        section_response_message:AddParagraph("Next, we will create a NetworkConnection object " + dq + "http" + dq + ", 
        add the NetworkListener which will be notified when a response is received from 
        the server, and then Send a Request of the NetworkRequest object " + dq + "request" + dq + " as 
        shown below: ")

        CodeBlock cb13
            Span s11
            Span s12
            Span s13
            s11:AddText("       //creates a NetworkConnection object " + dq + "http" + dq + "" + cr)
            s12:AddText("       //Adds a listener to the NetworkConnection object " + dq + "http" + dq + "" + cr)
            s13:AddText("       //Adds a SendRequest of the NetworkRequest object " + dq + "request" + dq + " to the" + cr)
            s13:AddText("       //NetworkConnection object " + dq + "http" + dq + "" + cr)
            s11:SetClassAttribute("comment")
            s12:SetClassAttribute("comment")
            s13:SetClassAttribute("comment")
            cb13:Add(s11)
            cb13:AddText("      NetworkConnection http" + cr)
            cb13:Add(s12)
            cb13:AddText("      http:AddListener(me)" + cr)
            cb13:Add(s13)
            cb13:AddText("      http:SendRequest(request)" + cr)
            cb13:AddText("  end")
        section_response_message:Add(preformatter:GeneratePreformattedCode(cb13))

        section_response_message:AddParagraph("Finally, we will view the response Status Code followed 
        by the  Status Text using the following code:")

        CodeBlock cb14
            cb14:AddText("  action ResponseReceived(NetworkResponseEvent response)" + cr)
            cb14:AddText("      output response:GetStatusCode() + " + dq + " " + dq + " + response:GetStatusText()" + cr)
            cb14:AddText("  end")
        section_response_message:Add(preformatter:GeneratePreformattedCode(cb14))

        section_response_message:AddParagraph(" Here is the complete code section to create a 
        NetworkRequest object " + dq + "request" + dq + " and view " + dq + "request’s" + dq + " response from the server:")

        CodeBlock cb15
            cb15:AddText("use Libraries.Network.NetworkConnection" + cr)
            cb15:AddText("use Libraries.Network.NetworkRequest" + cr)
            cb15:AddText("use Libraries.Network.NetworkResponseEvent" + cr)
            cb15:AddText("use Libraries.Network.NetworkRequestListener" + cr)
            cb15:AddText("class Main is NetworkRequestListener" + cr)
            cb15:AddText("  action Main" + cr)
            cb15:AddText("      NetworkRequest request" + cr)
            cb15:AddText("      request:SetRequestTypeToGet()" + cr)
            cb15:AddText("      request:SetWebAddress(" + dq + "https://quorumlanguage.com/GETtest.php" + dq + ")" + cr)
            cb15:AddText("      NetworkConnection http" + cr)
            cb15:AddText("      http:AddListener(me)" + cr)
            cb15:AddText("      http:SendRequest(request)" + cr)
            cb15:AddText("  end" + cr)
            cb15:AddText("  action ResponseReceived(NetworkResponseEvent response)" + cr)
            cb15:AddText("      output response:GetStatusCode() + " + dq + " " + dq + " + response:GetStatusText()" + cr)
            cb15:AddText("  end" + cr)
            cb15:AddText("end")
        section_response_message:Add(preformatter:GeneratePreformattedCode(cb15))

        CodeForIDE code_overview3
        code_overview3:AddFileText("Main.quorum", "//This code will output the server response Status Code and Status Text")
        IDE ide_overview3 = AddIDE()
        ide_overview3:HideDisplay()
        ide_overview3:SetCodeForIDE(code_overview1:GetJsonArray())
        ide_overview3:SetIdeTitle("Activity: Viewing Response Status")
        section_response_message:Add(ide_overview3)


        section_response_message:AddParagraph("The output should look like this:")
        section_response_message:Add(preformatter:GeneratePreformattedCode("200 OK"))

        bodyDiv:Add(section_overview)
        bodyDiv:Add(section_request_message)
        bodyDiv:Add(section_response_message)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn to manage a network connection with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Introducing Network Connections"
    end
    action GetName returns text
        return "Managing a Network Connection Overview"
    end
    action GetShortDescription returns text
        return "an overview into managing a network connection."
    end
    action GetLocation returns text
        return "tutorials/network/overview.html"
    end

    action GetLinkName returns text
        return "Overview"
    end

    action GetSectionName returns text
        return "Network"
    end
end
