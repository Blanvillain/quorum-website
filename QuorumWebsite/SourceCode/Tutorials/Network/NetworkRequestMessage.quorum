use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header

class NetworkRequestMessage is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Setting the Request Message Body")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Setting the Request Message Body", 1)
        headDiv:AddText("Setting the Request Message Body for a Network Request Body using Hypertext Transfer Protocol (HTTP)")
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")







Bold b1
    b1:AddText("Query String")
bodyDiv:AddText("When there is additional user data to be sent to the server it 
is either added to the Uniform Resource Locator (URL) when using the GET Method, or 
added in the Request Message Body when using the POST Method. The data being sent 
is contained in what is referred to as the ")
bodyDiv:Add(b1)
bodyDiv:AddText(", which contains data submitted in name value pairs (fields) 
with the name and value separated by an equal sign (=) and multiple 
fields separated by an ampersand (&). (Any whitespace in the value is replaced with a plus sign (+)). 
For example if we had the following three fields:")

CodeBlock cb
        cb:AddText("name: John Smith" + cr)
        cb:AddText("age: 15" + cr)
        cb:AddText("student: true" + cr)
        bodyDiv:Add(preformatter:GeneratePreformattedCode(cb))
bodyDiv:AddParagraph("Then the query string would be formatted as shown below :")

CodeBlock cb1
        cb1:AddText("name=John+Smith&age=15&student=true")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(cb1))

bodyDiv:AddHeading("Setting the Request Message Body Using Text Data", 2)
bodyDiv:AddParagraph("In order to format multiple fields of text data 
(key name: value pairs) we will use the " + dq + "Libraries.Network.NetworkRequest" + dq +  
" and " + dq + "Libraries.Containers.HashTable" + dq + " libraries. We will then create multiple 
text type variables to store the key names and their associated value as shown 
below:")

CodeBlock cb2
    cb2:AddText("use Libraries.Network.NetworkRequest" + cr )
    cb2:AddText("use Libraries.Containers.HashTable" + cr + cr)
    cb2:AddText("class Main"+ cr)
    cb2:AddText("   action Main" + cr)
    cb2:AddText("       text key1 = " + dq + "name" + dq + cr)
    cb2:AddText("       text value1 = " + dq + "John Smith" + dq + cr)
    cb2:AddText("       text key2 = " + dq + "age" + dq + cr)
    cb2:AddText("       text value2 = " + dq + "15" + dq + cr)
    cb2:AddText("       text key3 = " + dq + "student" + dq + cr)
    cb2:AddText("       text value3 = " + dq + "true" + dq + cr)
    bodyDiv:Add(preformatter:GeneratePreformattedCode(cb2))


bodyDiv:AddParagraph("Next, we will create a HashTable object " + dq + "data" + dq + " to add the 
name:value pairs to. Then we will create a NetworkRequest object " + dq + "request" + dq + " which 
will contain the formatted query string with " + dq + "data’s" + dq + " name:value pairs. ")

CodeBlock cb3
        Span s1
        Span s2
        s1:AddText("        //creates a HashTable object " + dq + "data" + dq + " and adds the key name:value pairs to" + cr)
        s1:AddText("        //" + dq + "data" + dq + "" + cr)
        s2:AddText("        //creates a NetworkRequest object " + dq + "request" + dq + " and formats data’s name:value" + cr)
        s2:AddText("        //pairs as a query string for the Request Message Body" + cr)
        s1:SetClassAttribute("comment")
        s2:SetClassAttribute("comment")
        cb3:Add(s1)
        cb3:AddText("       HashTable&lt;text, text&gt; data" + cr)
        cb3:AddText("       data:Add(key1, value1)" + cr)
        cb3:AddText("       data:Add(key2, value2)" + cr)
        cb3:AddText("       data:Add(key3, value3)" + cr)
        cb3:Add(s2)
        cb3:AddText("       NetworkRequest request" + cr)
        cb3:AddText("       request:SetParameters(data)")
        bodyDiv:Add(preformatter:GeneratePreformattedCode(cb3))

bodyDiv:AddParagraph("Finally, we will output the formatted query string to the 
screen. The complete code section looks like this:")

CodeBlock cb4
    cb4:AddText("use Libraries.Network.NetworkRequest" + cr)
    cb4:AddText("use Libraries.Containers.HashTable"+ cr + cr)
    cb4:AddText("class Main" + cr)
    cb4:AddText("   action Main" + cr)
    cb4:AddText("       text key1 = " + dq + "name" + dq + cr)
    cb4:AddText("       text value1 = " + dq + "John Smith" + dq + cr)
    cb4:AddText("       text key2 = " + dq + "age" + dq + cr)
    cb4:AddText("       text value2 = " + dq + "15" + dq + cr)
    cb4:AddText("       text key3 = " + dq + "student" + dq + cr)
    cb4:AddText("       text value3 = " + dq + "true" + dq + cr)
    cb4:AddText("       HashTable&lt;text, text&gt; data" + cr)
    cb4:AddText("       data:Add(key1, value1)" + cr)
    cb4:AddText("       data:Add(key2, value2)" + cr)
    cb4:AddText("       data:Add(key3, value3)" + cr)
    cb4:AddText("       NetworkRequest request" + cr)
    cb4:AddText("       request:SetParameters(data)" + cr)
    cb4:AddText("       output request:GetBody()" + cr)
    cb4:AddText("   end" + cr)
    cb4:AddText("end" + cr)
    bodyDiv:Add(preformatter:GeneratePreformattedCode(cb4))
AddSideBySideIDE(bodyDiv, "networkRequestMessageIDE1", "Activity: Setting the Message Body with Text Data", 
            "This code will output the formatted query string")

bodyDiv:AddParagraph("The output should look similar to this, with each key name 
and value separated by an equal " + dq + "=" + dq + " sign (the order 
may be different from the example output shown below, which will not matter as the 
values are accessed by their key name  and not by their order):")
bodyDiv:Add(preformatter:GeneratePreformattedCode(cb1))

bodyDiv:AddHeading("Setting the Request Message Body Using JavaScript Object Notation (JSON) Data", 2)
bodyDiv:AddParagraph("")
bodyDiv:AddText("In order to format JavaScriptObjectNotation object data 
({" + dq + "name" + dq + ":" + dq + "value" + dq + "} pairs) we will need to use the additional " + dq +  
"Libraries.Data.Formats.JavaScriptObjectNotation" + dq + " library. We will then create a 
JavaScriptObjectNotation object " + dq + "data" + dq + " which will contain the {" + dq + "name" + dq + ":" + dq + "value" + dq + "} 
pairs as shown below: (For more information on JavaScriptObjectNotation see the ")
bodyDiv:AddLink("Data Tutorials Section", "https://quorumlanguage.com/tutorials/data/overview.html")
bodyDiv:AddText(")" + cr)

CodeBlock cb5
    Span s3
    s3:AddText("        //creates a JavaScriptObjectNotation object " + dq + "data" + dq + "which will" + cr)
    s3:AddText("        //hold the (key name:value) pairs" + cr)
    s3:SetClassAttribute("comment")
    cb5:AddText("use Libraries.Network.NetworkRequest" + cr)
    cb5:AddText("use Libraries.Data.Formats.JavaScriptObjectNotation"+ cr + cr)
    cb5:AddText("class Main" + cr)
    cb5:AddText("   action Main" + cr)
    cb5:AddText("       text key1 = " + dq + "name" + dq + cr)
    cb5:AddText("       text value1 = " + dq + "Jane Adams" + dq + cr)
    cb5:AddText("       text key2 = " + dq + "age" + dq + cr)
    cb5:AddText("       integer value2 = 22" + cr)
    cb5:AddText("       text key3 = " + dq + "student" + dq + cr)
    cb5:AddText("       boolean value3 = false" + cr + cr)
    cb5:Add(s3)
    cb5:AddText("       JavaScriptObjectNotation data"+ cr)
    cb5:AddText("       data:Add(key1, value1)" + cr)
    cb5:AddText("       data:Add(key2, value2)" + cr)
    cb5:AddText("       data:Add(key3, value3)" + cr)    
    bodyDiv:Add(preformatter:GeneratePreformattedCode(cb5))

bodyDiv:AddParagraph("We will then create a NetworkRequest object " + dq + "request" + dq + ", 
format the JavaScriptObjectNotation object " + dq + "data" + dq + " as a query string, and output 
the formatted query string to the screen. ")

CodeBlock cb6
    Span s4
    Span s5
    Span s6
    s4:AddText("        //creates a NetworkRequest object " + dq + "request" + dq + "" + cr)
    s5:AddText("        //formats the JavaScriptObjectNotation object " + dq + "data" + dq + " as a query" + cr)
    s5:AddText("        //string for the Request Message Body" + cr)
    s6:AddText("        //outputs the formatted query string to the screen" + cr)
    s4:SetClassAttribute("comment")
    s5:SetClassAttribute("comment")
    s6:SetClassAttribute("comment")
    cb6:Add(s4)
    cb6:AddText("       NetworkRequest request" + cr)
    cb6:Add(s5)
    cb6:AddText("       request:SetParameters(data)" + cr)
    cb6:Add(s6)
    cb6:AddText("       output request:GetBody()" + cr)
    bodyDiv:Add(preformatter:GeneratePreformattedCode(cb6))

bodyDiv:AddParagraph("Here is the complete code section to create a formatted 
query string from a JavaScriptObjectNotation object:")

CodeBlock cb7
    cb7:AddText("use Libraries.Network.NetworkRequest" + cr)
    cb7:AddText("use Libraries.Data.Formats.JavaScriptObjectNotation" + cr + cr)
    cb7:AddText("class Main" + cr)
    cb7:AddText("   action Main" + cr)
    cb7:AddText("       text key1 = " + dq + "name" + dq + cr)
    cb7:AddText("       text value1 = " + dq + "Jane Adams" + dq + cr)
    cb7:AddText("       text key2 = " + dq + "age" + dq + cr)
    cb7:AddText("       integer value2 = 22" + cr)
    cb7:AddText("       text key3 = " + dq + "student" + dq + cr)
    cb7:AddText("       boolean value3 = false" + cr)
    cb7:AddText("       JavaScriptObjectNotation data"+ cr)
    cb7:AddText("       data:Add(key1, value1)" + cr)
    cb7:AddText("       data:Add(key2, value2)" + cr)
    cb7:AddText("       data:Add(key3, value3)" + cr) 
    cb7:AddText("       NetworkRequest request" + cr)
    cb7:AddText("       request:SetParameters(data)" + cr)
    cb7:AddText("       output request:GetBody()" + cr)
    cb7:AddText("   end" + cr)
    cb7:AddText("end" + cr)
    bodyDiv:Add(preformatter:GeneratePreformattedCode(cb7))
AddSideBySideIDE(bodyDiv, "networkRequestMessageIDE2", "Activity: Setting the Message Body with JSON Data", 
            "This code will output the formatted query string")


bodyDiv:AddParagraph("The output should look similar to this, with each key name 
and value separated by an equal " + dq + "=" + dq + " sign (the order 
may be different from the example output shown below, which will not matter as the 
values are accessed by their key name  and not by their order):")

CodeBlock cb8
    cb8:AddText("name=Jane+Adams&age=22&student=false" + cr)
    bodyDiv:Add(preformatter:GeneratePreformattedCode(cb8))



        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Setting the Request Message Body using HTTP with the Quorum programming language."
    end

    action GetSummaryName returns text
        return "Setting the Request Message Body using the Hypertext Transfer Protocol (HTTP)"
    end
    action GetName returns text
        return "Setting the Request Message Body"
    end
    action GetShortDescription returns text
        return "an introduction to setting the request message body using the Hypertext Transfer Protocol (HTTP)."
    end
    action GetLocation returns text
        return "tutorials/network/requestMessage.html"
    end
end