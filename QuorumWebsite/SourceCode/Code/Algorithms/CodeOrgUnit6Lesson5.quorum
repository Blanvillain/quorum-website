use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.BoxTip
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.TableData

class CodeOrgUnit6Lesson5 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 6 Lesson 5: Parallel and Distributed Algorithms")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Algorithms - Lesson 5: Parallel and Distributed Algorithms", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("In this lesson students explore the benefits and limitations of parallel and distributed computing. First they discuss the way human problem solving changes when additional people lend a hand. Then they run a series of demonstrations that show how simple tasks like sorting cards get faster when more people help, but there is a limitation to the efficiency gains. Later in the lesson students watch a video about distributed computing that highlights the ways distributed computing can help tackle new kinds of problems. To conclude the lesson students record new vocabulary in their journals and discuss any open questions.")
            
        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddListItem("Explain the difference between sequential, parallel, and distributed computing")
        goalList:AddListItem("Calculate the speedup of a parallel solution to a problem.")
        goalList:AddListItem("Describe the benefits and challenges of parallel and distributed computing.")
        bodyDiv:Add(goalList)

        bodyDiv:AddHeading("Preparation", 2)
        bodyDiv:AddParagraph("Collect the manipulatives you will use for the main activity. While decks of cards are suggested, other manipulatives are possible. See the teaching tip in the main activity for suggestions.")
        
        bodyDiv:AddHeading("Links", 2)
        UnorderedList ag
        ag:AddListItemLink("Folding@home Supercomputing Project", "https://youtu.be/RGGzMQ2oFrA")
        bodyDiv:Add(ag)

        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("This lesson is a quick tour of the challenges and benefits of parallel and distributed computing. It caps off the unit to showcase ways these techniques are being used to push the boundaries of how efficiently computer can solve problems.")

        bodyDiv:AddHeading("Getting Started (5 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt:", " Brainstorm a task that you can complete faster if you get other people to help. Whats' the most number of people you'd want to help you and why?")

        BoxTip startGoal
        startGoal:AddHeading("Discussion Goal", 3)
        startGoal:AddParagraph(" This should be a quick prompt to foreshadow the main ideas of the lesson. Students should brainstorm many potential tasks. When they start mentioning the maximum number of people they'd want to help them direct attention towards why that's the case. You might hear that: ")
        UnorderedList startList
        startList:AddListItem("Adding extra people makes it more complicated")
        startList:AddListItem("Sometimes extra people doesn't really speed things up")
        startList:AddListItem("If you're working with lots of people then if one person is slower the whole group is slowed down")
        startGoal:Add(startList)
        bodyDiv:Add(startGoal)

        bodyDiv:AddParagraph("Have students think about their answers on their own, then share with a partner, and then finally discuss responses with the entire room. ")

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList startRemarks
        startRemarks:AddListItem("As we've explored in this unit, computer scientists are always looking for more efficient ways to run programs. One way to do this is to develop faster algorithms that run on a single computer. Another idea we'll explore today, is figuring out ways to run programs on many computers at the same time. We just talked about some benefits and challenges when many people help with a task. As we'll see, the same is true with running programs on multiple computers. It can lead to some improvements, but also some new challenges.")
        bodyDiv:Add(startRemarks)


        bodyDiv:AddHeading("Activity (30 mins)", 2)
        bodyDiv:AddHeading("Card Sorting Challenge", 4)
        bodyDiv:AddParagraphBoldFront("Set Up:"," Place students in groups of three or four.")
    
        bodyDiv:AddParagraphBoldFront("Distribute: ", "Give one member of each group some manipulatives (e.g. a deck of cards)")

        Division runningActivity
        runningActivity:AddClassAttribute("cool-box")
        runningActivity:AddHeading("Teaching Tip", 3)
        runningActivity:AddParagraphBoldFront("Choosing Manipulatives:", " This activity can easily be done with many different types of manipulatives, not just cards. For example, students could sort pennies by even / odd year, sort coins into piles of different denominations, sort blocks by color / size, or sort any other readily available item. Pick whatever makes the most sense for your context.")
        bodyDiv:Add(runningActivity)
        bodyDiv:Add(break)

        bodyDiv:AddParagraphBoldFront("Challenge 1 - One Person Sort: "," At the front of the room display the directions for the first sort as well as the clock. Run the clock, and have one student in each group sort the manipulatives with one type on top and one type on the bottom. Have students record their time. Then let the another partner repeat the process.")
        OrderedList challengeOne
        challengeOne:AddListItem("Shuffle the cards.")
        challengeOne:AddListItem("Put them in a neat stack, face down.")
        challengeOne:AddListItem("As quickly as you can, get the cards sorted so all the manipulatives of one type are on the bottom and all of the other are on top.")
        challengeOne:AddListItem("Time stops when you have the manipulatives sorted and back in a neat stack.")
        bodyDiv:Add(challengeOne)
        bodyDiv:AddParagraphBoldFront("Record the best time in your group","")
        
        bodyDiv:AddParagraphBoldFront("Challenge 2 - Two Person Sort: "," At the front of the room display the directions for the second challenge. Run the clock, and two students in each group work together to sort the cards with red at the bottom and black at the top. Have students record their time. If students are in groups of four offer to let the other two students try the challenge. ")
        OrderedList challengeTwo
        challengeTwo:AddListItem("Shuffle the cards.")
        challengeTwo:AddListItem("Put them in a neat stack, face down.")
        challengeTwo:AddListItem("As quickly as you can, get the cards sorted so all the manipulatives of one type are on the bottom and all of the other are on top.")
        challengeTwo:AddListItem("Time stops when you have the manipulatives sorted and back in a neat stack.")
        bodyDiv:Add(challengeTwo)
        bodyDiv:AddParagraph("<b>This time two people can sort the manipulatives.</b>")
        bodyDiv:AddParagraph("<b>Record the best time in your group</b>")
        
        bodyDiv:AddParagraphBoldFront("Challenge 3 - Full Group Sort: "," At the front of the room display the directions for the challenge. Run the clock, and have students in the full group (of at least three students) work together to sort the cards with red at the bottom and black at the top. Have students record their time.")
        OrderedList challengeThree
        challengeThree:AddListItem("Shuffle the cards.")
        challengeThree:AddListItem("Put them in a neat stack, face down.")
        challengeThree:AddListItem("As quickly as you can, get the cards sorted so all the manipulatives of one type are on the bottom and all of the other are on top.")
        challengeThree:AddListItem("Time stops when you have the manipulatives sorted and back in a neat stack.")
        bodyDiv:Add(challengeThree)
        bodyDiv:AddParagraphBoldFront("This time your entire group (three or four people) can sort the manipulatives.","")
        bodyDiv:AddParagraphBoldFront("Record the best time in your group.","")

        bodyDiv:AddHeading("Debriefing the Challenge", 3)
        bodyDiv:AddParagraphBoldFront("Display: "," Show the slides explaining the difference between parallel and sequential computing models. Talk through the different models.")
        bodyDiv:AddImage("/media/lessons/csp/unit6/SequentialAndParallel.png", "A side-by-side view of a sequential program, in which steps are performed in order, one at a time, and a parallel program, in which some steps are performed at the same time. ")

        bodyDiv:AddParagraphBoldFront("Prompt: "," What portions of your algorithms for Challenges 2 and 3 were parallel? What makes things complicated or slows you down during parallel portions of your algorithm?")
        bodyDiv:AddParagraphBoldFront("Discuss: "," Have groups discuss responses at their tables before sharing with the room.")

        BoxTip challengeGoal
        challengeGoal:AddHeading("Discussion Goal", 3)
        challengeGoal:AddParagraph(" This discussion has two goals. The first is to reinforce the difference between parallel and sequential portions of an algorithm. Any time multiple processes are happening at once (for example multiple people are sorting cards), an algorithm is parallel. The second goal is to bring up some common challenges that come up when running parallel algorithms. The remarks cover some of the most important ones but the main point is that while parallel algorithms are faster, they still present challenges.")
        bodyDiv:Add(challengeGoal)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        bodyDiv:AddParagraph("A lot of the challenges you just encountered show up when you try to run a program on multiple computers as well.")
        UnorderedList challengeRemarks
        challengeRemarks:AddListItem("Sometimes you need to wait because one computer finished before another")
        challengeRemarks:AddListItem("It can be complicated to split up work and recombine it when moving in and out of parallel portions")
        challengeRemarks:AddListItem("They're faster, but not always as much faster as you think.")
        bodyDiv:Add(challengeRemarks)

        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit6/Speedup.png", "A picture of the sequential and parallel programs side-by-side with Sequential time being 60 seconds and parallel time being 40 seconds. Then Speedup is defined as sequential time divided by parallel time. In this case 60 seconds divided by 40 seconds for a speedup of 1.5 (unitless)")
        bodyDiv:AddParagraphBoldFront("Prompt: "," What was your group's speedup in Challenge 2? What about in Challenge 3? Are you surprised?")
        bodyDiv:AddParagraphBoldFront("Discuss: "," Have groups calculate their speedup and share with the room.")
        bodyDiv:AddParagraphBoldFront("Display: "," Cover the primary points of speed in the real world.")
        
        UnorderedList challengeRemarks2
        challengeRemarks2:AddListItem("Students probably noticed their speedup is lower than the number of people helping sort. Sorting with two people doesn't give a speedup of 2. Sorting with 3 people doesn't give a speedup of 3")
        challengeRemarks2:AddListItem("Because some portions are always still sequential, the benefits of adding more processors will go down and eventually the speedup reaches a limit.")
        bodyDiv:Add(challengeRemarks2)

        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit6/AmdahlsLaw.png", "A graph demonstrating Amdahl's Law which shows that each additional part of a program that is made parallel causes a speedup, up to a limit.")

        bodyDiv:Add(break)
        bodyDiv:Add(break)
        BoxTip challengeGoal2
        challengeGoal2:AddHeading("Discussion Goal", 3)
        challengeGoal2:AddParagraph("Use this discussion to reinforce how speedup is calculated, but also to prime students to realize that adding additional parallel processes doesn't always lead to the same amount of speedup. During the parallel portion things are in fact moving faster, but sequential portions still take a long time (e.g. collecting individual piles once each group member has sorted their cards). Therefore speedup is rarely your original time divided by the number of computers running the process. Eventually it will level off.")
        bodyDiv:Add(challengeGoal2)

        bodyDiv:AddHeading("Distributed Computing in Real World Settings",4)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        bodyDiv:AddParagraph("We've just explored some of the core and theoretical ideas of parallel computing. It can speed things up, but not infinitely, and it adds complications and many more resources. That said, parallel computing can help tackle some big problems.")
        
        bodyDiv:AddParagraphBoldFront("Prompt: "," Before showing the video share the two prompts.")
        UnorderedList distributedComputing
        distributedComputing:AddListItem("Why is the type of computing presented " + dq + "distributed" + dq + "?")
        distributedComputing:AddListItem("Why is distributed computing used to solve the problem?")
        bodyDiv:Add(distributedComputing)

        Paragraph superProject
        superProject:AddText(AddTextBoldFront("Display:"," Show the video from the slides on"))
        superProject:AddLink("the international supercomputer project.", "https://youtu.be/RGGzMQ2oFrA")
        bodyDiv:Add(superProject)
       
       
        bodyDiv:AddParagraphBoldFront("Discuss: "," Have students share their responses to the two prompts:")
        UnorderedList distributedComputing2
        distributedComputing2:AddListItem("Why is the type of computing presented " + dq + "distributed" + dq + "?")
        distributedComputing2:AddListItem("Why is distributed computing used to solve the problem?")
        bodyDiv:Add(distributedComputing2)
        
        bodyDiv:AddParagraphBoldFront("Remarks", "")
        bodyDiv:AddParagraph("Distributed computing is very similar to parallel computing. The main idea is that programs can be run on lots and lots of computers. Distributed and parallel computing are helpful for solving really big problems that you couldn't normally solve on a single computer.")
        
        bodyDiv:AddHeading("Wrap Up (10 mins)", 2)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        bodyDiv:AddParagraph("Let's sum up what we learned: Parallel computing consists of both a parallel portion that is shared and a sequential portion.")
        bodyDiv:AddParagraph("A sequential solution's efficiency is measured as the sum of all of its steps, but a parallel solution takes as along as its sequential tasks plus the longest of its paralell tasks. Often times a parallel solution will be the fastest option, but there is a limit.")
        bodyDiv:AddParagraph("Solutions that use parallel computing can scale more effectively than solutions that use sequential computing. Why is this so? If we continue to add tasks, a sequential solution would continue to get larger and larger. However, with a parallel system, those tasks can be balanced.")
        bodyDiv:Add(break)        

        bodyDiv:AddParagraphBoldFront("Journal: ","Students add the following vocabulary words and definitions to their journals: sequential computing, parallel computing, distributed computing, speedup")
        UnorderedList vocabulary
        vocabulary:AddListItem("<i>sequential computing:</i> programs run in order, one command at a time.")
        vocabulary:AddListItem("<i>parallel computing:</i> programs are broken into small pieces, some of which are run simultaneously")
        vocabulary:AddListItem("<i>distributed computing:</i> programs are run by multiple devices")
        vocabulary:AddListItem("<i>speedup:</i> the time used to complete a task sequentially divided by the time to complete a task in parallel")
        bodyDiv:Add(vocabulary)

        bodyDiv:AddParagraphBoldFront("Prompt:", " Based on what we saw here today, create a list of pros and cons for distributed and parallel computing. Share it with a partner.")
        bodyDiv:AddParagraphBoldFront("Discuss:", " Have students write their list, then share with a partner, and then finally discuss responses with the entire room.")

        BoxTip closingGoal
        closingGoal:AddHeading("Discussion Goal", 3)
        closingGoal:AddParagraphBoldFront("Goal:"," This lesson covers a lot of ground so this is a good chance to review some of the main points of the lesson. Here's some big ones to cover.")
        UnorderedList closingGoalList
        closingGoalList:AddListItem("Parallel programs typically are faster")
        closingGoalList:AddListItem("Parallel programs don't get faster forever. At some point adding more processors doesn't really help")
        closingGoalList:AddListItem("Parallel programs can be more complicated.")
        closingGoalList:AddListItem("Parallel programs can be slowed down if only one of many devices is slow.")
        closingGoalList:AddListItem("Distributed programs can be run on thousands or even millions of computers which allows you to take on enormous problems")
        closingGoal:Add(closingGoalList)
        bodyDiv:Add(closingGoal)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        bodyDiv:AddHeading("Assessment: Check for Understanding", 2)
        bodyDiv:AddParagraphBoldFront("Question:", " What is the speedup of this parallel solution?")
        bodyDiv:AddParagraphBoldFront("Question:", "  In your own words, explain why the speedup of a parallel algorithm will eventually reach some limit.")

        bodyDiv:AddHeading("Standards Alignment", 2)
        UnorderedList list
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ","3B-AP-11")
        AddListItemWithBoldAtFront(list, "CSP2021: ","CSN-2.A.1, CSN-2.A.2, CSN-2.A.3, CSN-2.A.4, CSN-2.A.5, CSN-2.A.6, CSN-2.A.7")
        AddListItemWithBoldAtFront(list, "CSP2021: ","CSN-2.B.1, CSN-2.B.2, CSN-2.B.3, CSN-2.B.4, CSN-2.B.5")
        bodyDiv:Add(list)


        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "In this lesson students explore the benefits and limitations of parallel and distributed computing"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 6 Lesson 5: Parallel and Distributed Algorithms"
    end

    action GetName returns text
        return "Code.Org Unit 6 Lesson 5"
    end

    action GetShortDescription returns text
        return "Explore the benefits and limitations of parallel and distributed computing"
    end

    action GetLocation returns text
        return "lessons/code/Algorithms/Lesson5.html"
    end

end
