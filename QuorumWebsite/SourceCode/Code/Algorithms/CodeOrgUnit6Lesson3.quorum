use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit6Lesson3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 6 Lesson 3: Unreasonable Time")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
         Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Algorithms - Lesson 3: Unreasonable Time", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Algorithms - Lesson 3: Unreasonable Time")
        AddToHeadingArray(h_heading)

        bodyDiv:Add(headDiv)
        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)

        section_intro:AddParagraph("Students investigate two different types of raffles that highlight the way seemingly small problems can quickly grow large. The first raffle asks students to hunt for pairs of tickets that add to a target value. The second raffle asks students to hunt for any group of tickets that adds to a target value. After trying out each raffle live students will try to figure out the patterns for how many total combinations need to be checked in each. At the end they discuss the difference between reasonable and unreasonable algorithms based on their experiences.")
            
        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Explain the difference between problems that run in a reasonable time and those that do not")
        goalList:AddListItem("Explain how both formal mathematical reasoning and informal measurement can be used to determine an algorithm's efficiency")
        section_intro:Add(goalList)

        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("This lesson explores some tricky mathematical concepts in a hands on and interactive way. Building off the raffle analogy used in the previous lesson, it gives students an experience with two types of problems that grow quickly in size, though as they'll see one grows much faster than the other. This lesson should give students a sense of how computer scientists use mathematics to think about problems without relying too heavily on mathematical background that not all students may have.")

        AddHeading(section_intro, "Resources", 3)
        UnorderedList resources
        resources:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")
        resources:AddListItemLink("Unreasonable Time - Activity Guide", "https://docs.google.com/document/d/13VSFGtFwbJT73aYr4VnNJrsbnbyZBTDiSImVkqJGc5w/edit?usp=sharing")
        resources:AddListItemLink("CSP-Widgets Repository", "https://github.com/qorf/CSP-Widgets")
        section_intro:Add(resources)

        Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)

        section_gettingStarted:AddParagraph(AddStrongTag("Prompt: ") + " What does it mean to say one algorithm is " + dq + "more efficient" + dq + " than another?")
        section_gettingStarted:AddParagraph(AddStrongTag("Discuss: ") + "Have students think about their answers on their own, then share with a partner, and then finally discuss responses with the entire room.")

        Division startGoal = AddDisscussionGoal(section_gettingStarted)
        startGoal:AddParagraph("This prompt is a review from the previous lesson. Students should be free to refer to notes or their journals. You might hear the following points.")
        UnorderedList startList
        startList:AddClassAttribute("list-disc list-outside pl-8")
        startList:AddListItem("One algorithm requires fewer steps to complete than another")
        startList:AddListItem(dq + "The line for one algorithm curves below the other" + dq)
        startList:AddListItem("More efficient algorithms are much more helpful as input size grows. The amount of work grows more slowly.")
        startGoal:Add(startList)

        AddHeading(section_gettingStarted, "Remarks", 3)
        UnorderedList startRemarks
        startRemarks:AddClassAttribute("list-disc list-outside pl-8")
        startRemarks:AddListItem("Yesterday we started looking at how computer scientists might compare two algorithms that solve the same problem. Today we're going to look at two different problems. They may seem similar but as we'll see they actually are much harder to solve than either of the two we saw yesterday. The question will be " + dq + "how much harder" + dq + "? Let's get to it! ")
        section_gettingStarted:Add(startRemarks)


        Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (30 minutes)", 2)
        
        section_activity:AddParagraph(AddStrongTag("Open a Project: ") + " Have students re-open the <b>Lesson2_TicketGenerator</b> project in the Unit 6 folder of the CSP-Widgets repository. Students will use this to randomly generate ticket numbers for today's activity.")
        section_activity:AddParagraph(AddStrongTag("Problem #1 - The Pair Raffle: ") +" Every student will generate a ticket. Any pair of students win the raffle if their two tickets add to the winning number. The winning number is 1000.")
        section_activity:AddParagraph(AddStrongTag("Do This: "))
        OrderedList steps1
        steps1:AddClassAttribute("list-decimal list-outside pl-8")
        steps1:AddListItem("Generate a ticket")
        steps1:AddListItem("Silently move around the room")
        steps1:AddListItem("See if you're part of a winning pair!")
        section_activity:Add(steps1)

        section_activity:AddParagraph(AddStrongTag("Circulate: ") + " Give students a couple of minutes to walk around the room seeing if they can find a partner with which they can win the raffle. After a couple of minutes have them return to their desks. If there are any winners feel free to celebrate.")

        Division winningTip = AddTeachingTip(section_activity)
        winningTip:AddParagraph("Both because it helps give students a sense of the problem space and because it's fun to run a raffle, you should run both the pair raffle and the group raffle in your classroom. Here's some helpful tips.")
        UnorderedList raffleTips
        raffleTips:AddClassAttribute("list-disc list-outside pl-8")
        raffleTips:AddListItem("Insist that students check for the pair raffle silently. For this one it's very easy to just yell out what number you would pair with and lose the opporuntity to see how many total checks are necessary if they can just all yell from their seats.")
        raffleTips:AddListItem("The group raffle doesn't necessarily need to be silent. As students will see, it's an incredibly difficult problem and they're going to need to do a lot of checking even if they're able to talk out loud.")
        raffleTips:AddListItem("Think ahead about whether you actually want to award winners of the raffles. It's pretty unlikely that there will be a winner. ")
        raffleTips:AddListItem("There's a pretty good chance that no one will win either raffle.")
        winningTip:Add(raffleTips)

        UnorderedList activityRemarks
        activityRemarks:AddClassAttribute("list-disc list-outside pl-8")
        activityRemarks:AddListItem("Alright, that was interesting. Let's try out a different version of the raffle. Last time I made you work silently so that we got a better sense of how many checks needed to happen. This time we're going to run a group raffle, but I'll let you talk out loud if you want.")
        section_activity:Add(activityRemarks)
        
         section_activity:AddParagraph(AddStrongTag("Problem #2 - The Group Raffle: ") + " Each student generates a new ticket. The winners are any group of students (from one ticket up to all of them) that adds up to the winning number. The winning number is 2500.")
         section_activity:AddParagraph(AddStrongTag("Do This: "))
        OrderedList steps2
        steps2:AddClassAttribute("list-decimal list-outside pl-8")
        steps2:AddListItem("Generate a ticket")
        steps2:AddListItem("Move around the room (you can talk this time)")
        steps2:AddListItem("See if you're part of a winning group!")
        section_activity:Add(steps2)

        section_activity:AddParagraph(AddStrongTag("Circulate: ") +  " Give students a couple of minutes to walk around the room seeing if they can find a group with which they can win the raffle. After a couple of minutes have them return to their desks. If there are any winners feel free to celebrate.")
        section_activity:AddParagraph(AddStrongTag("Prompt: ") + " Which raffle felt like it was more difficult to check? Why?")
        section_activity:AddParagraph(AddStrongTag("Discuss: ") + " Have students discuss this prompt with a neighbor. Then have a few students share out their reflections.")

        Division stepGoal = AddDisscussionGoal(section_activity)
        stepGoal:AddParagraph("This discussion is primarily designed to get quick reactions from students to motivate the second big activity in this lesson. Students will likely note that the group raffle felt a lot harder to check, even with the ability to talk. That said, there's no wrong answers at this point. You're about to check their intutions mathematically.")

        AddHeading(section_activity, "Remarks", 3)
        UnorderedList distributeRemarks
        raffleTips:AddClassAttribute("list-disc list-outside pl-8")
        raffleTips:AddListItem("As computer scientists we're getting better at thinking about problems and algorithms. We also saw last time that we can use a little mathematical reasoning to decide if one algorithm is more efficient than the other. Let's do a little work on these two raffles to see if our intuitions are correct.")
         section_activity:Add(distributeRemarks)

        Paragraph distribute
        distribute:AddText("<strong>Distribute:</strong> Distribute copies of ")
        Link link = distribute:AddLink("Unreasonable Time - Activity Guide", "https://docs.google.com/document/d/13VSFGtFwbJT73aYr4VnNJrsbnbyZBTDiSImVkqJGc5w/edit?usp=sharing")
        link:SetClassAttribute("underline text-quorum-blue-150")
         section_activity:Add(distribute)

        section_activity:AddParagraph(AddStrongTag("Problem #1 - The Pair Raffle: ") + " Ask students to fill out the first page where they must figure out the total number of pairs for different sized " + dq + "pair raffles" + dq + ". This may take several minutes and require students to draw pictures.")
        section_activity:AddParagraph(AddStrongTag("Problem #2 - The Group Raffle: ") + " Ask students to fill out the second page where they must figure out the total number of groups for different sized " + dq + "group raffles" + dq + ". This may take several minutes and require students to draw pictures.")
        section_activity:AddParagraph(AddStrongTag("Share Responses: ") + " Ask students to share their responses with another group.")
        
        // Display graphic for two types of curves.
        section_activity:AddParagraph(AddStrongTag("Display: ") + " Look at the chart as a class and examine the graph. The graph visualizes the pattern the class discussed. ")
        
        WebTable table = AddWebTable("Raffle Tickets - Polynomial Time Table")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("Tickets")
        tableHeaderArray:Add("Checks") 

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)    
        
        Array<text> rubricText1
        rubricText1:Add("2")
        rubricText1:Add("1") 
        tableBody:Add(AddTableBodyRow(rubricText1))

        Array<text> rubricText2
        rubricText2:Add("3")
        rubricText2:Add("3") 
        tableBody:Add(AddTableBodyRow(rubricText2))

        Array<text> rubricText3
        rubricText3:Add("4")
        rubricText3:Add("6") 
        tableBody:Add(AddTableBodyRow(rubricText3))

         Array<text> rubricText4
        rubricText4:Add("5")
        rubricText4:Add("10") 
        tableBody:Add(AddTableBodyRow(rubricText4))

        Array<text> rubricText5
        rubricText5:Add("8")
        rubricText5:Add("28") 
        tableBody:Add(AddTableBodyRow(rubricText5))

        table:Add(tableBody)
        section_activity:Add(table)

        section_activity:Add(break)
        Image image = section_activity:AddImage("/media/lessons/csp/unit6/polynomialTimeGraph.png", "A graph mapping the number of tickets to the number of checks to solve the problem. The result is a upward curved line where the y axis grows faster than the x axis. ")
       image:AddAttribute("data-zoom","")
        section_activity:AddParagraph("The exact formula for this relationship is (n^2 - n)/2 You don’t need to know that formula, but you should know that because of the " + dq + "n-squared" + dq + " term the graph curves up. Any algorithm whose efficiency includes an n2, n3, n4 … is called polynomial.")

         WebTable tableExp = AddWebTable("Raffle Tickets - Exponential Time Table")
        TableBody tableBodyExp = AddTableBody()
        
        Array<text> tableHeaderArrayExp
        tableHeaderArrayExp:Add("Tickets")
        tableHeaderArrayExp:Add("Checks") 

        TableHeader theadExp = AddTableHeaderRow(tableHeaderArrayExp)
        tableExp:Add(theadExp) 

         Array<text> rubricText6
        rubricText6:Add("2")
        rubricText6:Add("3") 
        tableBodyExp:Add(AddTableBodyRow(rubricText6))

         Array<text> rubricText7
        rubricText7:Add("3")
        rubricText7:Add("7") 
        tableBodyExp:Add(AddTableBodyRow(rubricText7))

         Array<text> rubricText8
        rubricText8:Add("4")
        rubricText8:Add("15") 
        tableBodyExp:Add(AddTableBodyRow(rubricText8))

         Array<text> rubricText9
        rubricText9:Add("5")
        rubricText9:Add("31") 
        tableBodyExp:Add(AddTableBodyRow(rubricText9))

                 Array<text> rubricText10
        rubricText10:Add("8")
        rubricText10:Add("255") 
        tableBodyExp:Add(AddTableBodyRow(rubricText10))
        


        tableExp:Add(tableBodyExp)
        section_activity:Add(tableExp)

        section_activity:Add(break)
        Image image1 = section_activity:AddImage("/media/lessons/csp/unit6/exponentialTimeGraph.png", "A graph mapping the number of tickets to the number of checks to solve the problem. The result is a upward curved line where the y axis grows MUCH faster than the x axis. This patttern is called exponential.")
        image1:AddAttribute("data-zoom","")
        section_activity:AddParagraph(" The exact formula for this relationship is (2^n) - 1 You don’t need to know that formula, but you should know that because of the " + dq + "2 to the n" + dq + " term the graph curves up very quickly. Any algorithm whose efficiency includes an 2n, 3n, 4n … is called exponential.  ")

        section_activity:AddParagraph(AddStrongTag("Prompt: ") +"Polynomial and exponential both curve up. Why do you think only exponential is considered " + dq + "unreasonable" + dq + "?")
        section_activity:AddParagraph(AddStrongTag("Discuss: ") +"Briefly ask students for their ideas why before showing them the following slides. Exponential curves grow extremely quickly. You simply can't build a computer fast enough even for relatively small raffle sizes.")
        
        Image image2 = section_activity:AddImage("/media/lessons/csp/unit6/efficiencyComparisonGraph.png", " A graph showing the 4 different efficiencies (log, linear, polynomial, exponential). For log and linear the x axis grows the same or less than the y axis. The polynomial grows faster on the y axis than the x axis but it is not as steep as exponential. The exponential grows on the y axis so much faster than on the x axis it is considered unreasonable.  ")
        image2:AddAttribute("data-zoom","")

        WebTable tableSort = AddWebTable("Raffle Tickets - Time Complexities")
        TableBody tableBodySort = AddTableBody()
        
        Array<text> tableHeaderArraySort
        tableHeaderArraySort:Add("Tickets")
        tableHeaderArraySort:Add("Sorted Raffle (log)")
        tableHeaderArraySort:Add("Normal Raffle (linear)") 
        tableHeaderArraySort:Add("Pair Raffle (polynomial)") 
        tableHeaderArraySort:Add("Group Raffle (exponential)") 

        TableHeader theadSort = AddTableHeaderRow(tableHeaderArraySort)
        tableSort:Add(theadSort) 
    
        Array<text> rubricText11
        rubricText11:Add("10")
        rubricText11:Add("4 Checks") 
        rubricText11:Add("10 Checks")
        rubricText11:Add("100 Checks") 
        rubricText11:Add("1,024 Checks")
        tableBodySort:Add(AddTableBodyRow(rubricText11))

        Array<text> rubricText12
        rubricText12:Add("20")
        rubricText12:Add("5 Checks") 
        rubricText12:Add("20 Checks")
        rubricText12:Add("400 Checks") 
        rubricText12:Add("1,048,576 Checks")
        tableBodySort:Add(AddTableBodyRow(rubricText12))

        Array<text> rubricText13
        rubricText13:Add("100")
        rubricText13:Add("7 Checks") 
        rubricText13:Add("100 Checks")
        rubricText13:Add("10,000 Checks") 
        rubricText13:Add("1.26*10^30 Checks")
        tableBodySort:Add(AddTableBodyRow(rubricText13))

        Array<text> rubricText14
        rubricText14:Add("1000")
        rubricText14:Add("10 Checks") 
        rubricText14:Add("1000 Checks")
        rubricText14:Add("1,000,000 Checks") 
        rubricText14:Add("1.07*10^301 Checks")
        tableBodySort:Add(AddTableBodyRow(rubricText14))

        Array<text> rubricText15
        rubricText15:Add("10,000")
        rubricText15:Add("14 Checks") 
        rubricText15:Add("10,000 Checks")
        rubricText15:Add("100,000,000 Checks") 
        rubricText15:Add("2.00*10^3010 Checks")
        tableBodySort:Add(AddTableBodyRow(rubricText15))

        Array<text> rubricText16
        rubricText16:Add("100,000")
        rubricText16:Add("17 Checks") 
        rubricText16:Add("100,000 Checks")
        rubricText16:Add("1.00*10^10 Checks") 
        rubricText16:Add("9.99*10^30102 Checks")
        tableBodySort:Add(AddTableBodyRow(rubricText16))


        tableSort:Add(tableBodySort)
        section_activity:Add(tableSort)

        section_activity:AddParagraph("Polynomial is bad but exponential gets unreasonably large extremely quickly.")
        section_activity:AddParagraph(" Note that 1.07*10^301 Checks (1000 tickets in a group raffle) is more checks than atoms in the entire universe!") 

        Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap up (10 Minutes)", 2)


        section_wrap:AddParagraph(AddStrongTag("Prompt: ") + " Your school is considering running the group raffle at an upcoming assembly to give away a prize. Write a brief explanation of what advice you would give them. ")
        section_wrap:AddParagraph(AddStrongTag("Discuss: ") + " Have students think about their answers on their own, then share with a partner, and then finally discuss responses with the entire room. ")

        Division closingGoal = AddDisscussionGoal(section_wrap)
        closingGoal:AddParagraph("Use this discussion to reinforce vocabulary introduced in the slides and make sure they have understood the main concepts of the day. Students should be able to explain with the term reasonable, unreasonable, and exponential, why running a group raffle in a school of most sizes is impossible.")

         AddHeading(section_wrap, "Remarks", 3)
        UnorderedList closingRemarks
        closingRemarks:AddClassAttribute("list-disc list-outside pl-8")
        closingRemarks:AddListItem("The group raffle is just one example of an algorithm that is " + dq + "unreasonable" + dq + ". It grows exponentially and so we'd never want to run it at our school. Next time we'll talk more about what to do when we encounter unreasonable problems.")
        section_wrap:Add(closingRemarks)

        section_wrap:AddParagraph(AddStrongTag("Journal: ") + " Students add the following vocabulary words and definitions to their journals:")
        UnorderedList vocabulary
        vocabulary:AddClassAttribute("list-disc list-outside pl-8")
        vocabulary:AddListItem("<i>Unreasonable time:</i> Algorithms with exponential or factorial efficiencies are examples of algorithms that run in an unreasonable amount of time.")
        vocabulary:AddListItem("<i>Reasonable time:</i> Algorithms with a polynomial efficiency or lower (constant, linear, square, cube, etc.) are said to run in a reasonable amount of time. ")
        section_wrap:Add(vocabulary)

        Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Check for Understanding", 2)



           AddHeading(section_assessment, "For Students", 3)
        section_assessment:AddParagraph("Open a word doc or google doc and copy/paste the 2 following questions.")

        AddHeading(section_assessment, "Question 1", 3)
        section_assessment:AddParagraph(" Which of the follow efficiencies would be considered unreasonable? ")
        section_assessment:AddParagraph("<ol type="+ dq +"a" + dq + ">
                            <li>a. 2^n</li>
                            <li>b. 2n</li>
                            <li>c. n^2</li>
                            <li>d. n^20</li>
                            </ol>")
        AddHeading(section_assessment, "Question 2", 3)
        section_assessment:AddParagraph(" A team of programmers is trying to determine the efficiency of a piece of code. They run the code with inputs of different sizes and also record the number of iterations through the core block of code. The data is recorded in the table below. ")
        

        WebTable tableQ = AddWebTable("Raffle Tickets - Iterations")
        TableBody tableBodyQ = AddTableBody()
        
        Array<text> tableHeaderArrayQ
        tableHeaderArrayQ:Add("Input Size (Tickets)")
        tableHeaderArrayQ:Add("Iterations (Checks)")

        TableHeader theadQ = AddTableHeaderRow(tableHeaderArrayQ)
        tableQ:Add(theadQ) 

        Array<text> rubricText17
        rubricText17:Add("10")
        rubricText17:Add("200") 
        tableBodyQ:Add(AddTableBodyRow(rubricText17))

                Array<text> rubricText18
        rubricText18:Add("20")
        rubricText18:Add("400") 
        tableBodyQ:Add(AddTableBodyRow(rubricText18))


        Array<text> rubricText19
        rubricText19:Add("30")
        rubricText19:Add("600") 
        tableBodyQ:Add(AddTableBodyRow(rubricText19))

        Array<text> rubricText20
        rubricText20:Add("40")
        rubricText20:Add("800") 
        tableBodyQ:Add(AddTableBodyRow(rubricText20))

                Array<text> rubricText21
        rubricText21:Add("50")
        rubricText21:Add("1000") 
        tableBodyQ:Add(AddTableBodyRow(rubricText21))

                Array<text> rubricText22
        rubricText22:Add("100")
        rubricText22:Add("2000") 
        tableBodyQ:Add(AddTableBodyRow(rubricText22))

        tableQ:Add(tableBodyQ)
        section_assessment:Add(tableQ)



        section_assessment:AddParagraph(" Based on the data provided, does this algorithm run in a reasonable or unreasonable time? Explain your answer ")

                       Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ","3B-AP-11")
        AddListItemWithBoldAtFront(list, "CSP2021: ","AAP-4.A.4, AAP-4.A.7")
        section_standards:Add(list)

       Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn what it means to say that one algorithm is " + dq + "more efficient" + dq + " than another"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 6 Lesson 3: Unreasonable Time"
    end

    action GetName returns text
        return "Code.Org Unit 6 Lesson 3"
    end

    action GetShortDescription returns text
        return "Learn why onLesson 4thm is more efficient than another"
    end

    action GetLocation returns text
        return "lessons/code/Algorithms/Lesson3.html"
    end

       action GetLinkName returns text
        return "Unreasonable Time"
    end

    action GetSectionName returns text
        return "Algorithms"
    end

end
