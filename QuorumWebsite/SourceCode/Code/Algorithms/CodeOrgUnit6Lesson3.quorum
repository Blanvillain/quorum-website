use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.BoxTip
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.TableData

class CodeOrgUnit6Lesson3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 6 Lesson 3: Unreasonable Time")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Algorithms - Lesson 4: Unreasonable Time", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("Students investigate two different types of raffles that highlight the way seemingly small problems can quickly grow large. The first raffle asks students to hunt for pairs of tickets that add to a target value. The second raffle asks students to hunt for any group of tickets that adds to a target value. After trying out each raffle live students will try to figure out the patterns for how many total combinations need to be checked in each. At the end they discuss the difference between reasonable and unreasonable algorithms based on their experiences.")
            
        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddListItem("Explain the difference between problems that run in a reasonable time and those that do not")
        goalList:AddListItem("Explain how both formal mathematical reasoning and informal measurement can be used to determine an algorithm's efficiency")
        bodyDiv:Add(goalList)

        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("This lesson explores some tricky mathematical concepts in a hands on and interactive way. Building off the raffle analogy used in the previous lesson, it gives students an experience with two types of problems that grow quickly in size, though as they'll see one grows much faster than the other. This lesson should give students a sense of how computer scientists use mathematics to think about problems without relying too heavily on mathematical background that not all students may have.")

        bodyDiv:AddHeading("Resources", 2)
        UnorderedList resources
        resources:AddListItemLink("Unreasonable Time - Activity Guide", "https://docs.google.com/document/d/13VSFGtFwbJT73aYr4VnNJrsbnbyZBTDiSImVkqJGc5w/edit?usp=sharing")
        resources:AddListItemLink("CSP-Widgets Repository", "https://github.com/qorf/CSP-Widgets")
        bodyDiv:Add(resources)


        bodyDiv:AddHeading("Getting Started (5 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt:", " What does it mean to say one algorithm is " + dq + "more efficient" + dq + " than another?")
        bodyDiv:AddParagraphBoldFront("Discuss:", " Have students think about their answers on their own, then share with a partner, and then finally discuss responses with the entire room.")

        BoxTip startGoal
        startGoal:AddHeading("Discussion Goal", 3)
        startGoal:AddParagraph("This prompt is a review from the previous lesson. Students should be free to refer to notes or their journals. You might hear the following points.")
        UnorderedList startList
        startList:AddListItem("One algorithm requires fewer steps to complete than another")
        startList:AddListItem(dq + "The line for one algorithm curves below the other" + dq)
        startList:AddListItem("More efficient algorithms are much more helpful as input size grows. The amount of work grows more slowly.")
        startGoal:Add(break)
        startGoal:Add(startList)
        bodyDiv:Add(startGoal)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList startRemarks
        startRemarks:AddListItem("Yesterday we started looking at how computer scientists might compare two algorithms that solve the same problem. Today we're going to look at two different problems. They may seem similar but as we'll see they actually are much harder to solve than either of the two we saw yesterday. The question will be " + dq + "how much harder" + dq + "? Let's get to it! ")
        bodyDiv:Add(startRemarks)


        bodyDiv:AddHeading("Activity (30 mins)", 2)
        
        bodyDiv:AddParagraphBoldFront("Open a Project:", " Have students re-open the <b>Lesson2_TicketGenerator</b> project in the Unit 6 folder of the CSP-Widgets repository. Students will use this to randomly generate ticket numbers for today's activity.")
        bodyDiv:AddParagraphBoldFront("Problem #1 - The Pair Raffle:", " Every student will generate a ticket. Any pair of students win the raffle if their two tickets add to the winning number. The winning number is 1000.")
        bodyDiv:AddParagraphBoldFront("Do This:", "")
        OrderedList steps1
        steps1:AddListItem("Generate a ticket")
        steps1:AddListItem("Silently move around the room")
        steps1:AddListItem("See if you're part of a winning pair!")
        bodyDiv:Add(steps1)

        bodyDiv:AddParagraphBoldFront("Circulate:", " Give students a couple of minutes to walk around the room seeing if they can find a partner with which they can win the raffle. After a couple of minutes have them return to their desks. If there are any winners feel free to celebrate.")

        BoxTip winningTip
        winningTip:AddHeading("Teaching Tip", 3)
        winningTip:AddParagraph("Both because it helps give students a sense of the problem space and because it's fun to run a raffle, you should run both the pair raffle and the group raffle in your classroom. Here's some helpful tips.")
        UnorderedList raffleTips
        raffleTips:AddListItem("Insist that students check for the pair raffle silently. For this one it's very easy to just yell out what number you would pair with and lose the opporuntity to see how many total checks are necessary if they can just all yell from their seats.")
        raffleTips:AddListItem("The group raffle doesn't necessarily need to be silent. As students will see, it's an incredibly difficult problem and they're going to need to do a lot of checking even if they're able to talk out loud.")
        raffleTips:AddListItem("Think ahead about whether you actually want to award winners of the raffles. It's pretty unlikely that there will be a winner. ")
        raffleTips:AddListItem("There's a pretty good chance that no one will win either raffle.")
        winningTip:Add(break)
        winningTip:Add(raffleTips)
        bodyDiv:Add(winningTip)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList activityRemarks
        activityRemarks:AddListItem("Alright, that was interesting. Let's try out a different version of the raffle. Last time I made you work silently so that we got a better sense of how many checks needed to happen. This time we're going to run a group raffle, but I'll let you talk out loud if you want.")
        bodyDiv:Add(activityRemarks)
        
        bodyDiv:AddParagraphBoldFront("Problem #2 - The Group Raffle:", " Each student generates a new ticket. The winners are any group of students (from one ticket up to all of them) that adds up to the winning number. The winning number is 2500.")
        bodyDiv:AddParagraphBoldFront("Do This:", "")
        OrderedList steps2
        steps2:AddListItem("Generate a ticket")
        steps2:AddListItem("Move around the room (you can talk this time)")
        steps2:AddListItem("See if you're part of a winning group!")
        bodyDiv:Add(steps2)

        bodyDiv:AddParagraphBoldFront("Circulate:", " Give students a couple of minutes to walk around the room seeing if they can find a group with which they can win the raffle. After a couple of minutes have them return to their desks. If there are any winners feel free to celebrate.")
        bodyDiv:AddParagraphBoldFront("Prompt:", " Which raffle felt like it was more difficult to check? Why?")
        bodyDiv:AddParagraphBoldFront("Discuss:", " Have students discuss this prompt with a neighbor. Then have a few students share out their reflections.")

        BoxTip stepGoal
        stepGoal:AddHeading("Discussion Goal", 3)
        stepGoal:AddParagraph("This discussion is primarily designed to get quick reactions from students to motivate the second big activity in this lesson. Students will likely note that the group raffle felt a lot harder to check, even with the ability to talk. That said, there's no wrong answers at this point. You're about to check their intutions mathematically.")
        bodyDiv:Add(stepGoal)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList distributeRemarks
        distributeRemarks:AddListItem("As computer scientists we're getting better at thinking about problems and algorithms. We also saw last time that we can use a little mathematical reasoning to decide if one algorithm is more efficient than the other. Let's do a little work on these two raffles to see if our intuitions are correct.")
        bodyDiv:Add(distributeRemarks)

        Paragraph distribute
        distribute:AddText("<strong>Distribute:</strong> Distribute copies of ")
        distribute:AddLink("Unreasonable Time - Activity Guide", "https://docs.google.com/document/d/13VSFGtFwbJT73aYr4VnNJrsbnbyZBTDiSImVkqJGc5w/edit?usp=sharing")
        bodyDiv:Add(distribute)

        bodyDiv:AddParagraphBoldFront("Activity Guide Part 1 - Pair Raffle:", " Ask students to fill out the first page where they must figure out the total number of pairs for different sized " + dq + "pair raffles" + dq + ". This may take several minutes and require students to draw pictures.")
        bodyDiv:AddParagraphBoldFront("Activity Guide Part 2 - Group Raffle:", " Ask students to fill out the second page where they must figure out the total number of groups for different sized " + dq + "group raffles" + dq + ". This may take several minutes and require students to draw pictures.")
        bodyDiv:AddParagraphBoldFront("Share Responses:", " Ask students to share their responses with another group.")
        
        // Display graphic for two types of curves.
        bodyDiv:AddParagraphBoldFront("Display:", " Look at the chart as a class and examine the graph. The graph visualizes the pattern the class discussed. ")
        
        WebTable polynomialTimeTable
        
        TableHeader header
        TableRow headRow
        TableData head1
        head1:AddText("<strong>Tickets</strong>")
        TableData head2
        head2:AddText("<strong>Checks</strong>")
        headRow:Add(head1)
        headRow:Add(head2)
        header:Add(headRow)
        polynomialTimeTable:Add(header)

        TableRow row1
        TableData cellA1
        cellA1:AddText("2")
        TableData cellA2
        cellA2:AddText("1")
        row1:Add(cellA1)
        row1:Add(cellA2)
        polynomialTimeTable:Add(row1)

        TableRow row2
        TableData cellB1
        cellB1:AddText("3")
        TableData cellB2
        cellB2:AddText("3")
        row2:Add(cellB1)
        row2:Add(cellB2)
        polynomialTimeTable:Add(row2)

        TableRow row3
        TableData cellC1
        cellC1:AddText("4")
        TableData cellC2
        cellC2:AddText("6")
        row3:Add(cellC1)
        row3:Add(cellC2)
        polynomialTimeTable:Add(row3)

        TableRow row4
        TableData cellD1
        cellD1:AddText("5")
        TableData cellD2
        cellD2:AddText("10")
        row4:Add(cellD1)
        row4:Add(cellD2)
        polynomialTimeTable:Add(row4)

        TableRow row5
        TableData cellE1
        cellE1:AddText("8")
        TableData cellE2
        cellE2:AddText("28")
        row5:Add(cellE1)
        row5:Add(cellE2)
        polynomialTimeTable:Add(row5)

        bodyDiv:Add(polynomialTimeTable)
        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit6/polynomialTimeGraph.png", "A graph mapping the number of tickets to the number of checks to solve the problem. The result is a upward curved line where the y axis grows faster than the x axis. ")
        bodyDiv:AddParagraph("The exact formula for this relationship is (n^2 - n)/2 You don’t need to know that formula, but you should know that because of the " + dq + "n-squared" + dq + " term the graph curves up. Any algorithm whose efficiency includes an n2, n3, n4 … is called polynomial.")

        WebTable exponentialTimeTable
        
        TableHeader header2
        TableRow headRow2
        TableData headE1
        headE1:AddText("<strong>Tickets</strong>")
        TableData headE2
        headE2:AddText("<strong>Checks</strong>")
        headRow2:Add(headE1)
        headRow2:Add(headE2)
        header2:Add(headRow2)
        exponentialTimeTable:Add(header2)

        TableRow rowE1
        TableData cellEA1
        cellEA1:AddText("2")
        TableData cellEA2
        cellEA2:AddText("3")
        rowE1:Add(cellEA1)
        rowE1:Add(cellEA2)
        exponentialTimeTable:Add(rowE1)

        TableRow rowE2
        TableData cellEB1
        cellEB1:AddText("3")
        TableData cellEB2
        cellEB2:AddText("7")
        rowE2:Add(cellEB1)
        rowE2:Add(cellEB2)
        exponentialTimeTable:Add(rowE2)

        TableRow rowE3
        TableData cellEC1
        cellEC1:AddText("4")
        TableData cellEC2
        cellEC2:AddText("15")
        rowE3:Add(cellEC1)
        rowE3:Add(cellEC2)
        exponentialTimeTable:Add(rowE3)

        TableRow rowE4
        TableData cellED1
        cellED1:AddText("5")
        TableData cellED2
        cellED2:AddText("31")
        rowE4:Add(cellED1)
        rowE4:Add(cellED2)
        exponentialTimeTable:Add(rowE4)

        TableRow rowE5
        TableData cellEE1
        cellEE1:AddText("8")
        TableData cellEE2
        cellEE2:AddText("255")
        rowE5:Add(cellEE1)
        rowE5:Add(cellEE2)
        exponentialTimeTable:Add(rowE5)

        bodyDiv:Add(exponentialTimeTable)
        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit6/exponentialTimeGraph.png", "A graph mapping the number of tickets to the number of checks to solve the problem. The result is a upward curved line where the y axis grows MUCH faster than the x axis. This patttern is called exponential.")
        bodyDiv:AddParagraph(" The exact formula for this relationship is (2^n) - 1 You don’t need to know that formula, but you should know that because of the " + dq + "2 to the n" + dq + " term the graph curves up very quickly. Any algorithm whose efficiency includes an 2n, 3n, 4n … is called exponential.  ")

        bodyDiv:AddParagraphBoldFront("Prompt: ","Polynomial and exponential both curve up. Why do you think only exponential is considered " + dq + "unreasonable" + dq + "?")
        bodyDiv:AddParagraphBoldFront("Discuss: ","Briefly ask students for their ideas why before showing them the following slides. Exponential curves grow extremely quickly. You simply can't build a computer fast enough even for relatively small raffle sizes.")
        bodyDiv:Add(break)
        
        bodyDiv:AddImage("/media/lessons/csp/unit6/efficiencyComparisonGraph.png", " A graph showing the 4 different efficiencies (log, linear, polynomial, exponential). For log and linear the x axis grows the same or less than the y axis. The polynomial grows faster on the y axis than the x axis but it is not as steep as exponential. The exponential grows on the y axis so much faster than on the x axis it is considered unreasonable.  ")
        bodyDiv:Add(break)

        WebTable timeComparisonTable
        
        TableHeader header3
        TableRow headRow3
        TableData headC1
        headC1:AddText("<strong>Tickets</strong>")
        TableData headC2
        headC2:AddText("<strong>Sorted Raffle (log)</strong>")
        TableData headC3
        headC3:AddText("<strong>Normal Raffle (linear)</strong>")
        TableData headC4
        headC4:AddText("<strong>Pair Raffle (polynomial)</strong>")
        TableData headC5
        headC5:AddText("<strong>Group Raffle (exponential)</strong>")
        headRow3:Add(headC1)
        headRow3:Add(headC2)
        headRow3:Add(headC3)
        headRow3:Add(headC4)
        headRow3:Add(headC5)
        header3:Add(headRow3)
        timeComparisonTable:Add(header3)

        TableRow rowC1
        TableData cellCA1
        cellCA1:AddText("10")
        TableData cellCA2
        cellCA2:AddText("4 Checks")
        TableData cellCA3
        cellCA3:AddText("10 Checks")
        TableData cellCA4
        cellCA4:AddText("100 Checks")
        TableData cellCA5
        cellCA5:AddText("1,024 Checks")
        rowC1:Add(cellCA1)
        rowC1:Add(cellCA2)
        rowC1:Add(cellCA3)
        rowC1:Add(cellCA4)
        rowC1:Add(cellCA5)
        timeComparisonTable:Add(rowC1)

        TableRow rowC2
        TableData cellCB1
        cellCB1:AddText("20")
        TableData cellCB2
        cellCB2:AddText("5 Checks")
        TableData cellCB3
        cellCB3:AddText("20 Checks")
        TableData cellCB4
        cellCB4:AddText("400 Checks")
        TableData cellCB5
        cellCB5:AddText("1,048,576 Checks")
        rowC2:Add(cellCB1)
        rowC2:Add(cellCB2)
        rowC2:Add(cellCB3)
        rowC2:Add(cellCB4)
        rowC2:Add(cellCB5)
        timeComparisonTable:Add(rowC2)

        TableRow rowC3
        TableData cellCC1
        cellCC1:AddText("100")
        TableData cellCC2
        cellCC2:AddText("7 Checks")
        TableData cellCC3
        cellCC3:AddText("100 Checks")
        TableData cellCC4
        cellCC4:AddText("10,000 Checks")
        TableData cellCC5
        cellCC5:AddText("1.26*10^30 Checks")
        rowC3:Add(cellCC1)
        rowC3:Add(cellCC2)
        rowC3:Add(cellCC3)
        rowC3:Add(cellCC4)
        rowC3:Add(cellCC5)
        timeComparisonTable:Add(rowC3)

        TableRow rowC4
        TableData cellCD1
        cellCD1:AddText("1000")
        TableData cellCD2
        cellCD2:AddText("10 Checks")
        TableData cellCD3
        cellCD3:AddText("1000 Checks")
        TableData cellCD4
        cellCD4:AddText("1,000,000 Checks")
        TableData cellCD5
        cellCD5:AddText("1.07*10^301 Checks")
        rowC4:Add(cellCD1)
        rowC4:Add(cellCD2)
        rowC4:Add(cellCD3)
        rowC4:Add(cellCD4)
        rowC4:Add(cellCD5)
        timeComparisonTable:Add(rowC4)

        TableRow rowC5
        TableData cellCE1
        cellCE1:AddText("10,000")
        TableData cellCE2
        cellCE2:AddText("14 Checks")
        TableData cellCE3
        cellCE3:AddText("10,000 Checks")
        TableData cellCE4
        cellCE4:AddText("100,000,000 Checks")
        TableData cellCE5
        cellCE5:AddText("2.00*10^3010 Checks")
        rowC5:Add(cellCE1)
        rowC5:Add(cellCE2)
        rowC5:Add(cellCE3)
        rowC5:Add(cellCE4)
        rowC5:Add(cellCE5)
        timeComparisonTable:Add(rowC5)

        TableRow rowC6
        TableData cellCF1
        cellCF1:AddText("100,000")
        TableData cellCF2
        cellCF2:AddText("17 Checks")
        TableData cellCF3
        cellCF3:AddText("100,000 Checks")
        TableData cellCF4
        cellCF4:AddText("1.00*10^10 Checks")
        TableData cellCF5
        cellCF5:AddText("9.99*10^30102 Checks")
        rowC6:Add(cellCF1)
        rowC6:Add(cellCF2)
        rowC6:Add(cellCF3)
        rowC6:Add(cellCF4)
        rowC6:Add(cellCF5)
        timeComparisonTable:Add(rowC6)

        bodyDiv:Add(break)
        bodyDiv:Add(timeComparisonTable)
        bodyDiv:AddParagraph("Polynomial is bad but exponential gets unreasonably large extremely quickly.")
        bodyDiv:AddParagraph(" Note that 1.07*10^301 Checks (1000 tickets in a group raffle) is more checks than atoms in the entire universe!") 
        bodyDiv:Add(break)

        bodyDiv:AddHeading("Wrap Up (10 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt:", " Your school is considering running the group raffle at an upcoming assembly to give away a prize. Write a brief explanation of what advice you would give them. ")
        bodyDiv:AddParagraphBoldFront("Discuss:", " Have students think about their answers on their own, then share with a partner, and then finally discuss responses with the entire room. ")

        BoxTip closingGoal
        closingGoal:AddHeading("Discussion Goal", 3)
        closingGoal:AddParagraph("Use this discussion to reinforce vocabulary introduced in the slides and make sure they have understood the main concepts of the day. Students should be able to explain with the term reasonable, unreasonable, and exponential, why running a group raffle in a school of most sizes is impossible.")
        bodyDiv:Add(closingGoal)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList closingRemarks
        closingRemarks:AddListItem("The group raffle is just one example of an algorithm that is " + dq + "unreasonable" + dq + ". It grows exponentially and so we'd never want to run it at our school. Next time we'll talk more about what to do when we encounter unreasonable problems.")
        bodyDiv:Add(closingRemarks)

        bodyDiv:AddParagraphBoldFront("Journal:", " Students add the following vocabulary words and definitions to their journals:")
        UnorderedList vocabulary
        vocabulary:AddListItem("<i>Unreasonable time:</i> Algorithms with exponential or factorial efficiencies are examples of algorithms that run in an unreasonable amount of time.")
        vocabulary:AddListItem("<i>Reasonable time:</i> Algorithms with a polynomial efficiency or lower (constant, linear, square, cube, etc.) are said to run in a reasonable amount of time. ")
        bodyDiv:Add(vocabulary)

        bodyDiv:AddHeading("Assessment: Check for Understanding", 2)

        bodyDiv:AddParagraphBoldFront("For Students:"," Open a word doc or google doc and copy/paste the following questions.")

        bodyDiv:AddParagraphBoldFront("Question:", " Which of the follow efficiencies would be considered unreasonable? ")
        bodyDiv:AddParagraph("<ol type="+ dq +"a" + dq + ">
                            <li>2^n</li>
                            <li>2n</li>
                            <li>n^2</li>
                            <li>n^20</li>
                            </ol>")

        bodyDiv:AddParagraphBoldFront("Question:", " A team of programmers is trying to determine the efficiency of a piece of code. They run the code with inputs of different sizes and also record the number of iterations through the core block of code. The data is recorded in the table below. ")
        
        WebTable question2Table

        TableHeader headerQ
        TableRow headRowQ
        TableData headQ1
        headQ1:AddText("<strong>Input Size(Tickets)</strong>")
        TableData headQ2
        headQ2:AddText("<strong>Iterations(Checks)</strong>")
        headRowQ:Add(headQ1)
        headRowQ:Add(headQ2)
        headerQ:Add(headRowQ)
        question2Table:Add(headerQ)

        TableRow rowQ1
        TableData cellQA1
        cellQA1:AddText("10")
        TableData cellQA2
        cellQA2:AddText("200")
        rowQ1:Add(cellQA1)
        rowQ1:Add(cellQA2)
        question2Table:Add(rowQ1)

        TableRow rowQ2
        TableData cellQB1
        cellQB1:AddText("20")
        TableData cellQB2
        cellQB2:AddText("400")
        rowQ2:Add(cellQB1)
        rowQ2:Add(cellQB2)
        question2Table:Add(rowQ2)

        TableRow rowQ3
        TableData cellQC1
        cellQC1:AddText("30")
        TableData cellQC2
        cellQC2:AddText("600")
        rowQ3:Add(cellQC1)
        rowQ3:Add(cellQC2)
        question2Table:Add(rowQ3)

        TableRow rowQ4
        TableData cellQD1
        cellQD1:AddText("40")
        TableData cellQD2
        cellQD2:AddText("800")
        rowQ4:Add(cellQD1)
        rowQ4:Add(cellQD2)
        question2Table:Add(rowQ4)

        TableRow rowQ5
        TableData cellQE1
        cellQE1:AddText("50")
        TableData cellQE2
        cellQE2:AddText("1000")
        rowQ5:Add(cellQE1)
        rowQ5:Add(cellQE2)
        question2Table:Add(rowQ5)

        TableRow rowQ6
        TableData cellQF1
        cellQF1:AddText("100")
        TableData cellQF2
        cellQF2:AddText("2000")
        rowQ6:Add(cellQF1)
        rowQ6:Add(cellQF2)
        question2Table:Add(rowQ6)

        bodyDiv:Add(question2Table)
        bodyDiv:AddParagraph(" Based on the data provided, does this algorithm run in a reasonable or unreasonable time? Explain your answer ")
        bodyDiv:Add(break)

        bodyDiv:AddHeading("Standards Alignment", 2)
        UnorderedList list
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ","3B-AP-11")
        AddListItemWithBoldAtFront(list, "CSP2021: ","AAP-4.A.4, AAP-4.A.7")
        bodyDiv:Add(list)


        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn what it means to say that one algorithm is " + dq + "more efficient" + dq + " than another"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 6 Lesson 3: Unreasonable Time"
    end

    action GetName returns text
        return "Code.Org Unit 6 Lesson 3"
    end

    action GetShortDescription returns text
        return "Learn why onLesson 4thm is more efficient than another"
    end

    action GetLocation returns text
        return "lessons/code/Algorithms/Lesson3.html"
    end

end
