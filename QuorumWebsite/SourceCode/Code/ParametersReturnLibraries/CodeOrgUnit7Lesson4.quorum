use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.BoxTip
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.TableData
use Libraries.Web.Page.WebList
use Libraries.Containers.Array

class CodeOrgUnit7Lesson4 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Parameters and Return Make")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Parameters, Return, and Libraries - Lesson 4: Parameters and Return Make", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("Students use the knowledge and skills they've developed working with parameters and return values to develop a Rock Paper Scissors App. Unlike typical Make projects, students are given a significant portion of the starter code but are given three functions with parameters and return values that they'll need to develop themselves. At the end students submit their apps which can be assessed using a provided rubric.")
        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddListItem("Write functions with parameters and return values that meet a set of specified requirements")
        goalList:AddListItem("Debug programs that use functions with parameters and return")
        bodyDiv:Add(goalList)

        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("Make lessons typically ask students to take on an entirely blank screen when writing their program. In this instance students have to take on the "+dq+"blank function"+dq+" which needs to fit within the larger program they're developing. This is part of a broader mindset shift that students develop in this unit. Functions with parameters and return values operate like their own "+dq+"mini programs"+dq+" which can be written and tested independently. There is actually less difference than students might think between previous make projects, in which students get the user interface elements and no code, and this project, in which they get some starter code but blank functions with parameters. In each case they need to develop programs that integrate into a larger portion of the project. The focus of this unit is how functions with parameters and return values help further split programs into logical chunks like this.")
        
        bodyDiv:AddHeading("Resources", 2)
        UnorderedList resources
        resources:AddListItemLink("CSP-Widgets repository", "https://github.com/qorf/CSP-Widgets")
        bodyDiv:Add(resources)
        bodyDiv:AddHeading("Supplemental code.org material", 4)
        UnorderedList reso
        reso:AddListItemLink("CSP Parameters and Return Make - Rock Paper Scissors App (Activity Guide)", "https://docs.google.com/document/d/1SoiuvHw0tuSUZe9vL4hmRzyPrH_2IIOvD7LgkGtEph8/edit")
        bodyDiv:Add(reso)

        bodyDiv:AddHeading("Getting Started (5 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt: ", "How do parameters and return change the way you write programs?")
        bodyDiv:AddParagraphBoldFront("Discuss: ", "Have students share their ideas with a partner and then discuss as a class.")

        BoxTip startDiscussGoal
        startDiscussGoal:AddHeading("Discussion Goal", 3)
        startDiscussGoal:AddParagraphBoldFront("Goal: ", "This discussion should prompt students to better understand what turns out to be a slightly different make project. Today they're going to be taking on "+dq+"blank functions"+dq+" rather than "+dq+"blank screens"+dq+". This is because with parameters and return values you can chunk out your programs into pieces that have well-defined behavior. Remind students that this is known as procedural abstraction. If students don't land on these ideas don't aim to force it but return to this idea in the wrap up.")
        bodyDiv:Add(startDiscussGoal)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList startRemarks
            startRemarks:AddListItem("Today we're going to be working on another Make project, but this one is a little bit different than others we've done in the course. A lot of the code will already be written for us, and we'll be working on blank functions, rather than entirely blank programs. Thanks to the way that parameters and return work, it's easy to design programs this way.")
        bodyDiv:Add(startRemarks)

        bodyDiv:AddHeading("Activity (35 mins)", 2)
        bodyDiv:AddHeading("Build the Rock Paper Scissors App", 3)
        
        BoxTip timeTeachTip
        timeTeachTip:AddHeading("Teaching Tip", 3)
        timeTeachTip:AddParagraphBoldFront("Supporting Students: ", "While students are working on their apps, circulate the room and check in with students who need a little help. Encourage students to collaborate and discuss bugs with each other.")
        timeTeachTip:AddParagraphBoldFront("Debugging: ","Review with students steps they can use to debug if they get stuck:")
        UnorderedList debugList
            debugList:AddListItem("Build small parts of the program at a time and test them to make sure they work")
            debugList:AddListItem("Explain the code to a friend and clarify the differences between what they expect to happen and what is actually happening in")
        timeTeachTip:Add(debugList)
        bodyDiv:Add(timeTeachTip)
        
        bodyDiv:AddParagraphBoldFront("Group: ", "Make a determination as to whether this project will be completed in pairs or individually. You may even choose to let students decide.")
        bodyDiv:AddParagraphBoldFront("Lesson4_ExampleApp - Explore: ","Have students explore the working Rock Paper Scissors app. If students are not working in pairs they should still discuss the prompts with a neighbor.")
        UnorderedList exploreList
            exploreList:AddListItem("What does each button do")
            exploreList:AddListItem("How does the screen get updated after clicking each button")
        bodyDiv:Add(exploreList)
        bodyDiv:AddParagraphBoldFront("Review: ", "Quickly review what students will be doing again before they move on to the next step.")
        bodyDiv:AddParagraphBoldFront("Distribute: ", "Give students copies of <a href="+dq+"https://docs.google.com/document/d/1SoiuvHw0tuSUZe9vL4hmRzyPrH_2IIOvD7LgkGtEph8/edit"+dq+">CSP Parameters and Return Make - Rock Paper Scissors App (Activity Guide)</a> if you will be using it during the lesson.")

        bodyDiv:AddParagraphBoldFront("Submit: ","Encourage students to check the rubric below or on the last page of the Activity Guide before submitting.")

        Array<text> rubricHeader
        rubricHeader:Add("Category")
        rubricHeader:Add("Extensive Evidence")
        rubricHeader:Add("Convincing Evidence")
        rubricHeader:Add("Limited Evidence")
        rubricHeader:Add("No Evidence")

        Array<text> rubricText1
        rubricText1:Add("findIcon Function")
        rubricText1:Add("The function returns the correct values for all input values.")
        rubricText1:Add("The function returns the correct values for most input values.")
        rubricText1:Add("The function returns the correct values for some input values.")
        rubricText1:Add("The function does not return correct values for any input values.")

        Array<text> rubricText2
        rubricText2:Add("randomChoose Function")
        rubricText2:Add("The function returns the correct values for all input values.")
        rubricText2:Add("The function returns the correct values for most input values.")
        rubricText2:Add("The function returns the correct values for some input values.")
        rubricText2:Add("The function does not return correct values for any input values.")

        Array<text> rubricText3
        rubricText3:Add("decideWinner Function")
        rubricText3:Add("The function returns the correct values for all combinations of inputs.")
        rubricText3:Add("The function returns the correct values for most combinations of inputs.")
        rubricText3:Add("The function returns the correct values for some combination of inputs.")
        rubricText3:Add("The function does not return correct values for any combination of inputs")

        Array<text> rubricText4
        rubricText4:Add("Code runs without errors.")
        rubricText4:Add("No errors are present in the required code.")
        rubricText4:Add("Some errors are present in the required code.")
        rubricText4:Add("Many errors are present in the required code.")
        rubricText4:Add("The code does not run.")

        Array<text> rubricText5
        rubricText5:Add("Coding Comments")
        rubricText5:Add("Comments are used to correctly explain the purpose and functionality of all functions.")
        rubricText5:Add("Comments are used to explain the purpose and functionality of most functions.")
        rubricText5:Add("Comments are present, but are not used to explain the purpose or functionality of any functions.")
        rubricText5:Add("Comments are not present.")

        Array<text> rubricRows
        rubricRows:Add(AddTableHeaderTag(rubricHeader))
        rubricRows:Add(AddTableDataTag(rubricText1))
        rubricRows:Add(AddTableDataTag(rubricText2))
        rubricRows:Add(AddTableDataTag(rubricText3))
        rubricRows:Add(AddTableDataTag(rubricText4))
        rubricRows:Add(AddTableDataTag(rubricText5))

        bodyDiv:AddParagraph(AddTableTag(AddRowTag(rubricRows), "Rubric Table for studens functions."))

        bodyDiv:AddHeading("Wrap Up (5 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt: ","How could using parameters and return help you write programs collaboratively?")

        BoxTip closingGoal
        closingGoal:AddHeading("Discussion Goal", 3)
        closingGoal:AddParagraphBoldFront("Goal: ","This prompt should help review ideas that students saw in this project, in particuarly that parameters and return help break programs into chunks. It should also help them see that this approach could be used to collaboratively design programs. If teammates agree in advance what each function should do they can go off and write them separately before coming back together to make the entire app work.")
        bodyDiv:Add(closingGoal)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList lastRemarks
            lastRemarks:AddListItem("Parameters and return help us chunk programs into pieces. Each important piece can be made into its own function which can be written and tested separately from the others. If you and your partner agree in advance how to split up the way a program is written and are clear on what each function needs to do, you could develop a program just like this make project.")
        bodyDiv:Add(lastRemarks)

        bodyDiv:AddHeading("Assessment: Grading the Project", 2)

        bodyDiv:AddParagraphBoldFront("Rubric: ", "Use the rubric provided with the project to assess student projects.")


        bodyDiv:AddHeading("Standards Alignment", 2)
        UnorderedList list
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ","2-AP-14")
        AddListItemWithBoldAtFront(list, "CSP2021: ","CRD-2.F.7")
        bodyDiv:Add(list)


        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Make an app that uses functions with parameters and return."
    end

    action GetSummaryName returns text
        return "Code.Org Unit 7 Lesson 4: Parameters and Return Practice"
    end

    action GetName returns text
        return "Code.Org Unit 7 Lesson 4"
    end

    action GetShortDescription returns text
        return "Learn about parameters and return"
    end

    action GetLocation returns text
        return "lessons/code/ParametersReturnLibraries/Lesson4.html"
    end

end
