use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.BoxTip
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.TableData
use Libraries.Web.Page.WebList

class CodeOrgUnit7Lesson6 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Libraries Investigate")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Parameters, Return, and Libraries - Lesson 6: Libraries Investigate", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("In this lesson students work with partners to investigate two apps that use libraries as well as the code used to make a library. Through a series of guided discussions they learn how libraries help programmers simplify and reuse their code.")
        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddListItem("Identify the use of a library within a program")
        goalList:AddListItem("Explain the purpose of libraries as a way to simplify programs, allow for code reuse, and enable collaboration.")
        goalList:AddListItem("Test the functions in libraries in order to understand their behavior")
        bodyDiv:Add(goalList)

        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("Students get a chance to see how libraries are used in actual apps before they begin building libraries themselves in the subsequent project. The sample apps are written in a clean and simple manner, helping students understand the usefulness of well-documented libraries.")

        bodyDiv:AddHeading("Resources", 2)
        UnorderedList resources
        resources:AddListItemLink("CSP-Widgets repository", "https://github.com/qorf/CSP-Widgets")
        bodyDiv:Add(resources) 

        bodyDiv:AddHeading("Getting Started (5 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt: ", "Today we are going to learn how to use libraries to share code with one another. Usually you do this by writing functions with parameters and return values. Why do you think it's important to use parameters and return values when writing code for other people to use")
        bodyDiv:AddParagraphBoldFront("Discuss: ", "Have students share responses.")

        BoxTip startDiscussGoal
        startDiscussGoal:AddHeading("Discussion Goal", 3)
        startDiscussGoal:AddParagraph("Some points that might come up:")
        UnorderedList discussPoints
            discussPoints:AddListItem("Parameters and return values allow functions to run in predictable ways without impacting other parts of the app unexpectedly")
            discussPoints:AddListItem("Parameters and return values help communicate what the code is supposed to do.")
            discussPoints:AddListItem("Parameters and return values make functions more flexible so that they can be used in a variety of situations.")
        startDiscussGoal:Add(discussPoints)
        bodyDiv:Add(startDiscussGoal)

        bodyDiv:AddHeading("Activity (35 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Group: ","Place students in pairs.")
        bodyDiv:AddParagraphBoldFront("Do this: ", "Get Unit7 Lesson6_App1 from the CSP-Widget repository")
        bodyDiv:AddParagraphBoldFront("Do This: ","Students navigate to App 1 where they should run the app and try several different inputs.")
        bodyDiv:AddParagraphBoldFront("Discuss: ","With their partners, students look at the project code and discuss what happens when the button is selected. After a few minutes, pull the class back together and discuss as a whole.")
        BoxTip buttonDiscussion
        buttonDiscussion:AddHeading("Discussion Goal", 3)
        buttonDiscussion:AddParagraph("When the button is clicked, the screen is updated by calling several functions from a library which return text and images that is displayed.")
        bodyDiv:Add(buttonDiscussion)
        bodyDiv:AddParagraphBoldFront("Do This: ","Now students should open the library file and look specifically at each StateLibrary function. They should read the documentation for each function before discussing with a partner how these functions work.")
        bodyDiv:AddParagraphBoldFront("Do This: ","Students read the library code and discuss how the functions actually work. They should consider if they were accurate in their predictions before looking at the library code.")
        bodyDiv:AddParagraphBoldFront("Discuss: ","What are the benefits of hiding all of the code for filtering the dataset in a library? What information does the user need to know in order to use the library functions?")
        BoxTip benefitsDiscussion
        benefitsDiscussion:AddHeading("Discussion Goal", 3)
        benefitsDiscussion:AddParagraphBoldFront("Benefits: ","The project code is neat and organized.")
        benefitsDiscussion:AddParagraphBoldFront("Information: ","The end user does not have to know all the inner workings of the functions - they just need to know the documentation for the functions so they can call them correctly and understand what will be returned (if anything).")
        bodyDiv:Add(benefitsDiscussion)
        bodyDiv:AddParagraphBoldFront("Do this: ", "Get Unit7 Lesson6_App2 from the CSP-Widget repository")
        bodyDiv:AddParagraphBoldFront("Do This: ","Students navigate to App 2 where they run the Pigify app and try several inputs.")
        bodyDiv:AddParagraphBoldFront("Do This: ","Again, students look at the documentation for each function, and discuss how they work.")
        bodyDiv:AddParagraphBoldFront("Test the Functions: ","Now students practice testing the functions to understand how they work. Here are the steps:")
        WebList testList
            testList:AddListItem("Re-read the documentation for each library function")
            testList:AddListItem("Add a output statement to the end of the program and call a function. Put in a reasonable argument in the space for the parameter.")
            testList:AddListItem(1, "For example: <code>output stringsLibrary.FirstLetter("+dq+"pizza"+dq+")</code>")
            testList:AddListItem("Hit run to see the output.")
            testList:AddListItem("Now add <code>output</code> statements to test the rest of the functions. Is the output what you would expect? Try several different inputs.")
        bodyDiv:AddNestedTag(testList)
        bodyDiv:AddParagraphBoldFront("Prompt: ","Why should we test the functions in the library? What does this help us to know?")
        BoxTip testFuncPrompt
        testFuncPrompt:AddHeading("Discussion Goal", 3)
        testFuncPrompt:AddParagraphBoldFront("Goal: ", "Testing the functions allows the end user to understand the behavior of the function. It's helpful for debugging functions, in addition to looking at the code in the library.")
        testFuncPrompt:AddParagraph("For example: If I call a function whose documentation indicates that it will return the first letter of a string, and instead it returns the last number of a string, I know that there is a problem with the library function and not my project code.")
        bodyDiv:Add(testFuncPrompt)
        bodyDiv:AddParagraphBoldFront("Do This: ","Now students navigate back to the States App and use <code>output</code> to test all of the library functions there.")
        bodyDiv:AddParagraphBoldFront("Prompt: ","What makes a good library function? How can you make sure that the end users of your library have what they need in order to use your functions?")
        BoxTip goodFuncPrompt
        goodFuncPrompt:AddHeading("Discussion Goal", 3)
        goodFuncPrompt:AddParagraphBoldFront("Goal: ", "Hopefully through the process of testing, students will understand the importance of well-documented functions that do what they are expected to do!")
        goodFuncPrompt:AddParagraph("A good library function contains everything it needs within the function. Beware of global variables or references to element IDs that might not be present in the end user's projects")
        bodyDiv:Add(goodFuncPrompt)
        bodyDiv:AddParagraphBoldFront("Review: ","Up to this point, students have either created their own algorithms from scratch, or modified existing ones (usually in Investigate Lessons). Now they have another tool to use: combining existing algorithms to make new algorithms. Here, this is accomplished with a library.")
        bodyDiv:AddParagraphBoldFront("Prompt: ","What are the benefits of using existing algorithms instead of brand new algorithms?")
        
        BoxTip benefitsPrompt
        benefitsPrompt:AddHeading("Discussion Goal", 3)
        benefitsPrompt:AddParagraphBoldFront("Goal: ","The benefits of using existing algorithms as building blocks for constructing other algorithms include:")
        UnorderedList benefitList
            benefitList:AddListItem("reduced development time")
            benefitList:AddListItem("reduced testing")
            benefitList:AddListItem("simplification and identification of errors")
        benefitsPrompt:Add(benefitList)
        
        bodyDiv:AddParagraph("Examples of existing algorithms you may have seen:")
        UnorderedList algorithmList
            algorithmList:AddListItem("the maximum or minimum of 2 or more numbers")
            algorithmList:AddListItem("the sum or average of 2 or more numbers")
            algorithmList:AddListItem("an algorithm that determines if an integer can be evenly divided by another integer")
            algorithmList:AddListItem("a robot's path through a maze")
        bodyDiv:Add(algorithmList)
        bodyDiv:Add(break)
        
        benefitsPrompt:AddParagraph("We demonstrated the last two bullets in the exercise using output to test functions and isolate errors.")
        bodyDiv:Add(benefitsPrompt)
        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList activityRemarks
            activityRemarks:AddListItem("Now let's review Procedural Abstraction. In Lesson 2, we learned about Procedural Abstraction, where shared features of functions (also known as procedures) are extracted in order to generalize use. Procedural Abstraction encourages code reuse and manages complexity, because generalized functions can be used to accomplish many different tasks.")
            activityRemarks:AddListItem("Now let's extend that definition. Procedural Abstraction provides a name for a process and allows the procedure to be used only knowing what it does, and not necessarily how it does it.")
            activityRemarks:AddListItem("This is how our libraries work!")
            activityRemarks:AddListItem("There's a term for using libraries or other forms of organization in a program: Modularity - the subdivision of a computer program into separate subprograms. This is what we are doing when we organize functions into a library and then call them in another program.")
            activityRemarks:AddListItem("The end user of the library only needs to know how the functions work, which they can learn through the documentation. This means that the creator of the library can update the functions for any number of reasons, such as making the functions more efficient, without having to notify the end users, as long as the function documentation does not need to be changed. The end users can expect the library to work as intended.")
        bodyDiv:Add(activityRemarks)
        bodyDiv:AddParagraphBoldFront("Do This: ","Review the takeaways. These are focused on the practicalities of creating and using libraries.")

        bodyDiv:AddHeading("Wrap Up (5 mins)", 2)
        bodyDiv:AddHeading("Synthesis", 3)
        bodyDiv:AddParagraphBoldFront("Prompt: ","Based on what you saw today, add reasons why someone would argue for the following three statements")
        UnorderedList statementList
            statementList:AddListItem("Libraries help programmers collaborate")
            statementList:AddListItem("Libraries help programmers reuse code")
            statementList:AddListItem("Libraries help programmers writer simpler programs")
        bodyDiv:Add(statementList)
        bodyDiv:AddParagraphBoldFront("Discuss: ", "Have students discuss together before sharing with a class.")
        BoxTip closingGoal
        closingGoal:AddHeading("Discussion Goal", 3)
        closingGoal:AddParagraph("As you discuss focus conversation on the following points.")
        UnorderedList closingGoalList
            closingGoalList:AddListItem("Libraries help programmer collaborate because they can design code with the idea that other people will use them.")
            closingGoalList:AddListItem("Libraries help programmers reuse code because they can be imported into many different programs")
            closingGoalList:AddListItem("Libraries help programmers write simpler programs because library code can be used to handle many common (and sometimes complex) behavior and remove it from your core program.")
        closingGoal:Add(closingGoalList)
        bodyDiv:Add(closingGoal)
        bodyDiv:AddParagraphBoldFront("Journal: ","Students add to their journal the following word and definition: modularity. They may also want to update their definition for procedural abstraction based on earlier conversations and slides.")
        
        UnorderedList wrapUpList
        wrapUpList:AddListItem(AddItalicFront("Modularity: ", "the subdivision of a computer program into separate subprograms."))
        bodyDiv:Add(wrapUpList)

        bodyDiv:AddHeading("Assessment: Check For Understanding", 2)

        bodyDiv:AddParagraphBoldFront("Question: ", "Why is it important to use meaningful names for the functions in your library?")


        bodyDiv:AddHeading("Standards Alignment", 2)
        UnorderedList list
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ","2-AP-14, 2-AP-17, 3A-AP-18, 3B-AP-16, 3B-AP-23")
        AddListItemWithBoldAtFront(list, "CSP2021: ","AAP-2.M.1, AAP-2.M.2, AAP-2.M.3, AAP-3.B.1, AAP-3.B.2, AAP-3.B.3, AAP-3.B.4, AAP-3.B.5, AAP-3.B.6, AAP-3.B.7, AAP-3.D.2, AAP-3.D.3")
        bodyDiv:Add(list)


        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Investigate and modify sample apps that use libraries learn how libraries help programmers simplify and reuse their code."
    end

    action GetSummaryName returns text
        return "Code.Org Unit 7 Lesson 6: Libraries Investigate"
    end

    action GetName returns text
        return "Code.Org Unit 7 Lesson 6"
    end

    action GetShortDescription returns text
        return "Learn about libraries"
    end

    action GetLocation returns text
        return "lessons/code/ParametersReturnLibraries/Lesson6.html"
    end

end
