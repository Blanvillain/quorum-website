use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit7Lesson3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Parameters and Return Practice")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Parameters, Return, and Libraries - Lesson 3: Parameters and Return Practice", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Parameters, Return, and Libraries - Lesson 3: Parameters and Return Practice")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)

      
        section_intro:AddParagraph("Students practice writing programs with parameters and return values by creating and debugging functions that use them.")
        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Correctly set up a parameter in a function")
        goalList:AddListItem("Correctly set up a return value in a function")
        goalList:AddListItem("Write comments to explain the function purpose, parameters, and return values")
        section_intro:Add(goalList)

        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("This is students' opportunity to practice using parameters and return values in a variety of contexts. The progression of levels builds in complexity from students merely calling functions with parameters to designing functions and debugging complex programs that use parameters and return values. This lesson should build students familiarity with these concepts as they prepare for the Make project in the next lesson.")
    
        AddHeading(section_intro, "Resources", 3) 
        UnorderedList resources
        resources:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")
        resources:AddListItemLink("CSP-Widgets repository", "https://github.com/qorf/CSP-Widgets")
        section_intro:Add(resources)

                       Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)
        AddHeading(section_gettingStarted, "Quick Warm Up", 3)
        section_gettingStarted:AddParagraphBoldFront("Prompt: ", " What is one reason why parameters and return values are useful? What is one way you think programming with parameters and return values may make programming or debugging more challenging?")
        section_gettingStarted:AddParagraphBoldFront("Discuss: ", "Have students share responses with a neighbor before discussing with the whole class.")

       Division startDiscussGoal = AddDisscussionGoal(section_gettingStarted)

        startDiscussGoal:AddParagraphBoldFront("Goal: ", "Use this quick prompt to review what students should already have seen about parameters and return values while also prompting them to think about how they'll need to use those skills in today's lessons. You should use your remarks to review the fact that parameters and return help write neater programs, but they may be a little tricky at first to read and understand. That's why we practice!")
        startDiscussGoal:AddParagraph("Up to this point, students have only seen complete traversals - that is, traversals where every element of a list is accessed. Now that they've been introduced to return, students can build partial traversals where a list is only partially accessed. For example: A list could be traversed to find a specific element. Once that element is found, "+dq+"found element x"+dq+" is returned, and the traversal stops. While students don't actually need to build partial traversals themselves, they now should know how it theoretically could be created.")

        
        AddHeading(section_gettingStarted, "Remarks", 4)
        UnorderedList startRemarks
        startRemarks:AddClassAttribute("list-disc list-outside pl-8")
            startRemarks:AddListItem("Parameters and return values allow us to write code that is neater and works in a larger number of scenarios. We're going to have to practice reading, writing, and debugging code like this however, because it works a little a differently than the programs we've gotten used to writing. Let's dive in!")
        section_gettingStarted:Add(startRemarks)

                Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (35 minutes)", 2)
        AddHeading(section_activity, "Practice Time", 3)
      
        
        Division timeTeachTip = AddTeachingTip(section_gettingStarted)
    
        timeTeachTip:AddParagraph("<b>Providing Support:</b> Circulate around the room through the lesson encouraging students to use the strategies introduced at the beginning of the lesson. Students have a number of supports at their fingertips, so a big part of your role is helping build their independence in using those resources.")
 
        
        section_activity:AddParagraphBoldFront("Group: ", "It is recommended that students work in pairs for this lesson.")
        
        AddHeading(section_activity, "Remarks", 3)
        WebList activityRemarks
        activityRemarks:AddClassAttribute("list-disc list-outside pl-8")
            activityRemarks:AddListItem("Today you're mostly going to practice what we've learned about programming with parameters and return values. In general we want to use the debugging process we've practiced all year, but here's some specific things to look out for in today's lesson.")
            activityRemarks:AddListItem(0,"Use <code>output</code> to call functions with parameters with different values to see how they run")
        section_activity:AddNestedTag(activityRemarks)
        
        section_activity:AddParagraphBoldFront("Lesson 3 Apps 1-5: ","These Apps involve functions with parameters and return values, working in the console")
        UnorderedList lessonAppList1
        lessonAppList1:AddClassAttribute("list-disc list-outside pl-8")
            lessonAppList1:AddListItem("Lesson3_App1: Calling a function multiple times with a single parameter")
            lessonAppList1:AddListItem("Lesson3_App2: Students follow a pattern to choose a randomCompliment from a list that is concatenated with a name passed through a parameter")
            lessonAppList1:AddListItem("Lesson3_App3: This is the same as Lesseon3_App1, except now the functions use return values. Again, students follow a pattern given in another working function.")
            lessonAppList1:AddListItem("Lesson3_App4: Students write a function that returns the season a month is in. By this point, students should be noticing the type of commenting that is happening above each function. This format previews how students will need to write comments for libraries later on in the unit.")
            lessonAppList1:AddListItem("Lesson3_App5: This level traverses lists to find the longest and shortest words. Parameters and return values are used.")
        section_activity:Add(lessonAppList1)
        section_activity:AddParagraphBoldFront("Lesson 3 Apps 7-8: ","Students continue practicing, now working with apps")
        UnorderedList lessonAppList2
        lessonAppList2:AddClassAttribute("list-disc list-outside pl-8")
            lessonAppList2:AddListItem("Lesson3_App6: Students debug and comment an ordering app. Completing this level will require students to read programs that use functions with parameters and return carefully.")
            lessonAppList2:AddListItem("Lesson3_App7: We return to the compliment code, this time reworking it into an app. Again students write their own comments, this time including comments for a return value. Students also complete the <code>UpdateScreen</code> function, which calls both of the functions with parameters.")
        section_activity:Add(lessonAppList2)
        section_activity:AddParagraphBoldFront("Lesson3_App8: ", "Students do a quick practice with the MOD operator.")
        section_activity:AddParagraphBoldFront("Extension Opportunities: ", "")
        UnorderedList extensionList
        extensionList:AddClassAttribute("list-disc list-outside pl-8")
            extensionList:AddListItem("Lesson3_App7: Add more greeting and compliment options to the lists")
        section_activity:Add(extensionList)

        Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap Up (5 minutes)", 2)
        section_wrap:AddParagraphBoldFront("Prompt: ","What aspects of working with parameters and return values do you feel like clicked today? What do you still feel like you have trouble with?")
        section_wrap:AddParagraphBoldFront("Discuss: ","Have students share with one another before sharing with the whole class.")

        Division closingGoal = AddDisscussionGoal(section_wrap)
        closingGoal:AddParagraphBoldFront("Goal: ","Use this opportunity to address any lingering questions or misconceptions in the room. You can also use this as a source of discussion topics to kick off the following lesson. As you lead the discussion, call out the many resources students have access to help when they're getting stuck.")
        

        AddHeading(section_wrap, "Remarks", 3)
        UnorderedList lastRemarks
        lastRemarks:AddClassAttribute("list-disc list-outside pl-8")
            lastRemarks:AddListItem("Working with parameters and return values can be tricky. We will get more practice tomorrow by making an app that uses lists to store information.")
        section_wrap:Add(lastRemarks)

               Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Check for Understanding", 2)

            AddHeading(section_assessment, "For Students", 3)
        section_assessment:AddParagraph("Open a word doc or google doc and copy/paste the following question.")

        AddHeading(section_assessment, "Question", 3)
        section_assessment:AddParagraph("The procedure below will be called twice with two numbers provided as arguments to the parameter <code>myNumber</code>. Which of the following pair of numbers will <code>mystery</code> return the same value?")
        section_assessment:Add(preformatter:GeneratePreformattedCode(
"PROCEDURE mystery myNumber
final <- 0
IF myNumber > 100
    final <- 100
ELSE
    IF myNumber < 0
        final <- 0
    ELSE
        final <- myNumber
return final
"))


       Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ","2-AP-14")
        AddListItemWithBoldAtFront(list, "CSP2021: ","AAP-2.C.2, AAP-2.O.1, AAP-3.A.5, AAP-3.A.7, AAP-3.A.8, AAP-3.C.1, AAP-3.C.2")
        section_standards:Add(list)


        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Practice programming with parameters and return values through a set of programming puzzles."
    end

    action GetSummaryName returns text
        return "Code.Org Unit 7 Lesson 3: Parameters and Return Practice"
    end

    action GetName returns text
        return "Code.Org Unit 7 Lesson 3"
    end

    action GetShortDescription returns text
        return "Learn about parameters and return"
    end

    action GetLocation returns text
        return "lessons/code/ParametersReturnLibraries/Lesson3.html"
    end

    action GetLinkName returns text
        return "Parameters and Return Practice"
    end

    action GetSectionName returns text
        return "Parameters, Return, and Libraries"
    end   
end
