use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit3Lesson2 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 3 Lesson 2: Introduction to Interface Design")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Intro to App Design - Lesson 2: Introduction to Interface Design", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Intro to App Design - Lesson 2: Introduction to Interface Design")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)
     
        section_intro:AddParagraph("Students work through a progression of levels to build an understanding of how to layout an app. The final challenge has students setting up the screen of an app by attempting to copy an image of an app. ")

        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
            UnorderedList goalList
            goalList:AddClassAttribute("list-disc list-outside pl-8")
                goalList:AddListItem("Use meaningful names for element ids")
                goalList:AddListItem("Set up the User Interface of an app including buttons, text, and images")
        section_intro:Add(goalList)



        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("This lesson introduces students to the code used to build apps, as well as the different kinds of screen elements and properties at their disposal. This lesson not only builds up skills in designing a user interface but also sets students up to begin designing an app of their own in the following lesson.")

        AddHeading(section_intro, "Resources", 3)
        UnorderedList reso1
        reso1:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")
        reso1:AddListItemLink("Getting Started with CSP Widgets","https://quorumlanguage.com/lessons/code/CodeOrgWidgetTutorial.html")
        reso1:AddListItemLink("CSP-Widgets Repository","https://github.com/qorf/CSP-Widgets")
        section_intro:Add(reso1)

            Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)
        section_gettingStarted:AddParagraphBoldFront("Discuss:"," What is a common app that you use? Take a minute to sketch the User Interface of the main screen. Note how the user interacts with the app.")

        Division startingTip = AddTeachingTip(section_gettingStarted)
        startingTip:AddParagraph(" Students who are blind or visually impaired may not be able to sketch a user interface, but they can still engage with the core lesson. Emphasize the question of how users interact with the app. What kind of elements does the user interact with? How do they move between them? Have students describe or list the process of using the app.")


        section_gettingStarted:AddParagraphBoldFront("Do This:"," Compare your sketch with a partner and discuss common elements that both of your apps share.")

        Division startingGoal = AddDisscussionGoal(section_gettingStarted)
        startingGoal:AddParagraph(" This prompt is designed to bring out students' prior experiences working with apps. If students aren't sure what app to choose, you can even ask them to pick a website, such as ")
        Paragraph startingParagraph
        Link link = startingParagraph:AddLink("Code.org", "https://code.org/")
        link:SetClassAttribute("underline text-quorum-blue-150")
        startingParagraph:AddText(". This discussion can pull out the fact that most apps contain images, buttons, and text that help users find and interact with information and content.")
        startingGoal:Add(startingParagraph)

         AddHeading(section_gettingStarted, "Remarks", 3)
        UnorderedList startingRemarks
        startingRemarks:AddListItem("Yesterday we took a look at a few different apps and talked about input and output. We also discussed the User Interface. Today we are going to learn how to build a user interface ourselves.")
        section_gettingStarted:Add(startingRemarks)

        
        Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (30 minutes)", 2)
        AddHeading(section_activity, "Running the Challenges", 3)
        Paragraph challengeParagraph
        challengeParagraph:AddText("For today's activity, students will use a number of apps from the ")
        Link link1 = challengeParagraph:AddLink("CSP-Widgets Repository", "https://github.com/qorf/CSP-Widgets")
        link1:SetClassAttribute("underline text-quorum-blue-150")
        challengeParagraph:AddText(". Unlike the previous lesson, this time students will inspect and modify the code of the apps. Each app is a carefully scaffolded challenge that teaches a small portion of the overall tools that will be used later.")
        section_activity:Add(challengeParagraph)

        Paragraph challengeParagraph2
        challengeParagraph2:AddText("For full instructions on downloading and running the apps, including downloading the Quorum Studio environment, see the ")
        Link link2 = challengeParagraph2:AddLink("Getting Started with CSP Widgets", "https://quorumlanguage.com/lessons/code/CodeOrgWidgetTutorial.html")
        link2:SetClassAttribute("underline text-quorum-blue-150")
        challengeParagraph2:AddText(" help page.")
        section_activity:Add(challengeParagraph2)

         AddHeading(section_activity, "Challenge #1: Review an App", 3)
     
        section_activity:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson2_App1" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        section_activity:AddParagraphBoldFront("Challenge:"," This project is one of the apps from the last lesson. This time, we'll explore the code. Spend some time looking around and change some of the properties.")
        section_activity:AddParagraphBoldFront("Discuss:"," After the students have had some time to explore, pull the class back together to discuss their findings. What did they discover? Was there anything they found interesting or wanted to know more about?")

        Division challenge1Goals
        challenge1Goals:AddClassAttribute("cool-box")
        challenge1Goals:AddParagraphBoldFront("Discussion Goals:", " There's lots of code in the app, and students won't understand all of it yet. When discussing their observations, here's a few things they might notice:")
        UnorderedList discussionList
        discussionList:AddClassAttribute("list-disc list-outside pl-8")
        discussionList:AddListItem("The app is organized into pages, where different elements are put into different pages.")
        discussionList:AddListItem("Each element has different properties that can be changed depending on the type of element. For example, a label element supports text, icons need to be loaded from images, etc.")
        discussionList:AddListItem("Other properties are available on every element, like SetName or SetPixelX.")
        challenge1Goals:Add(discussionList)
        section_activity:Add(challenge1Goals)
        

        AddHeading(section_activity, "Challenge #2: Changing App Properties", 3)
     
        section_activity:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson2_App2" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        section_activity:AddParagraphBoldFront("Challenge:"," Read the comments (the grayed out text) in the code starting on line 17. Then follow the instructions to change some of the app's properties.")
       

        AddHeading(section_activity, "Challenge #3: Changing Colors", 3)
     
        section_activity:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson2_App3" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        section_activity:AddParagraphBoldFront("Challenge:"," Read the directions beginning on line 22 in the code. Then follow the instructions to change the colors of the components in the app.")


        AddHeading(section_activity, "Challenge #4: Using Custom Assets", 3)

        section_activity:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson2_App4" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        section_activity:AddParagraphBoldFront("Challenge:"," Read the instructions on line 7. Then, upload a custom image into the app by following the instructions on line 26, or upload a custom sound by following the instructions on line 48.")
      

        AddHeading(section_activity, "Challenge #5: Making and Positioning Elements", 3)

        section_activity:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson2_App5" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        section_activity:AddParagraphBoldFront("Challenge:"," Follow the instructions on line 39 to update the properties of an icon in the app. Then follow the instructions on line 64 to create a brand new icon and set its properties.")
    

        AddHeading(section_activity, "Challenge #6: Setting Useful Names and Descriptions", 3)
   
        section_activity:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson2_App6" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        section_activity:AddParagraphBoldFront("Challenge:"," Read the instructions on line 25. Then, change the name of each item in the app, and set meaningful descriptions on the icons.")
    

        AddHeading(section_activity, "Challenge #7: Putting it Together -- Recreate an App", 3)
       
        section_activity:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson2_App7" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")        
        section_activity:AddParagraphBoldFront("Challenge:"," Now that we've spent some time exploring how these apps work, it's time to build one from scratch. Read the instructions starting on line 33. Then, using the comments and everything you've learned so far, create an app that looks like this picture.")

        Image image = section_activity:AddImage("/media/lessons/csp/unit3/Unit3-2_Example_App.png", "A picture of an example app. It has a light blue background, and a dark blue banner at the top. There is a label on top of the banner which reads " + dq + "Practice Log" + dq + " in white font. There is a yellow music note icon to the left of the title and a yellow headphones icon to the right of it. In the center of the app there is a large dark blue rectangle. Beneath the rectangle there is a text box which reads " + dq + "Instrument" + dq + ", and below that there is a button labelled " + dq + "Add Record" + dq + ".")                      
        image:AddAttribute("data-zoom","")
        

        Division challengeTips = AddTeachingTip(section_activity)
        challengeTips:AddParagraphBoldFront("Looking Back:"," If students are having trouble putting together the code for this challenge, encourage them to reference the code in the previous challenges. Understanding how to copy and modify existing code is a useful tool for students and professionals alike!")
        challengeTips:AddParagraphBoldFront("Teaching Accessibly:"," For blind students, rather than using the picture to recreate the app, you can have them build off of the " + dq + "feature list" + dq + " on line 45 of the app template. Alternatively, you can have all of the students work from the feature list without seeing the picture -- students' apps will look different when they're done, which can make for an interesting point of discussion later.")


            Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap up (10 Minutes)", 2)
        section_wrap:AddParagraphBoldFront("Discuss:"," Have students answer the following:")
        UnorderedList wrapUpList
        wrapUpList:AddClassAttribute("list-disc list-outside pl-8")
        wrapUpList:AddListItem("What elements collect input?")
        wrapUpList:AddListItem("What elements display output?")
        wrapUpList:AddListItem("Do you think there are elements that can do both?")
        section_wrap:Add(wrapUpList)
  

             Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Check for Understanding", 2)

        AddHeading(section_assessment, "For Students", 3)
        section_assessment:AddParagraph("Open a word doc or google doc and copy/paste the following question.")

        AddHeading(section_assessment, "Question", 3)
        section_assessment:AddParagraph(" Why is it important for element IDs to have meaningful names?")

                Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "3A-AP-16")
        section_standards:Add(list)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Explore how a user interface is designed"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 3 Lesson 2 "
    end
    action GetName returns text
        return "Code.Org Unit 3 Lesson 2 (Introduction to Interface Design)"
    end
    action GetShortDescription returns text
        return "Learn about interface design"
    end
    action GetLocation returns text
        return "lessons/code/Algorithm-Programming/Lesson2.html"
    end

    action GetLinkName returns text
        return "Introduction to Interface Design"
    end

    action GetSectionName returns text
        return "Intro to App Design"
    end
end
