use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit4Lesson12 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 4 Lesson 12: Project - Decision Maker App Part 1")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Variables, Conditionals, and Functions - Lesson 12: Project- Decision Maker App Part 1", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Variables, Conditionals, and Functions - Lesson 12: Project- Decision Maker App Part 1")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)

   
            Paragraph overview
            overview:AddText("Using a Project Planning Guide, students work through the stages of creating an app from scratch. This is the first day of a three-day project. This lesson is devoted to the planning phase.")
            section_intro:Add(overview)


        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
        UnorderedList goals
        goals:AddClassAttribute("list-disc list-outside pl-8")  
        goals:AddListItem("See rubric for guidance in measuring student learning")
        section_intro:Add(goals)

        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("The Practice PT gives students the opportunity to design and program an app from scratch. Welcome to The Decision Maker App! Students demonstrate mastery of variables, conditionals, and functions by combining these elements into a useful program designed to solve the problem of making a decision. ")

        AddHeading(section_intro, "Resources", 3)
        UnorderedList resources
        resources:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")  
        resources:AddListItemLink("CSP-Widgets repository", "https://github.com/qorf/CSP-Widgets")
        section_intro:Add(resources)
        AddHeading(section_intro, "Supplemental Code.org material", 4)
        section_intro:AddParagraph("For the students")
        UnorderedList supplemental
        supplemental:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")  
        supplemental:AddListItemLink("CSP Unit 4 Practice PT Rubric", "https://docs.google.com/document/d/1mldgFK3CJbsWnTS8WYVDtEY1e7V4c0_V0sv63dYUkG8/edit?usp=sharing")
        supplemental:AddListItemLink("CSP Unit 4 Practice PT Planning Guide", "https://docs.google.com/document/d/1IojBJ1NQPDz4SajskdWq_6LSstg3_9EgpTAwQf63M5g/edit?usp=sharing")
        section_intro:Add(supplemental)

                Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)
        

        Division introTip = AddTeachingTip(section_gettingStarted)

        introTip:AddParagraphBoldFront("Short Intro:", " The Warm Up today is short and light. Students should spend the maximum amount of time working on their projects. ")


        AddHeading(section_gettingStarted, "Remarks", 3)
        UnorderedList openingRemark
        openingRemark:AddListItem("Have you ever been stuck trying to make a decision? What movie should we watch? Where should we go for lunch? How many chocolate bars can I buy? For the next three days you will build an app to help people make a decision. ")
        section_gettingStarted:Add(openingRemark)

                Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (40 minutes)", 2)
        
        section_activity:AddParagraphBoldFront("Explore Projects:", " Direct students to explore two apps from the CSP-Wideget Repository, " + AddTextBoldFront("Lesson12_ExampleApp1", " and ") + AddTextBoldFront("Lesson12_ExampleApp2."," These apps should spark ideas in what the students can create for this project."))
        
        Division promptGoal = AddDisscussionGoal(section_activity)
        promptGoal:AddParagraphBoldFront("Sample App #1: Where Should I Eat?", "")
        UnorderedList promptAnswers1
        promptAnswers1:AddClassAttribute("list-disc list-outside pl-8")  
        promptAnswers1:AddListItem("Recommends a restaurant to the user.")
        promptAnswers1:AddListItem("Inputs: text box for user name, drop down menu for restaurant type, up and down buttons to control the amount of dollars the user wants to spend.")
        promptAnswers1:AddListItem("Outputs: Text box at the bottom of the screen which displays the recommendation and sound that plays when the user interacts with the app. ")
        promptAnswers1:AddListItem("Variables: username, type of restaurant, dollar amount, output text")
        promptAnswers1:AddListItem("Conditional Logic: If the dollar amount within certain amounts, recommend different restaurants")
        promptAnswers1:AddListItem("Function: Update the screen every time the user changes an input. ")
        promptGoal:Add(promptAnswers1)
        promptGoal:AddParagraphBoldFront("Sample App #2: Activity Finder", "")


        UnorderedList promptAnswers2   
        promptAnswers2:AddClassAttribute("list-disc list-outside pl-8")       
        promptAnswers2:AddListItem("Recommends an activity to the user.")
        promptAnswers2:AddListItem("Inputs: text box for user name, drop down menu for time of day, drop down menu for activity level.")
        promptAnswers2:AddListItem("Outputs: Text box at the bottom of the screen which displays the recommendation and sound that plays when the user interacts with the app. ")
        promptAnswers2:AddListItem("Variables: username, time of day, activity level, output text")
        promptAnswers2:AddListItem("Conditional Logic: If the user selects certain times of day and activity levels, make targeted recommendations. ")
        promptAnswers2:AddListItem("Function: Update the screen every time the user changes an input. ")
        promptGoal:Add(promptAnswers2)


        section_activity:AddParagraphBoldFront("Discuss:", " For each app, discuss the following: ")
        UnorderedList exploreList
        exploreList:AddClassAttribute("list-disc list-outside pl-8")  
        exploreList:AddListItem("What does this app do?")
        exploreList:AddListItem("What are the inputs?")
        exploreList:AddListItem("What are the outputs?")
        exploreList:AddListItem("What variables do you think would be necessary for this app to work?")
        exploreList:AddListItem("What kinds of conditional logic do you think are necessary to make it work?")
        exploreList:AddListItem("How could a function be used in this app?")
        section_activity:Add(exploreList)

        section_activity:AddParagraphBoldFront("Distribute:", " Each student should have a copy of the Practice PT Decision Maker App Planning Guide. ")

        AddHeading(section_activity, "Remarks", 3)
        UnorderedList buildRemark
        buildRemark:AddClassAttribute("list-disc list-outside pl-8")  
        buildRemark:AddListItem("For this project you will create an app that helps a user make a decision. Your app must take in at least one number and one string from the user that will help to make the decision. All of this information will be used as part of the decision making process. In addition, your code must include at least one function used to update the screen. ")
        section_activity:Add(buildRemark)

        section_activity:AddParagraphBoldFront("Discuss:", " Review the rubric requirements in the following chart or in the supplemental Planning Guide. ")

        WebTable table = AddWebTable("Rubric for Practice PT Guide")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("Category: App Development Planning Guide")
        tableHeaderArray:Add("Convincing Evidence:Planning guide is fully completed ") 
        tableHeaderArray:Add("Approaching Evidence: Planning guide is mostly completed")
        tableHeaderArray:Add("Limited Evidence: Planning guide is somewhat complete")
        tableHeaderArray:Add("No Evidence: Planning guide is not complete")

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)    

        Array<text> rubricText1
        rubricText1:Add("Written Response 1:") 
        rubricText1:Add("Response accurately describes the purpose, functionality, and inputs/outputs of the app.")
        rubricText1:Add("Response describes the purpose and functionality, or the inputs/outputs of the app.")
        rubricText1:Add("Response partially describes the purpose and functionality, or the inputs/outputs of the app.")
        rubricText1:Add("Response does not describe the purpose, functionality, and inputs/outputs of the app.")
        tableBody:Add(AddTableBodyRow(rubricText1))

        Array<text> rubricText2
        rubricText2:Add("Written Response 2:") 
        rubricText2:Add("Response clearly describes an idea or recommendation provided by a partner / peer and how it improved the app.")
        rubricText2:Add("Response describes an idea or recommendation provided by a partner / peer and how it improved the app, but there is some confusion.") 
        rubricText2:Add("Response describes an idea or recommendation provided by a partner, but does not explain how it improved the app.")
        rubricText2:Add("Response does not describe an idea or recommendation provided by a partner.")
        tableBody:Add(AddTableBodyRow(rubricText2))

        Array<text> rubricText3
        rubricText3:Add("User Interface:") 
        rubricText3:Add("The User Interface is easy to navigate and  it's clear how the app is designed to be used. All text is readable.") 
        rubricText3:Add("The User Interface is mostly easy to navigate and it's clear how the app is designed to be used. All text is readable.") 
        rubricText3:Add("The User Interface is lacking in some readability or it's not clear how to use the app.")
        rubricText3:Add("The User Interface is difficult to navigate and it's not clear how the app is designed to be used. Text is unreadable.")
        tableBody:Add(AddTableBodyRow(rubricText3))

        Array<text> rubricText4
        rubricText4:Add("Code: Warnings & Error Messages")
        rubricText4:Add("No warnings or error messages appear when the app is run.")
        rubricText4:Add("A few warnings or error messages appear when the app is run.") 
        rubricText4:Add("Many warnings or error messages appear when the app is run.")
        rubricText4:Add("The app does not run at all.")
        tableBody:Add(AddTableBodyRow(rubricText4))

        Array<text> rubricText5
        rubricText5:Add("Code: Variables")
        rubricText5:Add("At least one  number and one String are each stored in a variable and used to make a decision.") 
        rubricText5:Add("One data type (numbers or Strings) is stored in at least two variables and used to make a decision.")
        rubricText5:Add("One variable stores either a number or String and is used to make a decision.")
        rubricText5:Add("No variables are set up or used to make a decision.")
        tableBody:Add(AddTableBodyRow(rubricText5))

        Array<text> rubricText6
        rubricText6:Add("Code: Function")
        rubricText6:Add("A function is used to update the screen. The function is called at least two times in the program.")
        rubricText6:Add("A function is used to update the screen. The function is called one time in the program.")
        rubricText6:Add("A function is created to update the screen but is not called in the program.") 
        rubricText6:Add("A function was not created to update the screen.")
        tableBody:Add(AddTableBodyRow(rubricText6))

        Array<text> rubricText7
        rubricText7:Add("Code: Conditional")
        rubricText7:Add("A conditional is used inside of the function to make a decision based on information stored in variables. The conditional correctly uses a logical operator (&&, ||, or !)  in the Boolean expression. The decision is displayed on the screen. There are at least three different responses that could be displayed.")
        rubricText7:Add("A conditional is used inside of the function to make a decision based on information stored in variables. The conditional does not correctly use a logical operator (&&, ||, or !)  in the Boolean expression. The decision is displayed on the screen. There are at least two different responses that could be displayed.") 
        rubricText7:Add("A conditional is created inside of the function, but does not use information stored in variables to make a decision or display it on the screen.") 
        rubricText7:Add("No conditionals are present in the function.")
        tableBody:Add(AddTableBodyRow(rubricText7))

        Array<text> rubricText8
        rubricText8:Add("Code: Comments")
        rubricText8:Add("The update screen function has a comment which clearly explains its purpose and functionality.") 
        rubricText8:Add("The update screen function has a comment which clearly explains its purpose or functionality.") 
        rubricText8:Add("A comment is present, but it does not clearly explain anything about the function.") 
        rubricText8:Add("No comments are present.")
        tableBody:Add(AddTableBodyRow(rubricText8))


         table:Add(tableBody)
        section_activity:Add(table)

        Division supportTip = AddTeachingTip(section_activity)
        supportTip:AddParagraphBoldFront("Supporting students in Practice PT Lessons", "")
        supportTip:AddParagraph("The teacher plays the role of a guide throughout the Practice PT lessons. In preparation, you may want to set aside some time to complete the project yourself to identify potential points of confusion for your classroom. ")
        supportTip:AddParagraph("In this first lesson, the classroom progresses together through steps 1-3, and then students work at the own pace for steps 4-6. Circulate the room and check in with students as needed to make sure instructions are clear and students understand expectations. ")
        supportTip:AddParagraph("What should you expect?")
        UnorderedList supportList
        supportList:AddClassAttribute("list-disc list-outside pl-8")  
        supportList:AddListItem("Students writing and sketching in the Planning Guide")
        supportList:AddListItem("Active discussion around project ideas")
        supportList:AddListItem("Students should only be in Quorum Studio if they have finished Steps 1-6 early and are ready to begin designing the interface for their app. If this is true, they can move on to the first level in Lesson 13.")
        supportTip:Add(supportList)


        section_activity:AddParagraphBoldFront("Display:", " Show the steps students will complete today in the Planning Guide:")
        OrderedList steps
        steps:AddClassAttribute("list-decimal list-outside pl-8")  
        steps:AddListItem(AddStrongTag("Brainstorm App Ideas:") + " Students come up with three distinct ideas.")
        steps:AddListItem(AddStrongTag("Choose One Idea:") + " Students should select one of their three ideas to turn into an app.")
        steps:AddListItem(AddStrongTag("Survey Your Classmates:") + " Students discuss with two classmates the decision their app will help the user make and decide what information is needed to make this decision. ")
        steps:AddListItem(AddStrongTag("Storing Information:") + " Variables needed for storing information are listed in this section.")
        steps:AddListItem(AddStrongTag("Flowchart:") + " Students create a flowchart, following the " + dq + "Can I adopt a cat?" + dq + " sample flowchart from the Conditionals Explore lesson. ")
        steps:AddListItem(AddStrongTag("Design User Interface:") + " There is space for students to design up to three screens. There are no screen requirements for the app, so students may use only one screen. ")
        section_activity:Add(steps)

                Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap Up (0 minutes)", 2)
        section_wrap:AddParagraph("No wrap up today. All time should be spent on the project.")


        Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)
        UnorderedList list 
        list:AddClassAttribute("list-disc list-outside pl-8")               
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "2-AP-10, 2-AP-11, 3A-AP-16, 3B-AP-14")   
        section_standards:Add(list)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end


    action GetMetaDescription returns text
        return "Explore sample apps and plan your project"
    end

    action GetSummaryName returns text
        return "CSP Unit 4 Lesson 12"
    end
    action GetName returns text
        return "CSP Unit 4 Lesson 12 Project - Decision Maker App Part 1"
    end
    action GetShortDescription returns text
        return "Unit Project Day 1"
    end
    action GetLocation returns text
        return "lessons/code/BigDataAndPrivacy/Lesson12.html"
    end

    action GetLinkName returns text
        return "Project - Decision Maker App Part 1"
    end

    action GetSectionName returns text
        return "Variables, Conditionals, and Functions"
    end 
end
