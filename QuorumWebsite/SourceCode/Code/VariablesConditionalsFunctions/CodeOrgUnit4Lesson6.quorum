use Libraries.Web.Page.all
use Libraries.Containers.Array
class CodeOrgUnit4Lesson6 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 4 Lesson 6: Conditionals Investigate")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
      Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Variables, Conditionals, and Functions - Lesson 6: Conditionals Investigate", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Variables, Conditionals, and Functions - Lesson 6: Conditionals Investigate")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)

 
        bodyDiv:AddParagraph("In this lesson students work with partners to investigate three versions of the " + dq + "Lemon Squeeze" + dq + " app to understand how boolean expressions and conditional statements allow programs to make decisions. In each guided investigation students first watch a short video on a concept, then use a working app to predict how new features work, then investigate the code to see how those features are implemented, and finally modify the code to add expanded features. To conclude the lesson, students review and discuss common programming patterns with conditionals.")



        bodyDiv:AddHeading("Goals",2)
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goals
        goals:AddListItem("Identify common programming patterns using boolean expressions and conditional statements")
        goals:AddListItem("Explain the purpose of those programming patterns with boolean expressions and conditional statements both in terms of how they work and what they accomplish")
        goals:AddListItem("Modify apps that make use of common programming patterns with boolean expressions and conditional statements to adjust their functionality")
        bodyDiv:Add(goals)



        bodyDiv:AddHeading("Purpose",2)
        bodyDiv:AddParagraph("After building a conceptual model for boolean expressions and conditional statements in the previous lesson, this lesson allows students to see how they are actually implemented in code. This lesson also introduces common programming patterns when using variables. Students will have some opportunities to modify working code in this lesson, but the most significant practice with conditional statements and boolean expressions will come in the following lesson.")


        bodyDiv:AddHeading("Resources", 2)

        UnorderedList resources
        resources:AddListItemLink("Introduction to Conditionals (Video, Part A)", "https://youtu.be/0oG3Wck2fRU")
        resources:AddListItemLink("Introduction to Conditionals (Video, Part B)", "https://youtu.be/ZIL_3YRD14s")
        resources:AddListItemLink("Introduction to Conditionals (Video, Part C)", "https://youtu.be/aFssCTE5hs8")
        resources:AddListItemLink("Introduction to Conditionals (Video, Part D)", "https://youtu.be/kyFdniI-ZZs")
        resources:AddListItemLink("CSP-Widgets Repository", "https://github.com/qorf/CSP-Widgets")
        bodyDiv:Add(resources)


        bodyDiv:AddHeading("Getting Started (5 mins)", 2)

        bodyDiv:AddParagraphBoldFront("Discuss:", " A water park will let a visitor on a ride if they are 48 or more inches tall OR they are 14 years old or older. Make a flowchart for this decision. Make sure to use comparison operators (" + AddCodeTag("<,>,=") + ", etc.) and logical operators (" + AddCodeTag("and,or,not") + ") when you write your Boolean expression.")

        BoxTip warmUpGoal
        warmUpGoal:AddHeading("Teaching Tip", 4)
        warmUpGoal:AddParagraphBoldFront("Optional Warmup Prompt:", " This prompt is optional and is helpful to further synthesize key points from the previous lesson. If you are able to quickly move to the main activity and believe your class does not need this revew consider skipping this prompt.")
        bodyDiv:Add(warmUpGoal)        

        bodyDiv:AddParagraphBoldFront("Discuss:", " Have partners share their responses at their tables. Then discuss answers briefly as a class.")

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        WebList introRemarks
        introRemarks:AddListItem("In everyday conversation it is common to switch between using the words " + dq + "when" + dq + " and " + dq + "if" + dq + ". Here's some examples of what this looks like:")
        introRemarks:AddListItem(0, dq + "When the user clicks the button..." + dq)
        introRemarks:AddListItem(0, dq + "If the user clicks the button..." + dq)
        introRemarks:AddListItem(0, dq + "When the user has more than 100 points..." + dq)
        introRemarks:AddListItem(0, dq + "If the user has more than 100 points..." + dq)
        introRemarks:AddListItem("Today we want to be careful about how we use these words. To make things simple, we're going to use the following rules:")
        introRemarks:AddListItem(1, dq + "when" + dq + ": Means there is an action that responds to user input, like " + AddCodeTag("ButtonActivated") + ". The app does something " + dq + "when" + dq + " the user clicks.")
        introRemarks:AddListItem(1, dq + "if" + dq + ": Means there is a conditional statement that decides what pieces of code to run. The app does something " + dq + "if" + dq + " a boolean expression evaluates to true.")
        introRemarks:AddListItem("We'll talk more about this later but for now keep an eye out for the difference between " + dq + "when" + dq + " and " + dq + "if" + dq + ".")
        bodyDiv:AddNestedTag(introRemarks)


        bodyDiv:AddHeading("Activity (35 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Group:", " Place students in pairs. One student per group should navigate to the lesson on Code Studio.")
        
        bodyDiv:AddHeading("Investigation #1: If Statements (15 mins)", 3)
        
        BoxTip investigationTip1
        investigationTip1:AddHeading("Teaching Tip",4)
        investigationTip1:AddParagraphBoldFront("Running the First Investigation:", " This first investigation is supposed to get students moving around the room while also motivating them to carefully read a new program. As you circulate the room encourage them to read carefully, ask good questions, and be comfortable asking where they don't understand something.")
        bodyDiv:Add(investigationTip1)

        Paragraph videoA
        videoA:AddText(AddStrongTag("Display:") + " As a class, watch ")
        videoA:AddLink("Introduction to Conditionals (Video, Part A)", "https://youtu.be/0oG3Wck2fRU")
        videoA:AddText(".")
        bodyDiv:Add(videoA)

        BoxTip videoTip
        videoTip:AddHeading("Teaching Tip", 4)
        videoTip:AddParagraphBoldFront("Show the Video at the Front:", " In order to better keep the group together we recommend you show the videos at the front of the room.")
        videoTip:AddParagraphBoldFront("Reinforce When vs. If:", " As you make your way through these examples model using " + dq + "when" + dq + " and " + dq + "if" + dq + " as described in the warm up. For example, " + dq + "when" + dq + " the buttons are clicked the app is deciding " + dq + "if" + dq + " the temperature can change.")
        bodyDiv:Add(videoTip)

        bodyDiv:AddParagraphBoldFront("Open a Project:", " Direct students to open " + AddTextBoldFront("Lesson6_App1","."))
        bodyDiv:AddParagraphBoldFront("Activity - Lemon Squeeze App (Part 1):", " This code investigation includes a number of steps to help students get familiar with a new app.")
        UnorderedList appList1
        appList1:AddListItem("Form Pairs: Place students in pairs")
        appList1:AddListItem("Play the Game: Let students play the game for a couple minutes")
        appList1:AddListItem("Assign Code Sections: Count off pairs by three and assign them to one of the three code sections.")
        appList1:AddListItem("Read Code: Groups should carefully read the code for their section making sure they understand how it works. Give them 3 minutes to do so.")
        appList1:AddListItem("Explain Your Section: Have groups find members of the other two sections and carefully explain how their section works. Give each group 1-2 minutes to do so.")
        appList1:AddListItem("Class Discussion: Ask a few members of each section to quickly share out how their section works. Display the code at the front so you can talk through it together.")
        appList1:AddListItem("Modify: Have groups return to their original seats. Give them a couple minutes to work on the modify the app so that the game ends once a user has 0 lives remaining. ")
        bodyDiv:Add(appList1)
        bodyDiv:Add(break)

        bodyDiv:AddHeading("Investigation #2: If-Else Statements (10 mins)", 3)
        Paragraph videoB
        videoB:AddText(AddStrongTag("Display:") + " As a class, watch ")
        videoB:AddLink("Introduction to Conditionals (Video, Part B)", "https://youtu.be/ZIL_3YRD14s")
        videoB:AddText(".")
        bodyDiv:Add(videoB)

        Paragraph videoC
        videoC:AddText(AddStrongTag("Display:") + " As a class, watch ")
        videoC:AddLink("Introduction to Conditionals (Video, Part C)", "https://youtu.be/aFssCTE5hs8")
        videoC:AddText(".")
        bodyDiv:Add(videoC)

        bodyDiv:AddParagraphBoldFront("Open a Project:", " Direct students to open " + AddTextBoldFront("Lesson6_App2","."))
        bodyDiv:AddParagraphBoldFront("Activity - Lemon Squeeze App (Part 2):", " This program is an updated version of the Lemon Squeeze app. This time students should continue to work in partners but do not need to work with other groups. They will need to:")
        UnorderedList appList2
        appList2:AddListItem("Play the Game: Have students play the game")
        appList2:AddListItem("Discuss Changes: Talk through how the game plays differently now")
        appList2:AddListItem("Find the " + AddCodeTag("if-elseif") + " command: Have students find the command")
        appList2:AddListItem("Draw a flowchart: Students should draw a flow chart for the if-elseif command in their journals")
        appList2:AddListItem("Modify the code: Modify the program to make the lemon even smaller when the player has more than 15 points.")
        bodyDiv:Add(appList2)
        bodyDiv:Add(break)

        BoxTip investigationTip2
        investigationTip2:AddHeading("Teaching Tip", 4)
        investigationTip2:AddParagraphBoldFront("Running the Second Investigation:", " This second investigation remains focused on reading code, but students are more responsible than last time for showing their work. Students will need to create a flowchart for the new if-elseif statement and make more significant modfications to the code. Continue to emphasize open discussion and collaboration between partners.")
        bodyDiv:Add(investigationTip2)

        bodyDiv:AddHeading("Investigation #3: Logical Operators AND OR (10 mins)", 3)
        Paragraph videoD
        videoD:AddText(AddStrongTag("Display:") + " As a class, watch ")
        videoD:AddLink("Introduction to Conditionals (Video, Part D)", "https://youtu.be/kyFdniI-ZZs")
        videoD:AddText(".")
        bodyDiv:Add(videoD)

        bodyDiv:AddParagraphBoldFront("Open a Project:", " Direct students to open " + AddTextBoldFront("Lesson6_App3","."))
        bodyDiv:AddParagraphBoldFront("Activity - Lemon Squeeze App (Part 3):", " This program is a final version of the Lemon Squeeze app. Again students should work with partners.")
        
        BoxTip investigationTip3
        investigationTip3:AddHeading("Teaching Tip", 4)
        investigationTip3:AddParagraphBoldFront("Running the Third Investigation:", " In this final investigation students are primarily working independently to design their flowchart and modify the code. While you should quickly have students share out what they noticed about how the app changed, spend most of your time circulating answering questions students have as they modify the programs or draw their flowcharts.")
        bodyDiv:Add(investigationTip3)

        UnorderedList appList3
        appList3:AddListItem(AddTextBoldFront("Play the Game:"," Have students play the game"))
        appList3:AddListItem(AddTextBoldFront("Discuss Changes:"," Talk through how the game plays differently now"))
        appList3:AddListItem(AddTextBoldFront("Find the " + AddCodeTag("if-elseif") + " command:"," Have students find the if-else-if command that was added"))
        appList3:AddListItem(AddTextBoldFront("Draw a Flowchart:"," Students should draw a flowchart of this new if-elseif command"))
        appList3:AddListItem(AddTextBoldFront("Modify the code:"," Modify the program to add a new username and password. Students will have to modify the code as well as the user interface."))
        bodyDiv:Add(appList3)
        bodyDiv:Add(break)


        bodyDiv:AddHeading("Wrap Up (5 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Discuss:", " What is the difference between an if-statement, an if-else statement, and an if-elseif statement? How are they similar?")

        BoxTip promptGoal
        promptGoal:AddParagraphBoldFront("Discussion Goal:", " Some key points to call out in this discussion.")
        UnorderedList promptList
        promptList:AddListItem("These statements are more the same than different. They all use boolean expressions to decide whether to run certain pieces of code.")
        promptList:AddListItem("if-statements check if one boolean expression is true. If it is, a piece of code is run. Otherwise the code runs as normally.")
        promptList:AddListItem("if-else statements add the functionality that if the condition is false it can still run some code before returning to running the program as normal")
        promptList:AddListItem("if-elseif statements can check more than one boolean expression. They will only run the code for the first boolean expression that evaluates to true.")
        promptGoal:Add(promptList)
        bodyDiv:Add(promptGoal)

        bodyDiv:AddParagraphBoldFront("Review if-elseif:", " Review how to check multiple conditions by discussing the examples and documentation below.")
        bodyDiv:AddHeading("Checking Multiple Conditions with if-elseif", 3)
        PreformattedText example1
        example1:AddText("<code>if temperature > 100
    output " + dq + "It's dangerously hot" + dq + "
elseif temperature > 90
    output " + dq + "It's very hot" + dq + "
elseif temperature > 80
    output " + dq + "It's hot" + dq + "
elseif temperature > 70
    output " + dq + "It's warm" + dq + "
else
    output " + dq + "It's cool" + dq + "
end</code>")
        bodyDiv:Add(example1)

        bodyDiv:AddHeading("How does it work?", 4)
        bodyDiv:AddParagraph("The " + AddCodeTag("if-elseif") + " command lets you check multiple boolean conditions. The computer will check conditions in the order they are written until one of the boolean expressions evaluates to true. The code associated with that boolean expression will be run, but all others will be skipped. If none of the expressions evaluates to true then the code inside the <code>else</code> command will be run.")
        bodyDiv:AddHeading("Most Specific Cases First", 4)
        bodyDiv:AddParagraph("When writing an if-else-if statement you want to put the most specific cases first. In the temperature example above you want to check for temperatures over 100 degrees first. Afterwards the code checks for temperatures above 90 degrees, but because of the order the code is written you know that none of temperatures you'll find there are above 100 degrees. After all you would have caught them in the previous if-statement. This means you can be confident any temperatures you catch there will be between 90 and 100 degrees. As you continue through the if-else-if statement you use the same logic to check for different ranges of temperature.")
        bodyDiv:AddHeading("A Broken Example: Most Specific Cases Last", 4)
        bodyDiv:AddParagraph("This is a broken example that shows what happens if you start checking for temperatures in reverse order, most specific cases last.")
        
        PreformattedText example2
        example2:AddText("<code>if temperature > 60
    output " + dq + "It's cool" + dq + "
elseif temperature > 70
    output " + dq + "It's warm" + dq + "
elseif temperature > 80
    output " + dq + "It's hot" + dq + "
elseif temperature > 90
    output " + dq + "It's very hot" + dq + "
else
    output " + dq + "It's dangerously hot" + dq + "
end</code>")
        bodyDiv:Add(example2)

        bodyDiv:AddParagraph("Think through what would happen when this code runs for the temperature 82 degrees. You would want the output to say " + dq + "It's hot" + dq + ". If you look at the first boolean expression, however, you'll notice that 82 is higher than 60 degrees, making that boolean expression evaluate to true. As a result the code will output " + dq + "It's cool" + dq + ". This is because the first expression is not actually the most specific.")




        bodyDiv:AddHeading("Assessment: Check for Understanding",2)

        bodyDiv:AddParagraphBoldFront("For Students:"," Open a word doc or google doc and copy/paste the following question.")

        bodyDiv:AddParagraphBoldFront("Question:", " When creating an if-elseif statement you should always make your first condition the most specific. Write a short paragraph responding to the questions below.")
        UnorderedList questions
        questions:AddListItem("What does it mean to put the most specific case first?")
        questions:AddListItem("Why is it important to put the most specific case first? What types of errors does it help avoid?")
        bodyDiv:Add(questions)


        bodyDiv:AddHeading("Standards Alignment", 2)
            UnorderedList list                
            AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "2-AP-10, 2-AP-12, 3B-AP-23")
            AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.H.1, AAP-2.I.1")
            bodyDiv:Add(list)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end


    action GetMetaDescription returns text
        return "Investigate conditionals in apps"
    end

    action GetSummaryName returns text
        return "CSP Unit 4 Lesson 6"
    end
    action GetName returns text
        return "CSP Unit 4 Lesson 6 Conditionals Investigate"
    end
    action GetShortDescription returns text
        return "Investigate the use of branching conditionals in apps"
    end
    action GetLocation returns text
        return "lessons/code/BigDataAndPrivacy/Lesson6.html"
    end


        action GetLinkName returns text
        return "Conditionals Investigate"
    end

    action GetSectionName returns text
        return "Variables, Conditionals, and Functions"
    end 
end