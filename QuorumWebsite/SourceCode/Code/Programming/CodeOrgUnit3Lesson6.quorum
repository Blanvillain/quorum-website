use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame

class CodeOrgUnit3Lesson6 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 3 Lesson 6: Intro to Programming")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Intro to App Design - Lesson 6: Intro to Programming", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")


        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("Students use and modify a series of simple apps to get familiar with a small set of programming commands. They observe the way the code and compare programs that run all at once to those that respond to user actions like buttons selections. At the end of the lesson students discuss what they observed and are introduced to some key vocabulary for describing the running of programs.")


        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
            UnorderedList goalList
                goalList:AddListItem("Define a program as a sequence of commands that are executed or run by a computer")
                goalList:AddListItem("Explain the differences between how sequential and event-driven programs execute")
                goalList:AddListItem("Define comments as notes or documentation into a program that do not affect how the program executes")
        bodyDiv:Add(goalList)


        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("This lesson is written in an Investigate style, a common format of lesson that will be used in the remainder of the programming units. In this kind of lesson students are encouraged to investigate working code and make simple modifications to understand how it works. ")
        bodyDiv:AddParagraph("This lesson introduces a number of concepts and vocabulary around what programs are and how they run that will need to be reinforced in future lessons. ")


        bodyDiv:AddHeading("Getting Started (0 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList openingRemarks
        openingRemarks:AddListItem("Yesterday we learned that we need to create a new kind of language, a programming language, in order to clearly communicate instructions. Today we're going to take a deeper look at what programming looks like, and we'll see different ways we can use these tools to communicate our instructions to a computer.")
        bodyDiv:Add(openingRemarks)

        bodyDiv:Add(break)
        Division openingTip
        openingTip:AddClassAttribute("cool-box")
        openingTip:AddHeading("Teaching Tips", 4)
        openingTip:AddParagraphBoldFront("Get to the Activity:"," There's a lot to do in this lesson. Get to the main activity as quickly as you can.")
        openingTip:AddParagraphBoldFront("Prompt Ideas:"," If you need a prompt for when students come in consider asking them to list 2-3 differences between a natural language and programming language and why those differences need to exist.")
        bodyDiv:Add(openingTip)
        bodyDiv:Add(break)

        bodyDiv:AddHeading("Activity (30 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Group:"," Place students in pairs. One student per group should open the projects as they're needed for today's lesson, beginning with " + dq + "Lesson6_App1" + dq + ".")
        
        Division displayTips
        displayTips:AddClassAttribute("cool-box")
        displayTips:AddHeading("Teaching Tip", 4)
        displayTips:AddParagraphBoldFront("Prepping for this lesson:"," The best way to prepare for this lesson is to go through the experience yourself. Check out each of the Lesson6 apps to get a sense for how they work. Then actually try to answer all the questions for each app.")
        displayTips:AddParagraphBoldFront("Show code at the front:"," If your room allows it, display the code at the front of the room. When students mentions specific lines of code actually scroll to that line and read through it together.")
        displayTips:AddParagraphBoldFront("Discuss specific lines of code:"," As you run discussions, model talking about programs by specifically calling out lines of code, as in " + dq + "I can see that when the output code on line 2 runs, it produces a message in the console..." + dq)
        displayTips:AddParagraphBoldFront("Save modifications for the end:"," This lesson can be tight on time. Rather than have students modify the code all at once, you can save modifications for the end of the Code Investigation and have students pick a single app they wish to modify.")
        displayTips:AddParagraphBoldFront("OK to Break Things:"," When using the widgets in earlier units it's not really possible to " + dq + "break things" + dq + ". That's a little different than how things work here where it is possible to write code that may not run at all. 
                                    Encourage students that this is normal programming practice. It maybe a good idea to have students save a backup version or use some kind of version control.")
                
        bodyDiv:AddParagraphBoldFront("Display:"," If possible in your room, display the projects at the front of the class.")

        Paragraph tutorialLink
        tutorialLink:AddText(AddTextBoldFront("Accessing the Projects:"," Just like earlier lessons, the apps for this lesson are available via the "))
        tutorialLink:AddLink("CSP-Widgets Repository", "https://github.com/qorf/CSP-Widgets")
        tutorialLink:AddText(". If you want a refresher on downloading and running the projects, check out the ")
        tutorialLink:AddLink("Getting Started with CSP Widgets", "https://quorumlanguage.com/lessons/code/CodeOrgWidgetTutorial.html")
        tutorialLink:AddText(" help page.")
        bodyDiv:Add(tutorialLink)
        bodyDiv:Add(displayTips)
        bodyDiv:Add(break)

        Division widgetTip
        widgetTip:AddClassAttribute("cool-box")
        widgetTip:AddHeading("CSP Widget Guide", 4)
        widgetTip:AddParagraphBoldFront("","Most activities using the CSP Widgets will require students to modify parts of the code. Navigate to the //START HERE comment in the code to find where to get started with the lesson. If a student needs to add code, they should do it after the //YOUR CODE GOES HERE comment in the code.")
        bodyDiv:Add(widgetTip)
        bodyDiv:Add(break)

        bodyDiv:AddHeading("App #1", 3)
        bodyDiv:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson6_App1" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        bodyDiv:AddParagraphBoldFront("Activity:"," In their groups, students should do these tasks. Circulate the room making sure that pairs are actually discussing the prompt and are collaborating to modify the program. Once it seems all groups have had a chance to do this bring the class together.")
        OrderedList tasks1
        tasks1:AddListItem(AddTextBoldFront("Run:"," Run the program to see what it does."))
        tasks1:AddListItem(AddTextBoldFront("Discuss:"," Why do you think some of the information is in quotes and some is not?"))
        tasks1:AddListItem(AddTextBoldFront("Modify:"," Add two lines of code, one that displays a string and one that displays a number."))
        bodyDiv:Add(tasks1)

        bodyDiv:AddParagraphBoldFront("Discuss:"," Have students share the results of their discussions with the class. You do not need to use formal vocabulary yet, but make sure all students are seeing the same things.")

        bodyDiv:Add(break)
        bodyDiv:AddHeading("App #2", 3)
        bodyDiv:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson6_App2" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        bodyDiv:AddParagraphBoldFront("Activity:"," Students should do these tasks in the same way as last time. Once students have completed all three prompts bring the class together for a discussion.")
        OrderedList tasks2
        tasks2:AddListItem(AddTextBoldFront("Run:"," Run this program to see how it works."))
        tasks2:AddListItem(AddTextBoldFront("Discuss:"," With a neighbor discuss the differences between <code>SetScreenSize</code> and <code>AddPage</code>. Be as specific as possible."))
        tasks2:AddListItem(AddTextBoldFront("Modify:"," Add one <code>output</code> command and one button property changing command to this program. (The property changing command can be one of the commands already used in this program or a command that students learned while designing their project apps.)"))
        bodyDiv:Add(tasks2)

        bodyDiv:AddParagraphBoldFront("Discuss:"," Have students share the results of their discussions with the class. You do not need to use formal vocabulary yet, but make sure all students are seeing the same things.")
      
        bodyDiv:Add(break)
        bodyDiv:AddHeading("App #3", 3)
        bodyDiv:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson6_App3" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        bodyDiv:AddParagraphBoldFront("Activity:"," Have students complete these tasks, then bring the class together after a few minutes for another discussion.")
        OrderedList tasks3
        tasks3:AddListItem(AddTextBoldFront("Run:"," Run the program to see how it works. Make sure you select the button on the screen."))
        tasks3:AddListItem(AddTextBoldFront("Discuss:"," How does the <code>ButtonActivated</code> section of code work? Be as specific as possible."))
        tasks3:AddListItem(AddTextBoldFront("Discuss:"," How do commands inside <code>ButtonActivated</code> run differently from commands in <code>Start</code>?"))
        tasks3:AddListItem(AddTextBoldFront("Modify:"," Add one command inside <code>Start</code> and one command inside <code>ButtonActivated</code>."))
        bodyDiv:Add(tasks3)

        bodyDiv:AddParagraphBoldFront("Discuss:"," Have students share the results of their discussions with the class. You do not need to use formal vocabulary yet, but make sure all students are seeing the same things.")

        bodyDiv:Add(break)
        bodyDiv:AddHeading("App #4", 3)
        bodyDiv:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson6_App4" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        bodyDiv:AddParagraphBoldFront("Activity:"," Have students complete these tasks, and then bring the class together after a few minutes for a discussion.")
        OrderedList tasks4
        tasks4:AddListItem(AddTextBoldFront("Run:"," Run this program to see how it works. Make sure you select both buttons."))
        tasks4:AddListItem(AddTextBoldFront("Discuss:"," How does the <code>PlaySound</code> command work?"))
        tasks4:AddListItem(AddTextBoldFront("Discuss:"," How do lines that start with <code>//</code> run differently from the others"))
        tasks4:AddListItem(AddTextBoldFront("Discuss:"," What's the difference between lines that start with <code>//</code> and lines that are between <code>/*</code> and <code>*/</code>?"))
        tasks4:AddListItem(AddTextBoldFront("Modify:"," Add code so the dog button makes sound too."))
        tasks4:AddListItem(AddTextBoldFront("Modify:"," Change the messages when each button is selected."))
        bodyDiv:Add(tasks4)

        bodyDiv:AddParagraphBoldFront("Discuss:","Have students share the results of their discussions with the class. You do not need to use formal vocabulary yet, but make sure all students are seeing the same things.")

        bodyDiv:Add(break)
        bodyDiv:AddHeading("App #5", 3)
        bodyDiv:AddParagraphBoldFront("Open a Project:"," Have students open the <b>" + dq + "Lesson6_App5" + dq + "</b> project. In the SourceCode folder, students should open " + dq + "Main.quorum" + dq + ".")
        bodyDiv:AddParagraphBoldFront("Activity:"," Have students complete these tasks, and then bring the class together after a few minutes for a discussion.")
        OrderedList tasks5
        tasks5:AddListItem(AddTextBoldFront("Run:"," Run this program to see how it works."))
        tasks5:AddListItem(AddTextBoldFront("Discuss:"," How do you think the <code>RandomNumber</code> command works? Each time <code>RandomNumber</code> runs, there's a possibility of a different result!"))
        tasks5:AddListItem(AddTextBoldFront("Discuss:"," Why do the birds move even if they're not selected? Are there other options?"))
        tasks5:AddListItem(AddTextBoldFront("Discuss:"," What happens when you press the space bar? Why does it happen?"))
        tasks5:AddListItem(AddTextBoldFront("Modify:"," Make the birds move around the entire screen, not just the top left corner."))
        tasks5:AddListItem(AddTextBoldFront("Modify:"," Experiment with the other event actions besides <code>MousedOver</code> and <code>KeyPressed</code>. Which ones still make the game work?"))
        bodyDiv:Add(tasks5)

        bodyDiv:AddParagraphBoldFront("Discuss:"," Have students share the results of their discussions with the class. You do not need to use formal vocabulary yet, but make sure all students are seeing the same things.")

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Wrap Up (15 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Discuss:"," Think about your experiences today and in the previous lesson. How is a programming language different from natural language?")
        
        Division wrapUpGoal
        wrapUpGoal:AddClassAttribute("cool-box")
        wrapUpGoal:AddParagraphBoldFront("Discussion Goal:"," Make this a quick discussion to help connect the previous lesson to this one. Help bring out some of the following points.")
        UnorderedList wrapUpList
        wrapUpList:AddListItem("Programming languages are much more precise than natural language")
        wrapUpList:AddListItem("Programming languages have very strict rules")
        wrapUpList:AddListItem("Programming languages may feel a little awkward at first.")
        wrapUpGoal:Add(wrapUpList)
        bodyDiv:Add(wrapUpGoal)
        bodyDiv:Add(break)

        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList closingRemarks1
        closingRemarks1:AddListItem("Awesome job! Today was our first chance to really explore what programming is like. So far we've only learned a few commands but we've already seen they'll let us make a wide variety of types of programs. We're going to get a lot more time to practice using them, but before we do let's get some vocabulary in your journal to make sure we're using the same words to talk about what we saw today.")
        bodyDiv:Add(closingRemarks1)

        bodyDiv:AddParagraphBoldFront("Journal:"," Go through each of these vocabulary words and give students a chance to record each piece of information:")
        UnorderedList vocabulary
        vocabulary:AddListItem(AddItalicFront("Program Statement:"," A command or instruction. Sometimes also referred to as a code statement."))
        vocabulary:AddListItem(AddItalicFront("Program:"," A collection of program statements. Programs run (or " + dq + "execute" + dq + ") one command at a time."))
        vocabulary:AddListItem(AddItalicFront("Sequential Programming:"," A way for programs to run where statements run in order, from top to bottom. There is no user interaction and the code runs the same way every time."))
        vocabulary:AddListItem(AddItalicFront("Event Driven Programming:"," Another way for program to run where some statements run when triggered by an event, like a mouse click or a key press. Programs run differently each time depending on user interactions."))
        bodyDiv:Add(vocabulary)
        bodyDiv:Add(break)

        Division vocabTip
        vocabTip:AddClassAttribute("cool-box")
        vocabTip:AddHeading("Teaching Tip", 4)
        vocabTip:AddParagraphBoldFront("Reinforcing Vocabulary:"," A lot of the vocabulary introduced here is taken straight from the AP framework. The images are designed to help connect the definitions to the experiences they had in this lesson. Help students make these connections by not only writing down definitions but talking through how it's connected to what they saw.")
        bodyDiv:Add(vocabTip)

        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList closingRemarks2
        closingRemarks2:AddListItem("Great job today! You've learned a lot so far about programs. It's important to remember that programs need to work for a variety of inputs and outputs. That's what makes programming interactive apps so fun! Today, you also learned how to describe the behavior of a program, or how the program works when it's run and how the user interacts with it. ")
        closingRemarks2:AddListItem("When we talk about how programs run, we can describe both what the program does and specifically how the program statements accomplish this goal. ")
        closingRemarks2:AddListItem("We're going to keep practicing using these words and going forward you're going to get more chance to practice programming. Start thinking about how you might want to use what you learned today in your project.")
        bodyDiv:Add(closingRemarks2)

        bodyDiv:AddHeading("Assessment: Check for Understanding", 2)
        bodyDiv:AddParagraphBoldFront("Question:"," What is the difference between a sequential program and an event-driven program?")


        bodyDiv:AddHeading("Standards Alignment", 2)
            UnorderedList list
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "3A-AP-16")
                AddListItemWithBoldAtFront(list, "CSP 2021: ", "AAP-2.B.2, AAP-2.B.6")
                AddListItemWithBoldAtFront(list, "CSP 2021: ", "AAP-3.E.2")
                AddListItemWithBoldAtFront(list, "CSP 2021: ", "CRD-2.B.1, CRD-2.B.3, CRD-2.B.4, CRD-2.B.5")
                AddListItemWithBoldAtFront(list, "CSP 2021: ", "CRD-2.C.2, CRD-2.C.3, CRD-2.C.5")
        bodyDiv:Add(list)

        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn to write actions and about top-down design in the Quorum Programming Language"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 3 Lesson 6 (Actions and Top-Down Design)"
    end
    action GetName returns text
        return "Code.Org Unit 3 Lesson 6"
    end
    action GetShortDescription returns text
        return "Learn actions and top-down design"
    end
    action GetLocation returns text
        return "lessons/code/Algorithm-Programming/Lesson6.html"
    end

end
