use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.Link
use Libraries.Web.Page.BoxTip

class CodeOrgUnit5Lesson1 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 5 Lesson 1: Lists Explore")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Lists, Loops, and Traversals - Lesson 1: Lists Explore", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("Students will learn the ways that lists are created, accessed, and changed through a teacher-guided activity using plastic baggies and pieces of paper. The lesson begins with a brief reflection on the value of lists. Students then complete the main activity which introduces the syntax to use lists and the ways they can be used. To wrap up students watch two short videos on lists and record the main concepts in their journals.")


        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddListItem("Use appropriate vocabulary to describe lists. ")
        goalList:AddListItem("Use an index to reference specific elements in a list")
        bodyDiv:Add(goalList)


        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("In the warmup, students brainstorm different lists of information that they encounter on a daily basis. Then in the activity, students return to baggies and sticky notes from the previous unit to build a concrete model of a list before seeing how lists are programmed in Javascript and Quorum. Students are exposed to different ways of interacting with a list like accessing, removing, appending, and inserting elements. The wrap up concludes the lesson with a summary video and a journal vocabulary exercise. ")

        bodyDiv:AddHeading("Resources", 2)
        bodyDiv:AddParagraph("For the students")
        UnorderedList resources
        resources:AddListItemLink("Code.org CSP Unit 5 Presentation Slides (Optional)", "https://docs.google.com/presentation/d/1qQPTgZxJnYZRl-9Do2UB_hM882QtouLclWfCsw8jDBw/copy")
        resources:AddListItemLink("CS Principles: Introduction to Lists - Part 1 Intro", "https://youtu.be/n1exiRH00x0")
        resources:AddListItemLink("CS Principles: Introduction to Lists - Part 2 Accessing Lists", "https://youtu.be/TL0Y_GI4NZg")
        bodyDiv:Add(resources)

        bodyDiv:AddParagraphBoldFront("Supplemental code.org material","")
        UnorderedList resources2
        resources2:AddListItemLink("Code.org CSP Unit 5 Presentation Slides (Optional)", "https://docs.google.com/presentation/d/1qQPTgZxJnYZRl-9Do2UB_hM882QtouLclWfCsw8jDBw/copy")
        bodyDiv:Add(resources2)

        bodyDiv:AddHeading("Preparation", 2)
        bodyDiv:AddParagraph("If you want to use physical manipulatives for this lesson, you'll need to prepare the following:")
        UnorderedList preparation
        preparation:AddListItem("7+ sandwich baggies per pair of students")
        preparation:AddListItem("1 gallon-sized baggy per pair of students")
        preparation:AddListItem("packs of red and orange stickies")
        preparation:AddListItem("pens / pencils")
        preparation:AddListItem("1 dry erase marker per four students (pairs can share)")
        preparation:AddListItem("If you are using the slides, review them and click through all animations")
        bodyDiv:Add(preparation)


        bodyDiv:AddHeading("Getting Started (5 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt:", " With a partner, brainstorm lists of information that you encounter on a daily basis. Why are lists useful?")
        bodyDiv:AddParagraphBoldFront("Discuss:", " Have students discuss with a partner and then have a few students share out their responses.")

        BoxTip openingGoal
        openingGoal:AddHeading("Discussion Goal", 3)
        UnorderedList openingGoalList
        openingGoalList:AddListItem("Lists help us group together like information")
        openingGoalList:AddListItem("We can go through a list item by item to check off things we have completed")
        openingGoalList:AddListItem("Lists help us stay organized")
        openingGoal:Add(openingGoalList)
        bodyDiv:Add(openingGoal)


        bodyDiv:AddHeading("Activity (30 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Group:", " Group students in pairs.")
        bodyDiv:AddParagraphBoldFront("Distribute:", " Give each pair of students:")
        UnorderedList distribute
        distribute:AddListItem("A small stack of red and orange sticky notes")
        distribute:AddListItem("A pen/pencil")
        distribute:AddListItem("7+ snack-sized plastic baggies")
        distribute:AddListItem("One gallon-sized plastic baggy")
        distribute:AddListItem("A dry erase marker to share with another group")
        bodyDiv:Add(distribute)
        bodyDiv:Add(break)

        BoxTip alternativesTip
        alternativesTip:AddHeading("Teaching Tip", 3)
        alternativesTip:AddParagraphBoldFront("Supplies Substitutions:", " There's no need to use stick notes if you have other scraps of colored paper. Also consider cutting stickies in 4 to make them go further. If you don't have dry erase markers handy consider using pieces of masking tape on the baggies. The gallon-sized baggie can be replaced with any baggie that is large enough to hold the snack-sized baggies. ")
        alternativesTip:AddParagraphBoldFront("Alternatives for Accessibility or Distance Learning:", " Instead of using the physical materials listed here, you can use alternate physical or digital materials that are more convenient for your class.")
        alternativesTip:AddParagraph("Similar to Unit 4 Lesson 1, you can have pairs of students share an online document as their workspace. Students can use numbered lists in the document to represent lists, where each line in the list represents an element of the list. Have students store strings using quotes and numbers without quotes.")
        alternativesTip:AddParagraph("Whatever approach you use, the goal is to teach students about the concepts of lists, especially how information can be stored and accessed by using specific " + dq + "addresses" + dq + " in the list.")
        bodyDiv:Add(alternativesTip)

        Paragraph guidedActivity
        guidedActivity:AddText("<strong>Guided Activity:</strong> Today's activity introduces students to the concept of lists. As a visual aid, you can use ")
        guidedActivity:AddLink("Code.org's presentation slides for Unit 5, Lesson 1: Lists Explore.", "https://docs.google.com/presentation/d/1qQPTgZxJnYZRl-9Do2UB_hM882QtouLclWfCsw8jDBw/copy")
        guidedActivity:AddText(" These slides include animations. The notes below describe when to move to the next slide or click through an animation -- if you aren't using the slides, you can ignore these prompts.")
        bodyDiv:Add(guidedActivity)

        bodyDiv:AddHeading("Guided Activity", 3)
        
        LessonTable activityWebTable
        activityWebTable:Setup()
        
        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Activity Title")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Today, we are going to explore lists.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " var myName = " + dq + "Jose" + dq)
        activityWebTable:AddRightParagraphBoldFront("Say:", " We've already learned that variables can help us store one piece of information.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " But what if we have a lot of information?")
        activityWebTable:AddRightParagraphBoldFront("Say:", " But what if we have lots of information?")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " With a partner, discuss the challenges that you'd encounter if you need to store 10, or 100, or 1,000 pieces of information using variables.")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Lead a short discussion on the challenges they'd encounter. The main challenges are that you'd need to make a variable for each piece of information and it could get difficult to name them all.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Creating and Accessing Lists")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Let's look at how to use lists.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()
        
        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Lists")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Today we're going to practice using a new way to store information called a list. Follow the instructions here to make a list of your own:")
        UnorderedList baggyInstructions
        baggyInstructions:AddListItem("Gallon baggie connected to smaller baggies")
        baggyInstructions:AddListItem("Each smaller baggie can hold one value")
        baggyInstructions:AddListItem("Gallon baggies are named with the same rules as a variable (no spaces, can't start with a number)")
        baggyInstructions:AddListItem("Smaller baggies are numbered starting at 0")
        activityWebTable:AddRight(baggyInstructions)
        activityWebTable:AddRightParagraphBoldFront("Note:", " If you are using alternative materials, you may need to provide different instructions here. Also, if you are using an online document, it's okay to let students start numbering their lists from 1 instead of 0. There will be other opportunities to show how indexing starts at 0 in lists later.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students create their own lists that holds between 2 and 4 values, then share with another group. Circulate the room to check on how they're doing.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Your list is made up of elements.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Your list is made up of elements. Each element has its own index. Indexes are just numbers that count up from zero. The length of the list is how many elements it contains. This list has 3 elements and indexes from 0 to 2.")
        PreformattedText example1
        example1:AddText("<code>Books:
0. " + dq + "Redwall" + dq + "
1. " + dq + "Hunger Games" + dq + "
2. " + dq + "Wrinkle in Time" + dq + "</code>")
        activityWebTable:AddRight(example1)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Notice that all the bags can be folded up...")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Notice that all the bags can be folded up and be placed inside the big variable baggie. Sometimes we want to think about the whole list, sometimes we want to think about individual elements")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " var myList = [" + dq + "pizza" + dq + ", 4]")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Let's create this list using a command.")
        PreformattedText example2
        example2:AddText("<code>myList:
0. " + dq + "pizza" + dq + "
1. 4</code>")
        activityWebTable:AddRight(example2)
        activityWebTable:AddRightParagraphBoldFront("Say:", " In JavaScript, we would use this command. It creates a new list and assigns it to a variable. The square brackets indicate we're making a list. Each value is separated by commas.")
        PreformattedText example3
        example3:AddText("<code>var myList = [" + dq + "pizza" + dq + ", 4]</code>")
        activityWebTable:AddRight(example3)
        activityWebTable:AddRightParagraphBoldFront("Say:", " In Quorum, the code looks different. We make an " + dq + "Array" + dq + " variable (which is just another name for lists). Then we add the items to it. In Quorum, we use the angled brackets to indicate what type of variables are allowed to stay in the list.")
        PreformattedText example4
        example4:AddText("<code>Array&lt;text&gt; myList
myList:Add(" + dq + "pizza" + dq + ")
myList:Add(" + dq + "4" + dq + ")</code>")
        activityWebTable:AddRight(example4)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students write the code to make their own list and the list of partner group. By sharing their answers with another group they can check that they're following along.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " myList[1]")
        activityWebTable:AddRightParagraphBoldFront("Say:", " If we want to access the values in our list, in Javascript we use the square brackets next to the name of our list.")
        PreformattedText example5
        example5:AddText("<code>myList[1]</code>")
        activityWebTable:AddRight(example5)
        activityWebTable:AddRightParagraphBoldFront("Say:", " In Quorum, we use the " + dq + "Get" + dq + " command instead.")
        PreformattedText example6
        example6:AddText("<code>myList:Get(1)</code>")
        activityWebTable:AddRight(example6)
        activityWebTable:AddRightParagraphBoldFront("Question:", " What does <code>lunchFood[0]</code> access in Javascript? What does <code>lunchFood:Get(2)</code> access in Quorum?")
        PreformattedText example7
        example7:AddText("<code>lunchFood:
0. " + dq + "nachos" + dq + "
1. " + dq + "pizza" + dq + "
2. " + dq + "soup" + dq + "</code>")
        activityWebTable:AddRight(example7)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students discuss with other groups. They should see the answers are " + dq + "nachos" + dq + " and " + dq + "soup" + dq)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Lists and Expressions")
        activityWebTable:AddRightParagraphBoldFront("Say:", " We can use list accesses inside of expressions, just like variables. Let's look at a list and some expressions.")
        PreformattedText example8
        example8:AddText("<code>myNumbers:
0. 10
1. 20
2. 25</code>")
        activityWebTable:AddRight(example8)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()
        PreformattedText example9
        example9:AddText("<code>3 + myNumbers:Get(1)
myNumbers:Get(0) + myNumbers:Get(2)</code>")
        activityWebTable:AddRight(example9)
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        activityWebTable:AddRightParagraphBoldFront("Say:", " This first expression evaluates to 23 because myNumbers contains 20 at index 1.")
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        activityWebTable:AddRightParagraphBoldFront("Say:", " The second expression evaluates to 35 because myNumbers[0] and myNumbers[2] contain 25 and 10.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students write three expressions using their own lists. Then have them trade with another group to practice evaluating. Circulate the room to make sure students are following the directions correctly.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " myList[1] = " + dq + "hello" + dq)
        activityWebTable:AddRightParagraphBoldFront("Say:", " We can assign the index of a list just like a variable.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Show students the lines of code on the slide, or present them with the Quorum code below. Have students discuss what the list will contain after the last line runs.")
        PreformattedText example10
        example10:AddText("<code>Array&lt;integer&gt; myList
myList:Add(10)
myList:Add(20)
myList:Add(25)
myList:Set(0, 5)
myList:Set(2, 30)</code>")
        activityWebTable:AddRight(example10)
        activityWebTable:AddRightParagraph("<strong>Click for animation.</strong>")
        activityWebTable:AddRightParagraphBoldFront("Say:", " This code will assign new values at indexes 0 and 2 in the list.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Run this program...")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Have students " + dq + "run" + dq + " the program on the slide or the code below.")
        PreformattedText example11
        example11:AddText("<code>Array&lt;text&gt; myStuff
myStuff:Add(" + dq + "20" + dq + ")
myStuff:Add(" + dq + "hat" + dq + ")
myStuff:Add(" + dq + "pow" + dq + ")
myStuff:Add(" + dq + "5" + dq + ")
myStuff:Set(1, " + dq + "cat" + dq + ")
myStuff:Set(2, myStuff:Get(1))
myStuff:Set(0, myStuff:Get(3) + 10)
myStuff:Set(3, myStuff:Get(0) + myStuff:Get(0))</code>")
        activityWebTable:AddRight(example11)
        activityWebTable:AddRightParagraphBoldFront("Note:", " Although the lists in Quorum and Javascript are similar, running each section of code will give different results. The list in Quorum only allows strings, while the Javascript list allows any kind of variable in each position. That means that the integers will be concatenated onto the end of the strings in Quorum, instead of adding integers together.")
        activityWebTable:AddRightParagraph("<strong>Click for animation.</strong>")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Quickly discuss with the class what the list looks like at the end of the program.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: You can use expressions...")
        activityWebTable:AddRightParagraphBoldFront("Say:", " You can use expressions in the place of the list index. Run this program and compare your result with another group.")
        PreformattedText example12
        example12:AddText("<code>Array&lt;integer&gt; myStuff
myStuff:Add(25)
myStuff:Add(400)
myStuff:Add(3)
myStuff:Add(10)
myStuff:Set(2 - 1, 80)
myStuff:Set(myStuff:Get(2), myStuff:Get(0))</code>")
        activityWebTable:AddRight(example12)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Circulate the room while students run this program.")
        activityWebTable:AddRightParagraph("<strong>Click for animation.</strong>")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Discuss quickly with the class what the list looks like when the program ends.")
        activityWebTable:AddRightParagraphBoldFront("Note:", " The last line is tricky. You need to first evaluate myStuff[0] which is 25 to determine the value being assigned. Then evaluate myStuff[2], which is 3. At this point, the command reads myStuff:Set(3, 25). Now it is just a simple set command.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Changing Your List")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Now let's learn about three different commands that can change your list.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " removeItem(list, index)")
        activityWebTable:AddRightParagraphBoldFront("Say:", " The <code>RemoveAt</code> command will remove an item from an array. The item at the index given is removed, items to the right are shifted over, and the last index is removed.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students discuss what the list will show after this command.")
        PreformattedText example13
        example13:AddText("<code>Array&lt;integer&gt; myNumbers
myNumbers:Add(10)
myNumbers:Add(20)
myNumbers:Add(25)
myNumbers:RemoveAt(1)
myNumbers:RemoveAt(0)</code>")
        activityWebTable:AddRight(example13)
        activityWebTable:AddRightParagraph("<strong>Click for animation.</strong>")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Discuss with the class any questions.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " appendItem(list, item)")
        activityWebTable:AddRightParagraphBoldFront("Say:", " The Add command adds an item to a list. As we've seen, a new index is added to the end of the list and the new item is placed in it.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students discuss what the list will show after this command.")
        PreformattedText example14
        example14:AddText("<code>Array&lt;integer&gt; nums
nums:Add(10)
nums:Add(50)
nums:Add(100)</code>")
        activityWebTable:AddRight(example14)
        activityWebTable:AddRightParagraph("<strong>Click for animation.</strong>")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Discuss with the class any questions.")
        activityWebTable:AddRightParagraphBoldFront("Note:", " If you're using the slides, this slide introduces a new command in Javascript. In Quorum, this is the same command that we have already used to make our lists. You can use this slide to highlight the difference between the standard Add command and the command on the next slide, or you can choose to skip it.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " insertItem(list, index, item)")
        activityWebTable:AddRightParagraphBoldFront("Say:", " We can also use the Add command to add an item to the middle of a list. The item is placed at the index given. The old item at that index, plus all of the items to the right, are moved over one space to make room. A new index is added to the end of the list for the last item.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students discuss what the list will show after this command.")
        PreformattedText example15
        example15:AddText("<code>Array&lt;integer&gt; nums
nums:Add(10)
nums:Add(50)
nums:Add(1, 20)
nums:Add(1, 100)</code>")
        activityWebTable:AddRight(example15)
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Discuss with the class any questions.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Run this program...")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students run this program. Circulate the room to support them with any questions.")
        PreformattedText example16
        example16:AddText("<code>Array&lt;text&gt; aList
aList:Add(" + dq + "20" + dq + ")
aList:Add(" + dq + "hat" + dq + ")
aList:Add(" + dq + "pow" + dq + ")
aList:Add(" + dq + "5" + dq + ")
aList:Add(" + dq + "10" + dq + ")
aList:Remove(1)
aList:Add(2, " + dq + "bang" + dq + ")</code>")
        activityWebTable:AddRight(example16)
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Discuss with the class any questions.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Run this program... (2)")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Have students run this program. Circulate the room to support them with any questions.")
        PreformattedText example17
        example17:AddText("<code>Array&lt;text&gt; bList
bList:Add(" + dq + "to" + dq + ")
bList:Add(" + dq + "5" + dq + ")
bList:Add(" + dq + "po" + dq + ")
bList:Add(bList:Get(2) + " + dq + "ta" + dq + " + bList:Get(0))
bList:Add(2-1, " + dq + "go" + dq + ")
bList:Remove(2)</code>")
        activityWebTable:AddRight(example17)
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        
        
        bodyDiv:Add(activityWebTable)
        
        
        bodyDiv:AddParagraphBoldFront("Discuss:", " Discuss with the class any questions.")
        bodyDiv:Add(break)


        bodyDiv:AddHeading("Wrap Up (10 minutes)", 2)
        bodyDiv:AddHeading("Video and Vocabulary", 3)
        bodyDiv:AddParagraphBoldFront("Videos:", " As a class, watch both videos on lists.")
        UnorderedList videos
        videos:AddListItemLink("CS Principles: Introduction to Lists - Part 1 Intro", "https://youtu.be/n1exiRH00x0")
        videos:AddListItemLink("CS Principles: Introduction to Lists - Part 2 Accessing Lists", "https://youtu.be/TL0Y_GI4NZg")
        bodyDiv:Add(videos)
        bodyDiv:AddParagraphBoldFront("Do This:", " Review the Key Takeaways below and have students add to their journals: lists, element, and index.")
        bodyDiv:AddHeading("Key Takeaways", 3)
        UnorderedList takeaways
        takeaways:AddListItem("A <strong>List</strong> is an ordered collection of elements")
        takeaways:AddListItem("An <strong>Element</strong> is an individual value in a list that is assigned a unique index")
        takeaways:AddListItem("An <strong>index</strong> a common method for referencing the elements in a list or string using numbers")
        takeaways:AddListItem("The length of a list is how many elements it contains. Lists can grow or shrink as elements are added or removed.")
        takeaways:AddListItem("Lists are an example of data abstraction. They allow us to name and program with large collections of information while ignoring the low level details of how the data is stored, organized, etc. These programs are easier to develop and mantain.")
        bodyDiv:Add(takeaways)


       bodyDiv:AddHeading("Assessment: Check for Understanding", 2)
       bodyDiv:AddParagraph("Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.")
       bodyDiv:AddParagraphBoldFront("Questions:", " Match the index with the value.")
       PreformattedText exampleFinal
              exampleFinal:AddText("<code>var myNumbers = [32,64,33,0,15,26,3] </code>")
       bodyDiv:Add(exampleFinal)

        bodyDiv:AddHeading("Standards Alignment", 2)
            UnorderedList list
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "3A-AP-14")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-1.C.1, AAP-1.C.2, AAP-1.C.3")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.N.2")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.O.3, AAP-2.0.4")
        bodyDiv:Add(list)


        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn how to use lists to store lots of information"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 5 Lesson 1 (Lists Explore)"
    end
    action GetName returns text
        return "Code.Org Unit 5 Lesson 1"
    end
    action GetShortDescription returns text
        return "Learn about lists"
    end
    action GetLocation returns text
        return "lessons/code/BuildingApps/Lesson1.html"
    end

end

 
 
