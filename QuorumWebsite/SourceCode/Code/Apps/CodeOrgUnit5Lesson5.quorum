use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.BoxTip

class CodeOrgUnit5Lesson5 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 5 Lesson 5: Loops Explore")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Lists, Loops, and Traversals - Lesson 5: Loops Explore", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        //Division box


        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("Students begin the lesson by discussing the purpose of loops before completing the unplugged activity. This activity involves moving a " + dq + "robot" + dq + " around a game board while practicing tracing blocks of code by hand. To conclude, the lesson is wrapped up with a vocabulary discussion and a video. ")

        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goals
            goals:AddListItem("Use appropriate vocabulary to describe loops. ")
            goals:AddListItem("Identify the exit point of a loop. ")
            goals:AddListItem("Trace a simple program with a loop.")
        bodyDiv:Add(goals)

        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("Students are introduced to the concept of loops through a robot maze activity. This unplugged lessons provides students a physical mental model they will be able to use when they start programming with loops in the subsequent lessons.")
        
        bodyDiv:AddHeading("Resources", 2)
        bodyDiv:AddParagraph("For the students")
        UnorderedList resources
        resources:AddListItemLink("CS Principles: Using Loops (Video)", "https://youtu.be/G8hfAk4PfOM")
        bodyDiv:Add(resources)

        bodyDiv:AddParagraphBoldFront("Supplemental code.org material","")

        UnorderedList resources2
        resources2:AddListItemLink("Code.org CSP Unit 5 Presentation Slides", "https://docs.google.com/presentation/d/1qQPTgZxJnYZRl-9Do2UB_hM882QtouLclWfCsw8jDBw/copy")
        bodyDiv:Add(resources2)

        bodyDiv:AddHeading("Preparation", 2)
        UnorderedList prep
        prep:AddListItem("1 game board per pair of students")
        prep:AddListItem("1 " + dq + "robot" + dq + " per pair of students")
        prep:AddListItem("Game pieces, markers, or tokens that can be used to represent barriers")
        prep:AddListItem("Review the optional Intro to Loops presentation and click through all of the animations if you plan on using the slides")
        bodyDiv:Add(prep)
        bodyDiv:Add(break)

        BoxTip substitutions
        substitutions:AddHeading("Teaching Tip: Supplies Substitutions", 3)
        UnorderedList subList
        subList:AddListItem("<strong>Robot:</strong> The " + dq + "robot" + dq + " can be any small item that fits in a square on the game board and is clearly facing a direction. It could be as simple as a scrap of paper shaped like a triangle or a paperclip with googly eyes. ")
        subList:AddListItem("<strong>Game Pieces:</strong> The game pieces can be anything that will fit in a square on the game board that is clearly distinguishable from the robot. For example, you can use knick-knacks, tokens, markers, paperclips, or scraps of paper.")
        subList:AddListItem("<strong>Game Board:</strong> The game board should be a grid that is 5x5. You can use a grid printed on paper, a chess board, or a tactile grid, such as a LEGO board. If your grid is larger than 5x5, you should mark off the excess space. The robot and obstacles should only be placed within the 5x5 section for this activity.")
        substitutions:Add(subList)
        bodyDiv:Add(substitutions)

        bodyDiv:AddHeading("Getting Started (5 minutes)", 2)
        bodyDiv:AddHeading("Set-up", 3)
        bodyDiv:AddParagraphBoldFront("Distribute:", " The activity today involves a lot of moving pieces. Take this time at the beginning of class to pass out supplies and pair students. ")
        bodyDiv:AddParagraph("Per pair of students:")
        UnorderedList distribute
        distribute:AddListItem("1 game board")
        distribute:AddListItem("1 " + dq + "robot" + dq)
        distribute:AddListItem("At least 4 game pieces, markers, or tokens that can be used to represent barriers")
        bodyDiv:Add(distribute)

        bodyDiv:AddParagraphBoldFront("Group:", " Put students in groups of two.")

        bodyDiv:AddHeading("Activity (30 minutes)", 2)
        bodyDiv:AddHeading("Loops", 3)

        BoxTip activityTip
        activityTip:AddHeading("Teaching Tip: Running the Activity", 3)
        activityTip:AddParagraph("This activity asks students to follow along as a number of core concepts for programming are introduced. The model is typically that a term or concept is introduced and modeled and then afterwards students are encouraged to try it out on their own. Trying it out typically means they are writing information on a note and sharing it with another group before discussing the results with the whole class.")
        activityTip:AddParagraph("Slides with animations have an icon in the bottom left corner to let you know you need to click to reveal more of the slide's content. ")
        activityTip:AddParagraph("To help you more easily prepare the activity and keep track of your instructions, detailed instructions have been included as speaker notes in the presentation. Here are some tips to help you throughout the presentation.")
        UnorderedList tips
        tips:AddListItem("There are opportunities throughout the presentation for students to actively engage. At these moments students should be making things with their manipulatives or using them to answer questions. Use these opportunities to check progress.")
        tips:AddListItem("There is a fair amount of new vocabulary introduced but it is introduced gradually and with intentional repetition. Make a point of actively modeling the use of new terms.")
        tips:AddListItem("The most important goal here is building a mental model. It is ok if students have some open questions that will get resolved over the subsequent conditional lessons.")
        tips:AddListItem("Both you and students can use the " + dq + "Key Takeaways" + dq + " to check your understanding at the end.")
        activityTip:Add(tips)
        bodyDiv:Add(activityTip)

        Paragraph guidedActivity
        guidedActivity:AddText("<strong>Guided Activity:</strong> Today's activity introduces students to the concept of loops. As a visual aid, you can use ")
        guidedActivity:AddLink("Code.org's presentation slides for Unit 5, Lesson 5: Loops Explore.", "https://docs.google.com/presentation/d/1qQPTgZxJnYZRl-9Do2UB_hM882QtouLclWfCsw8jDBw/copy")
        guidedActivity:AddText(" These slides include animations. The notes below describe when to move to the next slide or click through an animation -- if you aren't using the slides, you can ignore these prompts.")
        bodyDiv:Add(guidedActivity)

        bodyDiv:AddHeading("Guided Activity", 3) 
        
        LessonTable activityWebTable
        activityWebTable:Setup()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do this: You have one command")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Today we are going to explore Loops. You will move a robot around a game board following commands. Here's the first one: <code>MoveForward()</code>")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Place the robot in the center of the bottom row, facing the top row. Use the <code>MoveForward()</code> command to write a program to move the robot to the top row.")
        activityWebTable:AddRightParagraph("<strong>Click through animation to reveal the answer.</strong>")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " This code is repetitive.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " This code is repetitive. How can we simplify it? By using a While Loop.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Here's how it works:")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Here's how a While Loop works. While something is true, the code in the while loop runs, over and over until that thing is no longer true. Let's try it together!")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " var steps = 0;")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Let's run this program together. Set up your board with the robot in the center of the bottom row, facing the top. We are going to run each step of the loop together. First you will try it on your board, and then we will look at the answers together.")
        PreformattedText example1
        example1:AddText("<code>integer steps = 0

repeat while steps < 4
    MoveForward()
    steps = steps + 1
end</code>")
        activityWebTable:AddRight(example1)
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Round 1")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Read the code with your partner and complete the first round of the loop. You may want to keep track of the value in the variable using a note or scrap of paper. ")
        activityWebTable:AddRightParagraphBoldFront("Click through for animation ", "to view the answer after students have had a chance to follow the code on their own board. Discuss each part of the code as it is running.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Round 2")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Let's continue on with the second round. You do it first. ")
        activityWebTable:AddRightParagraphBoldFront("Click through for animation ", "to view the answer after students have had a chance to follow the code on their own board. Discuss each part of the code as it is running.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Round 3")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Now on to the third round. You do it first. ")
        activityWebTable:AddRightParagraphBoldFront("Click through for animation ", "to view the answer after students have had a chance to follow the code on their own board. Discuss each part of the code as it is running.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Round 4")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Time for the fourth round. You do it first. ")
        activityWebTable:AddRightParagraphBoldFront("Click through for animation ", "to view the answer after students have had a chance to follow the code on their own board. Discuss each part of the code as it is running.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Round 5")
        activityWebTable:AddRightParagraphBoldFront("Say:", " What happens here? Discuss with your partner.")
        activityWebTable:AddRightParagraphBoldFront("Click through for animation ", "to view the answer after students have had a chance to follow the code on their own board. Discuss each part of the code as it is running. The main thing to point out here is that the loop ends because the Boolean expression evaluates to false.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "var steps = 0;")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Put the robot on the bottom row in the center column, facing upwards. With your partner, run this program on your board. What happens? ")
        PreformattedText infiniteLoopExample
        infiniteLoopExample:AddText("<code>integer steps = 0

repeat while steps < 4
    MoveForward()
end</code>")
        activityWebTable:AddRight(infiniteLoopExample)
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        activityWebTable:AddRightParagraphBoldFront("Discuss:", " Why does the robot run off the board? ")
        activityWebTable:AddRightParagraph("This is an example of an infinite loop. The program never ends because steps will always be less than 4.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Do This: You have a new command.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " You have a new command, <code>TurnRight()</code>")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Put the robot on the bottom row in the second column, facing upwards. Run this program on your board. Where will the robot end up?")
        PreformattedText example2
        example2:AddText("<code>integer steps = 0
repeat while steps < 4
    MoveForward()
    TurnRight()
    steps = steps + 1
end</code>")
        activityWebTable:AddRight(example2)
        activityWebTable:AddRightParagraphBoldFront("Click through animation to see the answer.", " The robot returns to its original position.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "While Loop: 3 Parts")
        activityWebTable:AddRightParagraphBoldFront("Say:", " A While Loop has three distinct parts.")
        UnorderedList whileParts
        whileParts:AddListItem("A counting variable set to an initial value")
        whileParts:AddListItem("A Boolean expression which checks the condition of that variable")
        whileParts:AddListItem("A statement which increases or decreases the variable that is being checked"
+ "<ul><li>Note: if this piece is missing, you may create an <b>infinite loop</b> that never stops running!</li></ul>")
        activityWebTable:AddRight(whileParts)
        activityWebTable:AddRightParagraphBoldFront("Click for animation: ", "Read each step as the animation highlights the program code.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "A for loop combines these three parts into one statement")
        activityWebTable:AddRightParagraphBoldFront("Say:", " A For Loop combines all three of these parts into one statement. ")
        activityWebTable:AddRightParagraphBoldFront("Click for animation:", " Read each step as the animation highlights the Javascript code, or look at the Quorum code below.")
        PreformattedText example3
        example3:AddText("<code>repeat 4 times
    MoveForward()
end</code>")
        activityWebTable:AddRight(example3)
        activityWebTable:AddRightParagraphBoldFront("Note:", " The " + dq + "repeat times" + dq + " loop in Quorum is slightly different than the traditional " + dq + "for" + dq + " loop in Javascript. Both loops make it possible to iterate a specific number of times, but in Quorum, you don't make a variable as part of the loop declaration.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " A loop is an example of iteration: a repetitive portion of an algorithm which repeats a specified number of times or until a given condition is met.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Do this: You have another new command")
        activityWebTable:AddRightParagraphBoldFront("Say:", " You have another new command: <code>TurnLeft()</code>")
        activityWebTable:AddRightParagraphBoldFront("Click to reveal the program code,", " or share the Quorum code below. Have students place the robot in the bottom left corner of their grid, facing forward again.")
        PreformattedText example4
        example4:AddText("<code>repeat 3 times
    MoveForward()
    TurnRight()
    MoveForward()
    TurnLeft()
end</code>")
        activityWebTable:AddRight(example4)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " With your partner, follow the code with your robot.")
        activityWebTable:AddRightParagraphBoldFront("Click through the animation to see the answer.", "")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Do this: click to see a new program.")
        activityWebTable:AddRightParagraphBoldFront("Click to reveal the program code,", " or share the Quorum code below.")
        PreformattedText example5
        example5:AddText("<code>integer steps = 0

repeat while steps <= 2
    MoveForward()
    MoveForward()
    TurnRight()
    MoveForward()
    steps = steps + 1
end</code>")
        activityWebTable:AddRight(example5)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Place the robot on the second row from the bottom, in the left-most column, facing towards the top. Run the program on your board. Where will the robot end up?")
        activityWebTable:AddRightParagraphBoldFront("Click through the animation to see the answer.", "")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Do this: Click to see a new program.")
        activityWebTable:AddRightParagraphBoldFront("Click to reveal the program code,", " or share the Quorum code below.")
        PreformattedText example6
        example6:AddText("<code>repeat 2 times
    MoveForward()
    TurnLeft()
    TurnLeft()
    MoveForward()
    MoveForward()
end</code>")
        activityWebTable:AddRight(example6)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Place the robot on the center of your board, then run the program. Where will the robot end up?")
        activityWebTable:AddRightParagraphBoldFront("Click through the animation to see the answer", "")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Let's make it a little more challenging.")
        activityWebTable:AddRightParagraphBoldFront("Say: ", "We're going to add some new commands to make things more challenging: <code>CanMoveLeft()</code>, <code>CanMoveRight()</code>, <code>CanMoveForward()</code>, and <code>CanMoveBackward()</code>. These evaluate to true or false and are dependent on the direction that the robot is facing. If a barrier or a wall (the edge of the board) is in the way, the Boolean expression evaluates to False.")           
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "canMove(forward);")
        activityWebTable:AddRightParagraphBoldFront("Click through the animation to see the answer.", "")
        activityWebTable:AddRightParagraphBoldFront("Say:", " In this example, we have our robot in the center of our grid, facing upwards. There is a barrier in the space immediately to its left. <code>CanMoveLeft()</code> returns false, and the other commands return true.")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "canMove(forward);")
        activityWebTable:AddRightParagraphBoldFront("Click through the animation to see the answer.", "")
        activityWebTable:AddRightParagraphBoldFront("Say:", " In this example, our robot is in the top row, in the center column, and facing to the right. There is a barrier immediately behind it, so <code>CanMoveBackward()</code> returns false. <code>CanMoveLeft()</code> also returns false, because the robot's left side is up against a wall (the edge of the board).")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Do This: Run the following program.")
        activityWebTable:AddRightParagraphBoldFront("Click to reveal the program code,", " or share the Quorum code below.")
        PreformattedText example7
        example7:AddText("<code>repeat 3 times
    if CanMoveRight()
        TurnRight()
        MoveForward()
    end
    TurnLeft()
    if CanMoveForward()
        MoveForward()
    end
end</code>")
        activityWebTable:AddRight(example7)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Place the robot in the center of the grid facing upwards. Then place a barrier one space below the robot, and another barrier one space above and to the right of the robot. Then run the program on your board. Where will the robot end up?")
        activityWebTable:AddRightParagraphBoldFront("Click through the animation to see the answer.", "")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Do this: Run the following program.")
        activityWebTable:AddRightParagraphBoldFront("Click to reveal the program code,", " or share the Quorum code below.")
        PreformattedText example8
        example8:AddText("<code>repeat 4 times
    if CanMoveForward()
        MoveForward()
    end
    TurnLeft()
    if CanMoveForward()
        MoveForward()
    end
    Turn Right()
end</code>")
        activityWebTable:AddRight(example8)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Place the robot in the fourth column and the bottom row, facing upwards. Then, place a barrier one space to the left of the robot, and another barrier three spaces to the left of the robot. Finally, place a barrier in the second column in the top row and another in the second column in the center row. Then run the program on your board. Where will the robot end up?")
        activityWebTable:AddRightParagraphBoldFront("Click through the animation to see the answer.", "")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Challenge!")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Now it's your turn to write your own programs!")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " With a partner, set up a game board and add as many barriers as you'd like. Write a program using a for loop to navigate the board. Figure out the starting and ending points of the robot. Share your board and code with another group. See if you agree on the ending point of the robot!")
        //bodyDiv:Add(break) 

    activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "Key Takeaways")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Review the key takeaways with students.")
        activityWebTable:AddRightParagraphBoldFront("Note:", " The key takeaways are slightly different between Javascript and Quorum because the " + dq + "for" + dq + " and " + dq + "repeat times" + dq + " loops are not identical. One important takeaway for both languages though is that the " + dq + "while" + dq + " loop can do anything the other loops can. The other loop styles are just for convenience.")
        UnorderedList takeaways
        takeaways:AddListItem("<strong>Repeat While Loops</strong> use a boolean condition to repeatedly run a block of code. If it is true it runs the block of code contained within it. This process of checking the condition and running the block of code is repeated as long as the Boolean condition remains true. Once the Boolean expression becomes false it will stop.")
        takeaways:AddListItem("<strong>Repeat Times Loops</strong> explicitly run a set number of times. How many times this kind of loop runs could be a constant number or it could be a variable. ")
        activityWebTable:AddRight(takeaways)
        //bodyDiv:Add(break) 

        
        
        
        
        bodyDiv:Add(activityWebTable)

        bodyDiv:AddHeading("Wrap Up (10 minutes)", 2)
        bodyDiv:AddHeading("Introduction to Loops", 3)
        Paragraph video
        video:AddText("<strong>Video:</strong> As a class, watch the ")
        video:AddLink("CS Principles: Using Loops", "https://youtu.be/G8hfAk4PfOM")
        video:AddText(" video from Code.org. The video discusses the use of loops in Javascript, but most of the concepts are still useful in Quorum as well.")
        bodyDiv:Add(video)

        bodyDiv:AddParagraphBoldFront("Journal:", " Have students add the following terms to their journals:")
        UnorderedList vocabulary
        vocabulary:AddListItem("<i>iteration:</i> a repetitive portion of an algorithm which repeats a specified number of times or until a given condition is met.")
        vocabulary:AddListItem("<i>infinite loop:</i> occurs when the ending condition will never evaluate to true. ")
        bodyDiv:Add(vocabulary)

        bodyDiv:AddHeading("Assessment: Check for Understanding", 2)
        bodyDiv:AddParagraphBoldFront("Question:", " When breaking a problem down, you often encounter elements that you want to use repeatedly in your code. Sometimes it's appropriate to write a new function; at other times it's appropriate to write a loop.")
        bodyDiv:AddParagraph("There is no hard-and-fast rule as to which is better, but what do you think? What kinds of circumstances would lead you to writing a function versus using a loop?")

        bodyDiv:AddHeading("Standards Alignment", 2)
            UnorderedList list
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "3A-AP-15")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.K.1, AAP-2.K.4")
        bodyDiv:Add(list)

        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Discover how to use loops to repeat code"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 5 Lesson 5: Loops Explore"
    end
    action GetName returns text
        return "Code.Org Unit 5 Lesson 5"
    end
    action GetShortDescription returns text
        return "Learn about loops"
    end
    action GetLocation returns text
        return "lessons/code/BuildingApps/Lesson5.html"
    end

end

 
    
