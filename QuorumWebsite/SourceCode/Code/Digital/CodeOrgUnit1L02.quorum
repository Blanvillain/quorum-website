use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit1L02 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 1 Lesson 2: Representing Information")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
      Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Digital Information - Lesson 2: Representing Information", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Digital Information - Lesson 2: Representing Information")
        headDiv:AddText("Understanding how digital information is sent in a physical system")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)

        section_intro:AddParagraph("Using everyday materials, students create devices for sending information to a partner. Each group then uses its device to send an answer to a question. Following this, students modify their devices to answer more complex answers, responding with one of four possible messages, then one of eight possible messages.")

//        section_intro:AddHeading("Vocabulary", 2)
//        UnorderedList vocabularyList
//        AddListItemWithBoldAtFront(vocabularyList, "Binary: ", "a way of representing information using only two options.")
//        AddListItemWithBoldAtFront(vocabularyList, "Bit: ", "a contraction of " + dq + "Binary Digit" + dq + "; the single unit of information in a computer, typically represented as a 0 or 1")
//        section_intro:Add(vocabularyList) 

        section_intro:AddHeading("Goals", 2)
        section_intro:AddParagraph("Students will be able to:")
        
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Explain how the same piece of information can be represented in a variety of different ways.")
        goalList:AddListItem("Use a device to represent different pieces of information")
        goalList:AddListItem("Use patterns to represent information")
        section_intro:Add(goalList)

        section_intro:AddHeading("Purpose", 2)
        section_intro:AddParagraph("This lesson introduces the concept of sending bits of information from one place to another. While building and modifying their information sending devices students should eventually recognize that it's easier to invent a system of communication that used a combination of patterns with a simple device, rather than making a new, or increasingly complex device for each new problem. This lays the foundation for understanding how complex information is represented in computers using a combination of bits. ")
        
                Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)
        AddHeading(section_gettingStarted, "Remarks", 3)
        UnorderedList startingRemarks
        startingRemarks:AddClassAttribute("list-disc list-outside pl-8")
        startingRemarks:AddListItem("A lot of people think that computer science is the study of computers, like the phone in your pocket or the computer on your desk. As we'll see this year, computer science actually has a lot more to do with information.")
        section_gettingStarted:Add(startingRemarks)
        section_gettingStarted:AddParagraphBoldFront("Discuss:"," What is your definition of information?")
        section_gettingStarted:AddParagraph("Have students silently write their own definition, then share with a partner, and finally have some volunteers share with the room.")          

        Division warmupTip = AddDisscussionGoal(section_intro)
        warmupTip:AddParagraphBoldFront("Goal:"," More important than writing a formal definition of information is getting students discussing the term and its diverse forms. If students struggle with defining " + dq + "information," + dq + " modify the prompt by 
                                        asking them to provide examples of information in their world such as texts, books, videos, music, conversations, etc.")
   
       

            UnorderedList proTip1
            proTip1:AddClassAttribute("list-disc list-outside pl-8")
            proTip1:AddListItem("There are many ways we can think about the word " + dq + "information," + dq + " but one possible definition we'll explore today is that information is the answer to a question.")
            proTip1:AddListItem("We're going to investigate what it takes to send that information back and forth to one another. ")
            section_gettingStarted:Add(proTip1)

          Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (35 mins)", 2)
        section_activity:AddParagraphBoldFront("Group:"," Place students in groups of two.")
        section_activity:AddParagraphBoldFront("Distribute:"," Materials for students to build their binary message devices (straws, scissors, etc.)")
        AddHeading(section_activity, "Remarks", 3)

        UnorderedList activityRemarks
        activityRemarks:AddClassAttribute("list-disc list-outside pl-8")
        activityRemarks:AddListItem("Today you are going to build your own device for sending and receiving messages which you will use to answer questions that you write.")
        section_activity:Add(activityRemarks)

        AddHeading(section_activity, "Challenge #1", 3)

        section_activity:AddParagraphBoldFront("Do This:"," Write down a question that has two possible answers. Then, build a device out of classroom supplies to communicate the answer to your question.")
        section_activity:AddParagraphBoldFront("Rules:","")
            UnorderedList prompt1List
            prompt1List:AddClassAttribute("list-disc list-outside pl-8")
            prompt1List:AddListItem("No projectiles.")
            prompt1List:AddListItem("No language can be used. For example: If my question is " + dq + "Is your favorite color blue or green?" + dq + " I can't write the words blue and green on my device. ")
            section_activity:Add(prompt1List)

        section_activity:AddParagraphBoldFront("Do This:"," After students have completed their devices, choose a few groups to demonstrate their device in action. Students stand on opposite sides of the classroom. One student asks the agreed upon question. The other student uses the device to communicate the answer. ")
        
        AddHeading(section_activity, "Challenge #2", 3)
        section_activity:AddParagraphBoldFront("Do This:"," Modify the answer to your question so there are now four possible answers. Then, update your device to communicate one of four possible answers to your question. Again, choose groups to demonstrate their updated devices. ")

        AddHeading(section_activity, "Challenge #3", 3)
        section_activity:AddParagraphBoldFront("Do This:"," Modify the answers to your question so there are now eight possible choices. Then, update your device to communicate one of eight possible answers to your question.")
        section_activity:AddParagraph("Consider:")
        UnorderedList challenge3list
        challenge3list:AddClassAttribute("list-disc list-outside pl-8")
        challenge3list:AddListItem("Should you modify your device?")
        challenge3list:AddListItem("Can you use it in a different way?")
        challenge3list:AddListItem("Should you make a new device?")
        section_activity:Add(challenge3list)
        section_activity:AddParagraph("Do a final demonstration of devices before ending the activity.")
        
       Division challengeTip = AddTeachingTip(section_activity)
        challengeTip:AddParagraphBoldFront("Challenge 1 - Questions with 2 Answers:"," In this activity, avoid the urge to give students a pre-written question or answers without allowing them time to struggle with the challenge. Encourage students to write down in their journal how their device works. ")
        UnorderedList tipList
        tipList:AddClassAttribute("list-disc list-outside pl-8")
        tipList:AddListItem("Example Question: Do you like strawberry or vanilla ice cream?")
        tipList:AddListItem("Answer: strawberry (move my pencil up and down), vanilla (move my pencil side to side)")
        challengeTip:Add(tipList)
        challengeTip:AddParagraphBoldFront("Challenge 2 - Questions with 4 Answers:"," Some students may add new ways of answering a question. Others may notice that they can reuse their previous responses, sending those responses in sequences that produce new messages. Avoid the urge to tell them to reuse the device, instead allowing them to explore their own ideas.")
        challengeTip:AddParagraphBoldFront("Challenge 3 - Questions with 8 or More Answers:"," At this point, students may start to realize that the way their device communicates information is not practical and could not be scaled up if there were for example, a thousand or a million possible answers.")

        Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap up (10 Minutes)", 2)
        UnorderedList wrapUpList
        wrapUpList:AddClassAttribute("list-disc list-outside pl-8")
        wrapUpList:AddListItem("Let's wrap up by discussing how you designed your devices and what that means about the questions you can ask and the messages you can send. ")
        section_wrap:Add(wrapUpList)

        section_wrap:AddParagraphBoldFront("Prompt:"," Think back to your simple two-option device from Challenge #1. Instead of changing your device and adding more options every time you added more answers, how could you simply modify the way you use your device with only two options?")

        AddHeading(section_wrap, "Discussion Goal", 3)
        section_wrap:AddParagraph("Focus the discussion on why some groups created devices using unique options for each additional message, while other groups devised plans in which they reused the same device to create new combinations of the original two options. ")
        section_wrap:AddParagraph("Ultimately, groups begin to notice that, for example: instead of bending a straw in four different directions, they could simply bend the straw the same two ways multiple times.")
        UnorderedList tipList2
        tipList2:AddClassAttribute("list-disc list-outside pl-8")
        tipList2:AddListItem("Sample Question: Do you like strawberry, chocolate, vanilla, or peanut butter ice cream?")
        tipList2:AddListItem("Answers: strawberry (bend straw forward once), chocolate (bend straw forward twice), vanilla (bend straw backwards once), peanut butter (bend straw backwards twice)")
        section_wrap:Add(tipList2)

             Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Check for Understanding", 2)

         AddHeading(section_assessment, "For Students", 3)
        section_assessment:AddParagraph("Open a word doc or google doc and copy/paste the following question.")

        AddHeading(section_assessment, "Question", 3)
        section_assessment:AddParagraph("Recall when you built your information sending device. Why did we decide to send a message as a sequence of two options rather than modifying our devices to represent more options? ")
        section_assessment:AddParagraph("For example: Modifications with two options")
        UnorderedList modifyList1
        modifyList1:AddClassAttribute("list-disc list-outside pl-8")
        modifyList1:AddListItem("bend straw forward once")
        modifyList1:AddListItem("bend straw backwards once")
        modifyList1:AddListItem("bend straw forwards twice")
        modifyList1:AddListItem("bend straw backwards twice")
        section_assessment:Add(modifyList1)

        section_assessment:AddParagraph("vs. Four options")

        UnorderedList modifyList2
        modifyList2:AddClassAttribute("list-disc list-outside pl-8")
        modifyList2:AddListItem("bend straw forward")
        modifyList2:AddListItem("bend straw backwards")
        modifyList2:AddListItem("bend straw to the left")
        modifyList2:AddListItem("bend straw to the right")
        section_assessment:Add(modifyList2) 

        Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "<b>AP</b> - Algorithms & Programming: 3A-AP-21 - Evaluate and refine computational artifacts to make them more usable and accessible.")
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2011): ", "<b>DA</b> - Data & Analysis: 2-DA-07 - Represent data using multiple encoding schemes, 3A-DA-09 - Translate between different bit representations of real-world phenomena, such as characters, numbers, and images.")
        section_standards:Add(list)

         Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learning how the information is sent on the internet at the very fundamental level."
    end

    action GetSummaryName returns text
        return "CSP Digital Information Lesson 2 Representing Information"
    end
    action GetName returns text
        return "CSP Digital Information Lesson 2"
    end
    action GetShortDescription returns text
        return "Explore how information can be represented and communicated"
    end
    action GetLocation returns text
        return "lessons/code/internet/InternetLesson2.html"
    end

    action GetLinkName returns text
        return "Representing Information"
    end

    action GetSectionName returns text
        return "Digital Information"
    end
end
