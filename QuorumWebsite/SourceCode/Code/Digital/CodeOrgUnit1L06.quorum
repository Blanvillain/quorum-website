use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit1L06 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 1 Lesson 6: Representing Text")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
    Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Digital Information - Lesson 6: Representing Text", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Digital Information - Lesson 6: Representing Text")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)

            Paragraph overview
            overview:AddText("In this lesson, students create a system for representing text using only numbers while communicating with each other. They are only allowed to send numbers back-and-forth, so they must create a system to translate between number and character. At the end of the main activity they briefly review the ASCII system for representing text. The wrap up discussion emphasizes how all of the concepts thus far have " + dq + "built" + dq + " on each other and introduces the concept of abstraction to describe this progression.")
            section_intro:Add(overview)

        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
        
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Develop a system for using numbers to represent text.")
        goalList:AddListItem("Explain how bits are grouped to represent abstractions like numbers and text.")
        goalList:AddListItem("Describe the challenges in representing text when using a fixed number of bits for each character.")
        section_intro:Add(goalList)

        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("After this lesson students will understand the ways the most common types of information, text and numbers, are stored using binary. More importantly they should understand the challenges or principles that led to the creation of these systems and that these systems are somewhat arbitrarily created to solve a shared problem. They work not because there was " + dq + "one right answer" + dq + " but because many people agreed to use them. The wrap up discussion begins to explore the concept of abstraction. This is a challenging concept to understand and one that students will return to many times throughout the course. In this context, we emphasize how common it is to send text messages to each other yet these messages rely on many smaller layers (like binary numbers and electrical signals) to truly function correctly.")

       AddHeading(section_intro, "Resources", 3)
            UnorderedList resources
            resources:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")
            //resources:AddListItemLink("ASCII Reference Sheet", "https://docs.google.com/document/d/15pgXcGUX7XbAAGBkHfXMMLFwDP5cTKKZ-zFIfFKu9FQ/edit")
            resources:AddListItemLink("ASCII Reference Sheet", "http://sticksandstones.kstrom.com/appen.html") // Replaced google doc sheet with a more accessible version. Make sure this link is still valid
            section_intro:Add(resources)

                                Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)
        AddHeading(section_gettingStarted, "Remarks", 3)
        UnorderedList startingRemarks
        startingRemarks:AddClassAttribute("list-disc list-outside pl-8")
        startingRemarks:AddListItem("This list secretly represents four things we experience every year. This list is not complete - there are others that we could add to it.")
        
        section_gettingStarted:AddParagraphBoldFront("Prompt:"," Brainstorm with your neighbor what you think this list represents. When you think you have an idea, come up with another item to add to this list and be ready to explain why it belongs.")
        UnorderedList warmupList
        warmupList:AddClassAttribute("list-disc list-outside pl-8")
        warmupList:AddListItem("1 1")
        warmupList:AddListItem("2 14")
        warmupList:AddListItem("7 4")
        warmupList:AddListItem("10 31")
        section_gettingStarted:Add(warmupList)
        
        section_gettingStarted:AddParagraphBoldFront("Discussion Goal:"," Each item in the list represents a non-denominational holiday - New Years Day, Valentine's Day, Independence Day, and Halloween. Students should be initially puzzled by what this list represents - it may be helpful to point out the format of the list (two numbers) and that this list happens throughout the year.")
        section_gettingStarted:AddParagraphBoldFront("Alternate Discussion:"," This example could be adapted to fit your classroom or school environment in order to better help your students predict what the list represents. For example: a list of room numbers in your school that students can relate to, or a list of street addresses that have meaning to students. If you decide to adapt this example, make sure it still addresses the larger concept that this warm-up introduces: that numbers can be used to represent different types of information.")

                
        Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (35 mins)", 2)
        UnorderedList activityRemarks
        activityRemarks:AddClassAttribute("list-disc list-outside pl-8")
        activityRemarks:AddListItem("In our warm-up, we used numbers to represent certain type of information. In today's activity, we will also use numbers to represent something that computers use pretty frequently: text messages.")
        section_activity:Add(activityRemarks)

        section_activity:AddParagraphBoldFront("Group:"," Place students in pairs. Assign students to " + dq + "Partner A" + dq + " or " + dq + "Partner B" + dq + ".")
        section_activity:AddParagraphBoldFront("Distribute:"," Give each pair a few sticky notes, or some other way to record short sequences of numbers.")
        section_activity:AddParagraphBoldFront("Do This:"," Consider the following samples:")
        UnorderedList sampleList
        sampleList:AddClassAttribute("list-disc list-outside pl-8")
        sampleList:AddListItem("hey")
        sampleList:AddListItem("ttyl")
        sampleList:AddListItem("morning")
        section_activity:Add(sampleList)
        section_activity:AddParagraph("Using only numbers, you will need to communicate these samples to a partner. No letters or other characters (including spaces) allowed! Come up with a system that allows you to do this.")
        
        AddHeading(section_activity, "Teaching Tip", 3)
        section_activity:AddParagraph("Most likely students will arrive at a system where they assign each character to a corresponding number.")
        section_activity:AddParagraph("For example: a = 1, b = 2")
        section_activity:AddParagraph("If students are struggling, remind them to consider each character individually rather than the whole word at once.")
        section_activity:AddParagraph("The four challenges are designed to test the limits of the students' systems. For each challenge, after one partner has put their head down, click through to reveal the challenge to the the other partner.")
        section_activity:AddParagraph("After the partner has translated the message to numbers, they hand the sticky note to the other partner and put their head down. The other partner translates back to English.")
        section_activity:AddParagraph("After the challenge is done, give students a few minutes to update their systems as needed.")
        section_activity:AddParagraph("Be on the lookout for cheats in a system - students cannot use spaces (aside from between two numbers to differentiate that where one number stops and the other starts) or symbols - only numbers one after the other.")

         AddHeading(section_activity, "Challenge #1 - Spaces", 3)
     
        section_activity:AddParagraphBoldFront("Do This:","")
        UnorderedList challengeList1A
        challengeList1A:AddClassAttribute("list-disc list-outside pl-8")
        challengeList1A:AddListItem(AddTextBoldFront("Partner A:"," Heads down!"))
        challengeList1A:AddListItem(AddTextBoldFront("Partner B:"," On a sticky note, use your system to write the message: oh no"))
        section_activity:Add(challengeList1A)
        UnorderedList challengeList1B
        challengeList1B:AddClassAttribute("list-disc list-outside pl-8")
        challengeList1B:AddListItem(AddTextBoldFront("Partner A:"," Heads Up! Translate the message on the sticky note using your system."))
        challengeList1B:AddListItem(AddTextBoldFront("Partner B:"," Heads down!"))
        section_activity:Add(challengeList1B)

        section_activity:AddParagraphBoldFront("Do This:"," Heads up! Check your answers. After students have checked, allow them time to update their system as needed.")

        AddHeading(section_activity, "Challenge #2 - Punctuation", 3)
  
        section_activity:AddParagraphBoldFront("Do This:","")
        UnorderedList challengeList2A
        challengeList2A:AddClassAttribute("list-disc list-outside pl-8")
        challengeList2A:AddListItem(AddTextBoldFront("Partner A:"," Heads down!"))
        challengeList2A:AddListItem(AddTextBoldFront("Partner B:"," On a sticky note, use your system to write the message: Great!"))
        section_activity:Add(challengeList2A)
        UnorderedList challengeList2B
        challengeList2B:AddClassAttribute("list-disc list-outside pl-8")
        challengeList2B:AddListItem(AddTextBoldFront("Partner A:"," Heads Up! Translate the message on the sticky note using your system."))
        challengeList2B:AddListItem(AddTextBoldFront("Partner B:"," Heads down!"))
        section_activity:Add(challengeList2B)

        section_activity:AddParagraphBoldFront("Do This:"," Heads up! Check your answers. After students have checked, allow them time to update their system as needed.")

        AddHeading(section_activity, "Challenge #3 - Capitals and Numbers", 3)
        
        section_activity:AddParagraphBoldFront("Do This:","")
        UnorderedList challengeList3A
        challengeList3A:AddClassAttribute("list-disc list-outside pl-8")
        challengeList3A:AddListItem(AddTextBoldFront("Partner A:"," Heads down!"))
        challengeList3A:AddListItem(AddTextBoldFront("Partner B:"," On a sticky note, use your system to write the message: Free at 5?"))
        section_activity:Add(challengeList3A)
        UnorderedList challengeList3B
        challengeList3B:AddClassAttribute("list-disc list-outside pl-8")
        challengeList3B:AddListItem(AddTextBoldFront("Partner A:"," Heads Up! Translate the message on the sticky note using your system."))
        challengeList3B:AddListItem(AddTextBoldFront("Partner B:"," Heads down!"))
        section_activity:Add(challengeList3B)

        section_activity:AddParagraphBoldFront("Do This:"," Heads up! Check your answers. After students have checked, allow them time to update their system as needed.")

         AddHeading(section_activity, "Challenge #4 - Review all symbols", 3)
  
        section_activity:AddParagraphBoldFront("Do This:","")
        UnorderedList challengeList4A
        challengeList4A:AddClassAttribute("list-disc list-outside pl-8")
        challengeList4A:AddListItem(AddTextBoldFront("Partner A:","Heads down!"))
        challengeList4A:AddListItem(AddTextBoldFront("Partner B:"," On a sticky note, use your system to write the message: Cya 2nite!"))
        section_activity:Add(challengeList4A)
        UnorderedList challengeList4B
        challengeList4B:AddClassAttribute("list-disc list-outside pl-8")
        challengeList4B:AddListItem(AddTextBoldFront("Partner A:"," Heads Up! Translate the message on the sticky note using your system."))
        challengeList4B:AddListItem(AddTextBoldFront("Partner B:"," Heads down!"))
        section_activity:Add(challengeList4B)

        section_activity:AddParagraphBoldFront("Do This:"," Heads up! Check your answers. After students have checked, allow them time to update their system as needed.")

        section_activity:AddParagraphBoldFront("Prompt:"," Find another group. Discuss with them the following prompts:")
        UnorderedList activityList
        activityList:AddClassAttribute("list-disc list-outside pl-8")
        activityList:AddListItem("Compare your systems. How are they the same? How are they different?")
        activityList:AddListItem("What's the minimum number of bits each of your system would need per character? How do you know?")
        activityList:AddListItem("Hint: Convert your largest number in your system into binary. How many bits does this number require?")
        section_activity:Add(activityList)

        section_activity:AddParagraphBoldFront("Discuss: ","Have groups compare with each other, then move to a full group discussion. Ask groups to share out what they discussed about their systems.")
        Division discussGl = AddDisscussionGoal(section_activity)
        UnorderedList discussionList
        discussionList:AddClassAttribute("list-disc list-outside pl-8")
        discussionList:AddListItem("There's many possible systems and there's usually not a " + dq + "right" + dq + " one so long as everyone agrees.")
        discussionList:AddListItem("Adding more possibilities increases the risk of having too many characters to represent and not enough bits to do it. This is a practical example of the overflow and rounding issues from the previous lesson.")
        discussGl:Add(discussionList)

        AddHeading(section_activity, "Introduce ASCII", 3)
        UnorderedList remarkList
        remarkList:AddClassAttribute("list-disc list-outside pl-8")
        remarkList:AddListItem("You just invented your own scheme for representing text with numbers. Given we use text on our phones and computers all the time, we should assume there is a standard representation for most of the symbols you can type on an American keyboard. Today we're going to be looking at one called or ASCII (pronounced: " + dq + "Ask-ee" + dq + ") or the American Standard Code for Information Interchange")
        section_activity:Add(remarkList)

        Paragraph distributeParagraph
        distributeParagraph:AddText("Hand out copies of the ")
        Link link = distributeParagraph:AddLink("ASCII Reference Sheet", "https://docs.google.com/document/d/15pgXcGUX7XbAAGBkHfXMMLFwDP5cTKKZ-zFIfFKu9FQ/edit")
        link:AddClassAttribute("underline text-quorum-blue-150")
        distributeParagraph:AddText(" or project it. Quickly read the overview text at the beginning of the sheet.")
        section_activity:Add(distributeParagraph)

        section_activity:AddParagraphBoldFront("Teaching Tip:"," Students should be aware that ASCII exists and see how its development mirrors their own experiences in the previous activity, but they are not required to memorize the ASCII table. If your students are able to quickly recognize the point of the ASCII table feel free to move on to the wrap up.")
        

        section_activity:AddParagraphBoldFront("Prompt:"," Compare ASCII to the system you developed.")
        UnorderedList promptList
        promptList:AddClassAttribute("list-disc list-outside pl-8")
        promptList:AddListItem("What's the same as the systems you created?")
        promptList:AddListItem("What's different?")
        promptList:AddListItem("What is most interesting or surprising about this system?")
        section_activity:Add(promptList)

        section_activity:AddParagraphBoldFront("Discuss:"," Briefly discuss these prompts as a class. At this point the main features of the system should be familiar but use this discussion to reinforce previous points.")

                        Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap up (5 Minutes)", 2)
        UnorderedList wrapUpList
        wrapUpList:AddClassAttribute("list-disc list-outside pl-8")
        wrapUpList:AddListItem("Representing text is an example of " + AddStrongTag("abstraction") + ", which is when we create simplified representations of something more complex. This lets us hide the details and instead focus on problems at a higher level.")
        section_wrap:Add(wrapUpList)

        AddHeading(section_wrap, "Prompt", 3)
        UnorderedList finalPromptList
        finalPromptList:AddClassAttribute("list-disc list-outside pl-8")
        finalPromptList:AddListItem("What problem were we trying to solve today?")
        finalPromptList:AddListItem("What detail from the last few lessons was hidden or out of focus?")
        section_wrap:Add(finalPromptList)

        Division discussGl1 = AddDisscussionGoal(section_wrap)
        UnorderedList finalGoalList
        finalGoalList:AddClassAttribute("list-disc list-outside pl-8")
        finalGoalList:AddListItem("Students should identify they were trying to send text messages.")
        finalGoalList:AddListItem("Students were using decimal numbers instead of binary numbers or AB patterns")
        discussGl1:Add(finalGoalList)

         AddHeading(section_wrap, "Remarks", 3)
        UnorderedList finalRemarks
        finalRemarks:AddClassAttribute("list-disc list-outside pl-8")
        finalRemarks:AddListItem("Sending text messages is an example of " + AddStrongTag("abstraction") + ". For a computer, each character is really just a number, which itself is really a binary number. It all comes back to zeroes and ones!")
        section_wrap:Add(finalRemarks)
        section_wrap:AddParagraphBoldFront("Prompt:"," What is another example of an abstraction in your everyday life? Something where you don't completely understand how it works but you can still use it with confidence?")

        section_wrap:AddParagraphBoldFront("Discussion Goal:"," Student answers will vary. Examples: driving a car, turning on the lights in your room, riding in an elevator, etc.")

                                    Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Check for Understanding", 2)

         AddHeading(section_assessment, "For Students", 3)
        section_assessment:AddParagraph("Open a word doc or google doc and copy/paste the 3 following question.")

        AddHeading(section_assessment, "Question", 3)
        section_assessment:AddParagraph("" + dq + "The binary pattern 01000001 represents the number 65." + dq + " Write a brief response explaining whether or not you believe this statement is always true. Explain your reasoning.")

                Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)
            UnorderedList align
            align:AddClassAttribute("list-disc list-outside pl-8")
                AddListItemWithBoldAtFront(align, "CSTA K-12 Computer Science Standards (2017): AP", " - Algorithms & Programming: 3A-AP-21 - Evaluate and refine computational artifacts to make them more usable and accessible.")
                AddListItemWithBoldAtFront(align, "CSTA K-12 Computer Science Standards (2017): DA", " - Data & Analysis: 3A-DA-09 - Translate between different bit representations of real-world phenomena, such as characters, numbers, and images.")
                AddListItemWithBoldAtFront(align, "CSP2021: ", "DAT-1.A.5, DAT-1.A.6, DAT-1.A.7")
            section_standards:Add(align)

         Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learning 'how Encoding of Numbers is used in the real world' as a part of Computer Science Principles curriculum in Quorum Computer Science Principles curriculum page (this page correspond to the Code.org high school Computer Science Principles curriculum page). This page is accessible for the blind and visually imapaired."
    end

    action GetSummaryName returns text
        return "CSP Internet Lesson 6 (Optional- Encoding Numbers in the Real World)"
    end
    action GetName returns text
        return "CSP Internet Lesson 6 (Optional)"
    end
    action GetShortDescription returns text
        return "how work Tortoise vs. the Hare in Quorum."
    end
    action GetLocation returns text
        return "lessons/code/internet/InternetLesson6.html"
    end

         action GetLinkName returns text
        return "Representing Text"
    end

    action GetSectionName returns text
        return "Digital Information"
    end
end