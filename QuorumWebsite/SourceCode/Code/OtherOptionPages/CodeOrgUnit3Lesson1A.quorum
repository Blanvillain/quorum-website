use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame

class CodeOrgUnit3Lesson1A is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 3 Lesson 1: The Need for Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Intro to Programming - Lesson 1: The Need for Programming Languages", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        //Division box

        bodyDiv:AddHeading("Overview", 2)  //
            Paragraph background
            background:AddText("At the beginning of this new Unit, the students will jump right into 
                an activity - building a small arrangement of LEGO blocks and then 
                creating text instructions a classmate could follow to construct the 
                same arrangement. Groups will then trade instructions to determine if 
                the instructions were clear enough to allow reconstruction of the original 
                arrangement. The wrap-up discussion is used to highlight the 
                inherent ambiguities of human language and call out the need 
                for the creation of a programming language which leaves no 
                room for interpretation.")
        bodyDiv:Add(background)






        bodyDiv:AddHeading("Goals", 2)  //
        bodyDiv:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddListItem("Assess the clarity of a set of instructions expressed in human language.")
        goalList:AddListItem("Create a set of instructions in human language for building a simple LEGO block arrangement.")
        goalList:AddListItem("Identify connections between the ability to program and the ability to solve problems.")
        goalList:AddListItem("Describe the ambiguities inherent in human language and the ways programming languages seek to remove those ambiguities.")
        bodyDiv:Add(goalList)






        bodyDiv:AddHeading("Purpose", 2)    //
            Paragraph purpose
                purpose:AddText("This is the first in a 3-lesson sequence 
                    in which we attempt to make connections between programming 
                    languages, the creative act of programming, and algorithms for the students.
                                        The main activity is a derivative of a 
                    classic strategy for beginning to learn about programming - 
                    writing precise instructions for another person to do just 
                    about anything - making a peanut butter and jelly sandwich, 
                    a simple line drawing, an arrangement of objects - is challenging. 
                    Human language is fraught with ambiguities and assumptions that 
                    machines (computers) simply cannot handle.
                                        Thus, the first step we take is to establish 
                    the need for programming languages. ")
            bodyDiv:Add(purpose)
            Paragraph purpose2
                purpose2:AddText("The students will need to acknowledge the following: ")
                bodyDiv:Add(purpose2)  
            UnorderedList purposeList
            purposeList:AddListItem("Writing down a precise set of instructions to build a small lego 
                    structure is nearly impossible unless the students can 
                    agree on certain language constructs ahead of time, and 
                    how these language constructs will be interpreted. 
                    The main purpose of the lesson is to expose why 
                    programming languages are necessary, and how they 
                    come into being.")
            purposeList:AddListItem("When someone formalizes language or commands that 
                    describe actions, that person is making a kind of code. This is 
                    also necessary for computers, which are simply machines that 
                    can perform a number of different tasks. In order to write 
                    instructions for the computer to do something, people must 
                    agree on the " + dq + "code" + dq + " and each action must have a precise, 
                    unambiguous meaning. This is a programming language. ")
                bodyDiv:Add(purposeList)
  
            Paragraph purpose3
                purpose3:AddText("Novices might think that a programming language seems 
                    like an archaic, impenetrable mass of abstract word 
                    groupings, but all programming languages are derived 
                    from the human need to concisely give instructions to 
                    a machine.")
            bodyDiv:Add(purpose3)








        bodyDiv:AddHeading("Resources", 2)
            UnorderedList reso
            reso:AddListItemLink("Download LEGO Instructions - Activity Guide (MS Word)", "/files/code/U3L01 Activity Guide - LEGO Instructions.docx")
            reso:AddListItemLink("Download LEGO Instructions - Activity Guide (PDF)","/files/code/Unit3/U3L01 Activity Guide - LEGO Instructions.pdf")
            bodyDiv:Add(reso)
            UnorderedList reso1
            reso1:AddListItem("5-6 LEGO blocks per group of students")
            bodyDiv:Add(reso1)






        bodyDiv:AddHeading("Getting Started", 2)
            Paragraph getStart
                getStart:AddText("Welcome to Unit 3 - Introduction to Programming. This unit is an introduction to the principles of programming. As you'll notice one of the most important things you can do in programming starts well before you write any code. It's about how you think. We're going to launch into an activity right now that reveals an important principle of programming. Try your best, and we'll discuss at the end.")
        bodyDiv:Add(getStart)

        bodyDiv:AddHeading("Tips", 4)
            Paragraph protip1
                protip1:AddText("The students may be eager to program, but recognize that the course is about " + dq + "principles" + dq + " of programming, and as a class, we want to establish some of the thinking habits that people who are " + dq + "good" + dq + " at programming seem to have " + dq + "naturally." + dq + " There is nothing natural about it - these ways of thinking, these insights, are learned and practiced. And this thinking capabilities start here.")
        bodyDiv:Add(protip1)





        bodyDiv:AddHeading("Activity: LEGO Instruction", 2)
            Paragraph LEGO
            LEGO:AddText("After downloading the activity guide, follow the setup instructions below:")
            bodyDiv:Add(LEGO)
            UnorderedList legoAct
                legoAct:AddListItem("The students can record their instructions on a plain sheet of paper, poster paper, piece of construction paper, etc. ")
                legoAct:AddListItem("The students are encouraged to work in groups of 2 or 3 (but can work alone)")
                legoAct:AddListItem("Each group should be given 5-6 LEGO blocks")
        bodyDiv:Add(legoAct)
        bodyDiv:Add(break)
        Paragraph LEGO1
        LEGO1:SetClassAttribute("cool-box")
        LEGO1:AddText("<b>Tips for the teachers</b>: To make things interesting, try to strike a balance between all blocks being different colors and all blocks being the same. This forces students to be precise in identifying which block should be used in each step.")
        bodyDiv:Add(LEGO1)
        bodyDiv:AddHeading("Create a simple LEGO arrangement (and record it)", 4)
            UnorderedList legoAct1
                legoAct1:AddListItem("All pieces must be connected in a single arrangement.")
                legoAct1:AddListItem("The final arrangement must be absolutely identical to the original.")
                legoAct1:AddListItem("Groups should record their arrangement by taking a picture or creating a simple drawing.")
        bodyDiv:Add(legoAct1)

        bodyDiv:AddHeading("Write instructions for an arrangement that a student built", 4)
            UnorderedList legoAct2
                legoAct2:AddListItem("The student may only use words when creating these instructions. In particular, the student may not include images or drawings.")
                legoAct2:AddListItem("Ask the students to make the instructions as clear as possible. Let the students know that their classmates are about to use these instructions!")
        bodyDiv:Add(legoAct2)

        bodyDiv:AddHeading("Trade instructions and attempt to follow them", 4)
            Paragraph legoActPara
                legoActPara:AddText("The students should disassemble their arrangements, place their instructions next to the LEGO pieces, and hide their record of the arrangement. Have another person or group to follow the instructions to build the desired arrangements. The student who made the instruction should check whether the solutions are correct or let the person or the groups that followed the instructions check their solutions themselves by inspecting the recorded image of the arrangement afterwards.")
        bodyDiv:Add(legoActPara)







        bodyDiv:AddHeading("Wrap Up", 2)   //"2" means second level. which has a larger font than a "4" level
        bodyDiv:AddParagraph("Below are some of the questions and main points you can use to facilitate a discussion about the difficulty of writing instructions:")
            UnorderedList wrapupList
                wrapupList:AddListItem("<b>Prompt</b>: Were you always able to create the intended arrangement? Were your instructions as clear as you thought?")
                wrapupList:AddListItem("<b>Prompt</b>: Why do you think we are running into these miscommunications? Is it really the fault of your classmates or is something else going on?")
                wrapupList:AddListItem("<b>Prompt</b>: Where was the language ambiguous?")
                wrapupList:AddListItem("<b>Prompt</b>: Were your instructions not as detailed as you thought?")
                wrapupList:AddListItem("<b>Prompt</b>: If we were going to change human language to improve our odds of succeeding at this activity, what types of changes would we need to make?")
                bodyDiv:Add(wrapupList)
                bodyDiv:Add(break)
            UnorderedList wrapupList1
                wrapupList1:AddListItem("Even when we are very careful, the very nature of human language means there is typically some room for interpretation. In day-to-day life that's fine, but when expressing algorithms we need to do better.")
                wrapupList1:AddListItem("So long as there are multiple ways to interpret language, we cannot have perfect precision.")
                wrapupList1:AddListItem("If we rigorously define the meaning of each command we use, then we can avoid misinterpretation and confidently express algorithms.")
                wrapupList1:AddListItem("This is different from the way we normally think and talk, and it might even take a while to get comfortable with communicating in this way.")
        bodyDiv:Add(wrapupList1)

        bodyDiv:AddHeading("Discussion Goal", 4)
            UnorderedList discuss
                discuss:AddListItem("Recognize that ambiguity in human language led to issues or at least difficulty in creating the arrangements.")
                discuss:AddListItem("Recognize the need to create a well-defined set of commands that all parties can agree upon for expressing the steps of a task, or in other words, a programming language.")
        bodyDiv:Add(discuss)

        bodyDiv:AddHeading("The Need for Programming Languages", 4)
        bodyDiv:AddParagraph("Students may say things like " + dq + "We could be really careful about our language" + dq + " or " + dq + "We could include more detail." + dq + " These are entirely true, but emphasize that if there's room for interpretation then we can't be certain about our results. Move towards the solution of creating a new language (a programming language!) in which we have strictly and precisely defined exactly what every word means. This is different from our normal human language, but necessary if we want perfect clarity in expressing instructions.")
            Paragraph programming
                programming:AddText("Today the students saw how the human language may not always be precise enough to express algorithms, even for something as simple as building a small LEGO arrangement. The improvements you have suggested actually create a new kind of language for expressing algorithms, which we as computer scientists call a programming language. In the coming unit we are going to learn a lot more about how we can use programming languages to express our ideas as algorithms, build new things, and solve problems.")
        bodyDiv:Add(programming)

        InlineFrame inlineFrame
                inlineFrame:SetHeight("480")
                inlineFrame:SetWidth("854")
        //inlineFrame:SetAddress("https://www.youtube.com/embed/5o8CwafCxnU")
                inlineFrame:SetAddress("https://www.youtube.com/embed/xfBWk4nw440")
        //inlineFrame:SetHeight("550")
        //inlineFrame:SetWidth("550")
        //inlineFrame:SetSeamless(true)
        bodyDiv:Add(inlineFrame)

        UnorderedList vid
            vid:AddListItemLink("Video: You Should Learn to Program: Christian Genco at TEDxSMU", "https://www.youtube.com/watch?v=xfBWk4nw440")
        bodyDiv:Add(vid)








        bodyDiv:AddHeading("Assessment", 2)
            OrderedList assess
                assess:AddListItem("<b>Q1</b>: Ask the students to consider the algorithm that they designed for today's activity, and identify two instances where there may be multiple ways to interpret the instructions and suggest improvements that could be made to improve clarity.")
                assess:AddListItem("<b>Q2</b>: Ask the students to describe the features of a programming language that make it different from the language that the students are used to using in everyday life. Explain why a programming language must be created in this way.")
        bodyDiv:Add(assess)







        bodyDiv:AddHeading("Extended Learning", 2)
            Paragraph extL
                extL:AddText("Ask the student to rigorously define a small set of commands that could be used to build any arrangement of LEGO blocks. For example: " + dq + "rotate," + dq + " " + dq + "attach," + dq + " " + dq + "detach," + dq + " " + dq + "move," + dq + " etc. Feel free to test out these new and more precise set of commands by repeating today's activity using them.")
        bodyDiv:Add(extL)






        bodyDiv:AddHeading("Standards Alignment", 2)

            UnorderedList list
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CL.L2:3")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CPP.L2:4, CPP.L2:8")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CT.L1:6-01")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CT.L2:3")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "4.1.2 (A, B, C, F, I)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "5.2.1 (E)")
        bodyDiv:Add(list)

/* Completed 12/30/17 by Ko */

        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn about programming languages and why we need them."
    end

    action GetSummaryName returns text
        return "Code.Org Unit3 Intro to Programming Lesson 1 (The Need for Programming Languages)"
    end
    action GetName returns text
        return "Code.Org Unit3 Intro to Programming Lesson 1"
    end
    action GetShortDescription returns text
        return "Learn " + dq + "Why we need the Programming Languages" + dq 
    end
    action GetLocation returns text
        return "lessons/code/Algorithm-Programming/Lesson1A.html"
    end

end
