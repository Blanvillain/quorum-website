use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame

class CodeOrgUnit3Lesson10A is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 3 Lesson 10: Practice PT - Design a Digital Pattern")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Intro to Programming - Lesson 10: Practice PT - Design a Digital Pattern", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        //Division box
        Division studentInstruction
        studentInstruction:SetClassAttribute("cool-box")


        Division studentInstruction1
        studentInstruction1:SetClassAttribute("cool-box")


        Division studentInstruction2
        studentInstruction2:SetClassAttribute("cool-box")


        Division studentInstruction3
        studentInstruction3:SetClassAttribute("cool-box")


        bodyDiv:AddHeading("Overview", 2)
            Paragraph ov1
                ov1:AddText("To conclude their introduction to programming, 
                        students will design a program that draws a digital scene of their choosing. 
                        They will use Top-Down Design to identify the high-level actions 
                        necessary to create that image. Then, they will work on these components 
                        one by one. Finally, they'll combine all of their code to compose 
                        the whole pattern. The project concludes with reflection 
                        questions similar to those they will encounter on the APÂ® Performance 
                        Tasks. If possible, it is recommended that they go through 
                        this programming task in small groups - not with a teacher. 
                        In a group, they would assign each member of the group to write 
                        individual actions; then, they would combine these actions into one completed program 
                        to produce the digital pattern.")
        bodyDiv:Add(ov1)
            Paragraph ov2
                ov2:AddText("Note: This is NOT the official 
                        AP Performance Task that will be submitted as part of the 
                        Advanced Placement exam; it is a practice activity intended 
                        to prepare them for some portions of their individual 
                        performance task at a later time.")
        bodyDiv:Add(ov2)
            Paragraph ov3
                ov3:AddText("AP is a trademark registered and/or 
                        owned by the College Board, which was not involved in the 
                        production of, and does not endorse, this curriculum.")
        bodyDiv:Add(ov3)



        bodyDiv:AddHeading("Vocabulary", 2)
            UnorderedList voc
                AddListItemWithBoldAtFront(voc, "Abstraction: ", "a simplified representation of something more complex. Abstractions allow you to hide details to help you manage complexity, focus on relevant concepts, and reason about problems at a higher level.")
        bodyDiv:Add(voc)



        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
            UnorderedList goalList
                goalList:AddListItem("Write programs that address one component of a larger programming problem and integrate them with other similarly designed programs.")
                goalList:AddListItem("Collaborate to break down a complex programming problem into its component parts.")
                goalList:AddListItem("Use code written by other programmers to complete a larger programming task.")
                goalList:AddListItem("Write responses to AP-style prompts.")
        bodyDiv:Add(goalList)



        bodyDiv:AddHeading("Purpose", 2)
            Paragraph purpose
                purpose:AddText("Abstraction is an important tool in 
                    programming, not only because it allows individual programmers 
                    to break down complex problems, but because it enables effective 
                    forms of collaboration. Once a problem has been broken down 
                    into its component parts, teams of programmers (sometimes 
                    dozens or more) can attack individual components of that 
                    problem in parallel. This style of programming requires 
                    clear communication and a shared understanding of the 
                    high-level requirements of the software. If implemented 
                    carefully, however, it can be an effective strategy 
                    for rapidly producing large and complex pieces of 
                    software.")
        bodyDiv:Add(purpose)



        bodyDiv:AddHeading("Resources",2)
        bodyDiv:AddHeading("Practice PT - Written Responses Template", 4)
            UnorderedList stuResTemp
                stuResTemp:AddListItemLink("Practice PT - Written Responses Template (PDF file with graphics)", "/files/code/Unit3/U3L10 Practice PT - Student Written Response Template.pdf")
                stuResTemp:AddListItemLink("Practice PT - Written Responses Template (MS Word file)", "/files/code/Unit3/U3L10 Practice PT - Student Written Response Template.docx")
                stuResTemp:AddListItemLink("Practice PT - Written Responses Template (Rich Text Format file)", "/files/code/Unit3/U3L10 Practice PT - Student Written Response Template.rtf")
                stuResTemp:AddListItemLink("Practice PT - Written Responses Template (Braille Ready Format file)", "/files/code/Unit3/U3L10 Practice PT - Student Written Response Template.brf")
        bodyDiv:Add(stuResTemp)

        bodyDiv:AddHeading("Design a Digital Scene - Project Guide", 4)
            UnorderedList stuResTemp2
                stuResTemp2:AddListItemLink("Design a Digital Scene - Project Guide (PDF file with graphics)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene [Updated Oct. 2017].pdf")
                stuResTemp2:AddListItemLink("Design a Digital Scene - Project Guide (MS Word file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene [Updated Oct. 2017].docx")
                stuResTemp2:AddListItemLink("Design a Digital Scene - Project Guide (Rich Text Format file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene [Updated Oct. 2017].rtf")
                stuResTemp2:AddListItemLink("Design a Digital Scene - Project Guide (Braille Ready Format file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene [Updated Oct. 2017].brf")
        bodyDiv:Add(stuResTemp2)

        bodyDiv:AddHeading("Design a Digital Scene - AP Rubric", 4)
            UnorderedList stuResTemp3
                stuResTemp3:AddListItemLink("Design a Digital Scene - AP Rubric (PDF file with graphics)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - AP Rubric [Updated].pdf")
                stuResTemp3:AddListItemLink("Design a Digital Scene - AP Rubric (MS Word file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - AP Rubric [Updated].docx")
                stuResTemp3:AddListItemLink("Design a Digital Scene - AP Rubric (Rich Text Format file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - AP Rubric [Updated].rtf")
                stuResTemp3:AddListItemLink("Design a Digital Scene - AP Rubric (Braille Ready Format file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - AP Rubric [Updated].brf")
        bodyDiv:Add(stuResTemp3)

        bodyDiv:AddHeading("Design a Digital Scene - Project and Programming Rubric", 4)
            UnorderedList stuResTemp4
                stuResTemp4:AddListItemLink("Design a Digital Scene - Project and Programming Rubric (PDF file with graphics)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - Project and Programming Rubric.pdf")
                stuResTemp4:AddListItemLink("Design a Digital Scene - Project and Programming Rubric (MS Word file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - Project and Programming Rubric.docx")
                stuResTemp4:AddListItemLink("Design a Digital Scene - Project and Programming Rubric (Rich Text Format file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - Project and Programming Rubric.rtf")
                stuResTemp4:AddListItemLink("Design a Digital Scene - Project and Programming Rubric (Braille Ready Format file)", "/files/code/Unit3/U3L10 Practice PT - Design a Digital Scene - Project and Programming Rubric.brf")
        bodyDiv:Add(stuResTemp4)
//
//        bodyDiv:AddHeading("Teacher's Tip", 4)
//            Paragraph tTip0
//                tTip0:SetClassAttribute("cool-box")
//                tTip0:AddText("We have prepared the documents in 
//                    different file formats to accommodate your special technology 
//                    setting to read the documents.")
//        bodyDiv:Add(tTip0)
//
//        bodyDiv:AddHeading("Sample Solution", 4)
//            Paragraph sol
//                sol:AddText("Following is one example/possibility 
//                    of a coding solution for the challenge above:")
//        bodyDiv:Add(sol)
//            UnorderedList solList
//                solList:AddListItemLink("Exemplar Solution: for Final Project", "/files/code/Unit3/U3L10-Solution-FinalProject.rtf")
//        bodyDiv:Add(solList)



        bodyDiv:AddHeading("Getting Started", 2)
            Paragraph gs
                gs:AddText("The list of documents given in the " + dq + "Resources" + dq + " section are 
                    the same documents used in the Code.org CSP curriculum. 
                    These documents are still very applicable to the Quorum CSP 
                    curriculum, though they come with some exceptions: ")
        bodyDiv:Add(gs)
           UnorderedList gsList0
                gsList0:AddListItem("The programming language we use for the 
                    Quorum CSP curriculum is the Quorum Programming Language - 
                    not JavaScript.")
                gsList0:AddListItem("The students will not be evaluated for the 
                    use of " + dq + "random value" + dq + " in this part of the Practice PT 
                    project.")
                gsList0:AddListItem("Team collaboration is only 
                    evaluated if the students are able to form a decently sized team - 3 to 4 
                    people.")
        bodyDiv:Add(gsList0)

            Paragraph getStart
                getStart:AddText("<b>Reading Requirements:</b> Read through the 
                    guidelines of the project together and address any high-level 
                    questions about the aims of the project. The students will have a 
                    chance to review the requirements once they are placed in groups.")
                bodyDiv:Add(getStart)
            Paragraph getStart1
                getStart1:AddText("<b>Emphasize and call out connections 
                    to the AP Create PT:</b> the students will be going through many of the same 
                    processes for this project as they will for the AP Create PT. 
                    The things we are not doing here are:")
                bodyDiv:Add(getStart1)
            UnorderedList gsList2
                gsList2:AddListItem("We are not coming up with the idea 
                    for the project - we are framing it as " + dq + "Design a Digital 
                    Pattern." + dq)
                gsList2:AddListItem("We are not making a video of our code running.")
                gsList2:AddListItem("We are ignoring the writing prompts about algorithms.")
                bodyDiv:Add(gsList2)

        bodyDiv:AddParagraph("Don't worry, we'll address these things later in Unit 5.")

        bodyDiv:AddHeading("Proposed Schedule", 4)
            Paragraph schedule
                schedule:AddText("Once placed in groups (ideally 
                    3 or 4 people for this project), a proposed schedule of the steps of this 
                    project is included below, as well as more thorough explanations of 
                    how to conduct the various stages:")
        bodyDiv:Add(schedule)
            UnorderedList schList
                AddListItemWithBoldAtFront(schList, "Day 1 - ", "Review the project guidelines and the rubric. If you are working in groups, create and follow a Group Project Planning guide. Then complete the Project Description document as a group. Your group should break the target pattern into high-level actions, define their behavior, and complete the Project Component Table. Each member in the group should then begin programming their individual components.")
                AddListItemWithBoldAtFront(schList, "Day 2 - ", "The students should continue to work on programming their individual actions. Groups should begin combining their actions and each student should begin working on his or her digital patterns individually.")
                AddListItemWithBoldAtFront(schList, "Day 3 - ", "The students should finalize their digital patterns.")
        bodyDiv:Add(schList)



        bodyDiv:AddHeading("Activity: Final Project " + dq + "Diamond in a Frame" + dq + "", 2)        
            Paragraph quorumAction
                quorumAction:AddText("This is the last project that the students will use the 
                    Quorum Turtle Module for. It is also the most difficult. Students will 
                    need to write the entire program (preferably with a partner). 
                    Once they have completed the program, each student should use his or her completed code to practice 
                    writing the PT (Performance Task) report for AP 
                    Computer Science Principles credit.")
        bodyDiv:Add(quorumAction)

        bodyDiv:AddHeading("Teacher's Tip", 4)
            Paragraph tTip2
                tTip2:SetClassAttribute("cool-box")
                tTip2:AddText("For the students who do not have the 
                    benefit of accessing the computer screen visually, this project 
                    can still be done with listening to the sound cue of the 
                    QTM and meticulously checking with which lines are drawn 
                    when the program finished running. However, if they have 
                    access to a tactile graphic enhancer, it would certainly 
                    help them to better understand the project and write their 
                    code for it.")
        bodyDiv:Add(tTip2)

        bodyDiv:AddHeading("Three Different Projects to Try", 3)
        //studentInstruction:AddHeading("Student Instructions", 4)
        studentInstruction:AddHeading("First Project", 4)
            Paragraph picDesc1
                picDesc1:SetClassAttribute("cool-box")
                picDesc1:AddText("The picture below shows a jagged 
                    diamond shape inside of a picture frame. The diamond has four 
                    sides. One side consists of the turtle movements of up, 
                    left, up, left, up. The frame looks like stacked up 
                    squares - with each side of a square being one block 
                    length. The entire frame consists of 9 squares on left 
                    end, right end, top end and bottom end. Note: Of the 9 
                    squares for each side, the first and last squares overlap with
                    the first or last square of the adjacent side. In other words,
                    the frame has corner squares that are included in the count of
                    9 squares for two sides.")
        studentInstruction:Add(picDesc1)

        studentInstruction:AddImage("/files/code/Unit3/LargeDiamondInLargeFrame1.png", "Large Diamond in Large Frame")

        SideBySideIDE CSP_U3L10_1
        CSP_U3L10_1:SetUniqueIdentifier("CSP_U3L10_1")
        CSP_U3L10_1:GetIDETitle():AddText("Quorum Turtle Module: Challenge Unit 10 Number 1")
        CSP_U3L10_1:SetGameEnvironment(false)
        CSP_U3L10_1:GetIDEInputArea():AddText("
use Libraries.Curriculum.TurtleProgram.TurtleGame
class Main is TurtleGame
     action Main
        StartGame()
     end

     action TurtleCommands

     end
end
")
        CSP_U3L10_1:Setup()
        studentInstruction:Add(CSP_U3L10_1)
        bodyDiv:Add(studentInstruction)
        bodyDiv:Add(break)

        studentInstruction2:AddHeading("Second Project", 4)
            Paragraph picDesc2
                picDesc2:SetClassAttribute("cool-box")
                picDesc2:AddText("The picture below shows a small 
                    diamond shape - which looks like a plus sign -  inside of a 
                    picture frame. The diamond has four sides. One side consists 
                    of the turtle movements of up, left, up. The frame looks like 
                    stacked up squares - with one side of the square being 
                    one block length. The entire frame consists of 8 squares 
                    on the left end, right end, top end and bottom end. Note: Of 
                    the 8 squares for each side, the first and last squares overlap
                    with the first or last square of the adjacent side. In other words,
                    the frame has corner squares that are included in the count of
                    8 squares for two sides.")
        studentInstruction2:Add(picDesc2)


        studentInstruction2:AddImage("/files/code/Unit3/SmallDiamondMediumFrameOffSet1.png", "Small Diamond in Medium Frame")


        SideBySideIDE CSP_U3L10_2
        CSP_U3L10_2:SetUniqueIdentifier("CSP_U3L10_2")
        CSP_U3L10_2:GetIDETitle():AddText("Quorum Turtle Module: Challenge Unit 10 Number 2")
        CSP_U3L10_2:SetGameEnvironment(false)
        CSP_U3L10_2:GetIDEInputArea():AddText("
use Libraries.Curriculum.TurtleProgram.TurtleGame
class Main is TurtleGame
     action Main
        StartGame()
     end

     action TurtleCommands

     end
end
")
        CSP_U3L10_2:Setup()
        studentInstruction2:Add(CSP_U3L10_2)
        bodyDiv:Add(studentInstruction2)

        bodyDiv:Add(break)

        studentInstruction3:AddHeading("Third Project", 4)
            Paragraph picDesc3
                picDesc3:SetClassAttribute("cool-box")
                picDesc3:AddText("The picture below has a small diamond shape - 
                    which looks like a plus sign - inside of a picture 
                    frame. The diamond has four sides. One side consists of 
                    the turtle movements of up, left, up. The frame looks 
                    like stacked up squares - with one side of the square 
                    being one block length. The entire frame consists of 7 
                    squares on left end, right end, top end, and bottom end. 
                    Note: Of the 7 squares for each side, the first and last squares 
                    overlap with the first or last square of the adjacent side. In other
                    words, the frame has corner squares that are included in the count of 
                    7 squares for two sides.")
        studentInstruction3:Add(picDesc3)

        studentInstruction3:AddImage("/files/code/Unit3/SmallDiamondSmallFrame1.png", "Small Diamond in Small Frame")

        SideBySideIDE CSP_U3L10_3
        CSP_U3L10_3:SetUniqueIdentifier("CSP_U3L10_3")
        CSP_U3L10_3:GetIDETitle():AddText("Quorum Turtle Module: Challenge Unit 10 Number 3")
        CSP_U3L10_3:SetGameEnvironment(false)
        CSP_U3L10_3:GetIDEInputArea():AddText("
use Libraries.Curriculum.TurtleProgram.TurtleGame
class Main is TurtleGame
     action Main
        StartGame()
     end

     action TurtleCommands

     end
end
")
        CSP_U3L10_3:Setup()
        studentInstruction3:Add(CSP_U3L10_3)
        bodyDiv:Add(studentInstruction3)

        bodyDiv:AddHeading("Tips for coding this project", 4)
            Paragraph code1
                code1:AddText("While students are writing these programs, ask them to be 
                    consistent with the PT requirement described in the " + dq + "Design a 
                    Digital Pattern - AP Rubric" + dq + " and " + dq + "Design a Digital Pattern 
                    - Project and Programming Rubric." + dq + " When completed, their code 
                    in the Main Coding Area should be just one line, calling an action. 
                    Their action needs to be able to accept multiple parameters 
                    that control: (1) how large the picture frame should be, (2) 
                    how large the diamond should be, (3) where the diamond appears 
                    inside of the frame.")
        bodyDiv:Add(code1)
            Paragraph code2
                code2:AddText("When calling their action in the Main Coding 
                    Area, however, students should quickly notice some limitations in the range 
                    of the parameter they can put in, due to the practical limitation of 
                    the working space in QTM. If they input parameters without 
                    care, their diamond may overlap with a part of the frame, 
                    or it may not even fit in the frame at all.")
        bodyDiv:Add(code2)
            Paragraph code3
                code3:AddText("Once they complete their code, revisit 
                    the " + dq + "Design a Digital Pattern - Project Guide" + dq + " and " + dq + "Practice PT - 
                    Written Responses" + dq + " with students before they practice their PT report.")
        bodyDiv:Add(code3)

        bodyDiv:AddHeading("Activity: Written Reflection and Program Code", 2)
            UnorderedList refList
                AddListItemWithBoldAtFront(refList, "Reflection Questions: ", "Have students complete the reflection questions using the Practice PT - Written Responses - Student AP Response Template, or simply have them write these responses in a plain text document.")
                AddListItemWithBoldAtFront(refList, "Program Code: ", "The students should simply copy and paste their code into a document platform that does not have an automatic line-wrapping function - such as " + dq + "Notepad" + dq + " or " + dq + "Text Wrangler." + dq)
        bodyDiv:Add(refList)
        bodyDiv:AddHeading("Project Submission", 4)
            Paragraph tTip3
                tTip3:SetClassAttribute("cool-box")
                tTip3:AddText("The following suggestions may benefit students 
                    when preparing their documentation for this project's PT report.")
        bodyDiv:Add(tTip3)
            OrderedList submission
                submission:AddListItem("<b>Student written responses</b> - the students can 
                    use a digital document (e.g. Google doc, Word doc) and send an AP-style PDF of their responses 
                    to the teacher by some means (digital drive, email, etc.) or even a printed 
                    hardcopy. Use the " + dq + "Design a Digital Pattern - AP Rubric" + dq + " to score it.")
                submission:AddListItem("<b>Student code</b> - ask the 
                    students to mimic the AP requirement of submitting: a PDF of their 
                    code with the abstraction they developed highlighted with a 
                    rectangle drawn around it. We recommend using " + dq + "CodePrint" + dq + " 
                    to do this. The teacher can collect this as a PDF or ask students 
                    to print out a hardcopy. If the teacher would like to assess the 
                    students' code for the programming concepts and skills developed 
                    in this unit, use the " + dq + "Design a Digital Pattern - Project and 
                    Programming Rubric." + dq)
                submission:AddListItem("<b>Group planning guide</b> - we do not recommend 
                    evaluating or assessing the group planning guide beyond basic completion if 
                    the teacher plans to use the " + dq + "Design a Digital Pattern - Project 
                    and Programming Rubric." + dq)
        bodyDiv:Add(submission)



      bodyDiv:AddHeading("Wrap Up", 2)
      bodyDiv:AddHeading("Optional Presentation",4)
      Paragraph wrap1
      wrap1:AddText("If time allows, students may wish to have an opportunity 
            to share their projects with one another. One option is to create a " + dq + "Digital 
            Art Gallery" + dq + " by posting all projects to a shared document or folder.")
      bodyDiv:Add(wrap1)



        bodyDiv:AddHeading("Extended Learning", 2)
            Paragraph el
                el:AddText("For the students who finished early, they can read through other students' code and identify which functions of another students' code can be incorporated into their own code.")
            bodyDiv:Add(el)



        bodyDiv:AddHeading("Standards Alignment", 2)
            UnorderedList list
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CL.L2:3")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CPP.L2:5")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CPP.L3A:3, CPP.L3A:4")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CT.L2:12, CT.L2:6")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CT.L3A:1, CT.L3A:3")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards: ", "CT.L3B:4")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "2.2.1 (C)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "2.2.2 (A, B)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "2.2.3 (A, B)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "4.1.1 (D)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "5.1.2 (B, C)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "5.1.3 (A, B, C, D, E, F)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "5.3.1 (A, C, D, F, G, L)")
                AddListItemWithBoldAtFront(list, "Computer Science Principles: ", "5.4.1 (C, D, E, F, G, H, I, J, K)")
        bodyDiv:Add(list)


/* Completed 2/26/18 by Ko */

        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Practice a performance task to prepare for the College Board AP Computer Science Principles 
            exam. Taks are written in the Quourm Programming Language"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 3 Lesson 10 (Practice PT - Design a Digital Pattern)"
    end
    action GetName returns text
        return "Code.Org Unit 3 Lesson 10"
    end
    action GetShortDescription returns text
        return "Practice performance task for the AP exam"
    end
    action GetLocation returns text
        return "lessons/code/Algorithm-Programming/Lesson10A.html"
    end

end
