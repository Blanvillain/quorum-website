use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.BoxTip
use Libraries.Web.Page.MainContent

class CodeOrgUnit1L04 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 1 Lesson 4: Binary Numbers")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Digital Information - Lesson 4: Binary Numbers", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Overview", 2)
            Paragraph overview
            overview:AddText("In this lesson, students will practice representing numbers in binary (base 2), transitioning from the circle-square representations they made in the last lesson. Students will create and use a " + dq + "Flippy Do" + dq + ", a manipulative which helps students convert between binary (base 2) and decimal (base 10) numbers. They will practice converting numbers and explore the concept of place value in the context of binary numbers.")
            bodyDiv:Add(overview)

//        bodyDiv:AddHeading("Background", 2)
//            Paragraph background
//            background:AddText("There are many different number systems, and you've probably heard of a couple of them! The number system we typically use for things like expressing the cost of something is called base-10, but there are lots of other systems that are used for different purposes. All of these systems share two things: first, they all use symbols or markings to represent values; and second, they all have rules for how to move from one value to the next. Today we're going to explore different patterns that can be represented with three symbols (a circle, triangle, and square), and develop our own rules for moving from one set of patterns to the next.")
//            bodyDiv:Add(background)

        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
        
        UnorderedList goalList
        goalList:AddListItem("Represent decimal numbers using combinations of binary (base 2) digits 0 and 1")
        goalList:AddListItem("Represent binary numbers using combinations of decimal (base 10) digits 0-9")
        goalList:AddListItem("Explain how the position of each binary digit determines its place value and numeric value")
        bodyDiv:Add(goalList)

        bodyDiv:AddHeading("Purpose", 2)
            Paragraph purpose
            purpose:AddText("This lesson is designed to give students as much time as possible using the Flippy Do to get comfortable with the relationship between binary and decimal numbers and the concept of place value.")
            bodyDiv:Add(purpose)


        bodyDiv:AddHeading("Resources", 2)
        bodyDiv:AddHeading("Supplemental Code.org material",3)
        bodyDiv:AddParagraph("For the teachers")
        UnorderedList resources
        resources:AddListItemLink("How to Make a Flippy Do in print", "https://docs.google.com/document/d/1ecO5-Vg8eQVVvpjIUX8P0dAVX2Mi1-QW7zfIMFWeqgY/edit")
        resources:AddListItemLink("Flippy Do worksheet in braille, Duxbury file", "/files/code/Unit1/U1L05 FlippyDo.dxb")
        resources:AddListItemLink("Flippy Do worksheet in braille, .brf", "/files/code/Unit1/U1L05 FlippyDo.brf")
        bodyDiv:Add(resources)
        bodyDiv:AddParagraph("For the students")
        UnorderedList resources1
        resources1:AddListItemLink("Activity Guide in large print", "https://docs.google.com/document/d/1DmzViCZqIJTEPZQ2-aVa4Z-8_3PmzgRIS_XzzPbxXsU/edit")
        resources1:AddListItemLink("Activity Guide in large braille, Duxbury file", "/files/code/Unit1/U1L05 Activity Guide Brl.dxb")
        resources1:AddListItemLink("Activity Guide in large braille, .brf", "/files/code/Unit1/U1L05 Activity Guide Brl.brf")
        bodyDiv:Add(resources1)

        bodyDiv:AddHeading("Getting Started (5 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Discuss:"," Yesterday, you created your own number system using circles and squares. What can we communicate using only two symbols? Is there a limit?")
        bodyDiv:AddParagraph("Students should quietly write an answer, then share with a partner, then discuss with the whole class.")
        
        bodyDiv:Add(break)
        Division warmUpGoal
        warmUpGoal:AddClassAttribute("cool-box")
        warmUpGoal:AddHeading("Discussion Goal", 4)
        warmUpGoal:AddParagraph("In previous lessons, students represented information using two options. This is a quick thinking question to tap into students' prior knowledge and experiences. Once students have mentioned a few of the points below, they can move on.")
        UnorderedList discussionList
        discussionList:AddListItem("The answer to a yes/no or true/false question")
        discussionList:AddListItem("Flipping a switch on/off")
        discussionList:AddListItem("Combinations of yes/no answers by using multiple symbols in a row")
        discussionList:AddListItem("We can keep adding more of the same symbols, so the only limit is how much space we have to write or store those symbols")
        warmUpGoal:Add(discussionList)
        bodyDiv:Add(warmUpGoal)

        bodyDiv:AddHeading("Activity (35 minutes)", 2)
        Paragraph lecture
        lecture:AddText(AddTextBoldFront("Lecture:"," Today's activity is introducing students to the binary number system. As a visual aid, you can use "))
        lecture:AddLink("Code.org's presentation slides for Unit 1, Lesson 4: Binary Numbers.", "https://docs.google.com/presentation/d/137WkLc4Lgld2cYrDrru-qAunb58S59GByTl4TpXWnrs/copy")            
        lecture:AddText(" These slides use a lot of animations. The lecture notes below describe when to move to the next slide or click through an animation -- if you aren't using the slides, you can ignore these prompts.")
        bodyDiv:Add(lecture)

        bodyDiv:AddHeading("Lecture", 3)
        LessonTable activityWebTable
        activityWebTable:Setup()
        
        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Binary Numbers")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Today we are going to explore how Binary Numbers work.")

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," 1 place value - 2 possible patterns")
        activityWebTable:AddRightParagraphBoldFront("Say:"," With only one place value, we only have two possible patterns: circle or square. ")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        activityWebTable:AddRightParagraphBoldFront("Say:"," For this example I'm starting with circle, but we could easily start with square instead.")
        //bodyDiv:Add(break)

        activityWebTable:NextRow()
        
        activityWebTable:AddLeftParagraphBoldFront("Slide:"," 2 place values = 4 possible patterns")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        activityWebTable:AddRightParagraphBoldFront("Say:"," With two place values, we can make two sets of the previous patterns. Then, insert circles in front of the first set and squares in front of the second set. This makes four possible patterns.")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," 3 place values = 8 possible patterns")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        activityWebTable:AddRightParagraphBoldFront("Say:"," For three place value patterns, we can make two copies of the two place value patterns. Then, just like we did before, fill in the first set with circles in front and the second set with squares in front. This makes 8 arrangements.")
        activityWebTable:AddRightParagraphBoldFront("Note:"," Computer scientists like to start counting at 0!")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Instead of two shapes, what if we had 10 shapes?")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Instead of two shapes, what if we had 10 shapes?")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," 1 place value = Ten 1-shape patterns")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        activityWebTable:AddRightParagraphBoldFront("Say:"," We could use more geometric shapes, or we could use letters, but the shapes we are used to are the numbers 0 through 9.")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," 2 places = one hundred 2-shape patterns")
        activityWebTable:AddRightParagraphBoldFront("Say:"," With two places, we have one hundred 2-shape patterns. These are the numbers 00 through 99.")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Quiz: What comes next?")
        activityWebTable:AddRightParagraphBoldFront("Say:"," What happens when we count up to the last shape?")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Suppose we have three value places, and the digits 0-9-9.")
        activityWebTable:AddRightParagraphBoldFront("Do This:"," Quick quiz! What comes after this number?")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Quiz: What comes next? (with answer to quiz)")
        activityWebTable:AddRightParagraphBoldFront("Say: ","100! When we run up to the last shape, 9, we roll over back to 0 and add one in the next place to the left. This is the place value that we have used all our lives.")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Where is this heading?")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Where is this heading?")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide: ", "" + dq + "Binary" + dq + " is a number system with 2 shapes...")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Binary is a number system with two shapes.")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Making Organized Lists -> Counting in Binary")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Instead of shapes, we use 0's and 1's. In this example, each pattern maps to a decimal number from 0 to 7.")
        
        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Make Your Flippy Do!")
        activityWebTable:AddRightParagraphBoldFront("Say:"," For today's activity, you will be creating your own Flippy Do. This is a tool that will allow you to quickly and easily translate between the decimal number base we are used to as humans and the binary number base that computers use.")
        activityWebTable:AddRightParagraphBoldFront("Distribute:"," Hand out the Flippy Do templates - one per student.")
        activityWebTable:AddRightParagraphBoldFront("Do This:"," Lead students through completing their Flippy Do's using the steps below, or following the slide as a guide. If you chose to give students already-completed Flippy Do's, explain the meaning of each row and how to use the Flippy Do.")
        
        OrderedList flippyInstructions
        flippyInstructions:AddListItem("In the top-right cell of the Flippy Do, write the first power of 2, 2<sup>0</sup>. In the cell to left, write the next power of 2, 2<sup>1</sup>. Do this until you've finished the entire top row. The last value should be 2<sup>7</sup>.")
        flippyInstructions:AddListItem("In the second row, write the whole number equivalent of each power of two in the cell above. For example, the right-most cell in the second row should read " + dq + "1" + dq + ", because that is the value of 2<sup>0</sup> in the cell just above it.")
        flippyInstructions:AddListItem("In the third row, write a " + dq + "0" + dq + " in each cell.")
        flippyInstructions:AddListItem("Write a " + dq + "1" + dq + " on the " + AddStrongTag("back") + " of each flap on the bottom -- these will be flipped up over the zeroes in the third row. Make sure the ones aren't upside down when they're flipped!")
        flippyInstructions:AddListItem("Cut on the dotted lines at the bottom.")

        activityWebTable:AddRight(flippyInstructions)

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Each place value represents one " + dq + "bit" + dq + "...")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Each place value represents one " + dq + "bit" + dq + " which is short for " + dq + "binary digit" + dq + ". A binary digit can be a zero or a one. Your flippy do has eight " + dq + "bits" + dq + ". ")
        activityWebTable:AddRightParagraphBoldFront("Click through animation. If using the slides","")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Together, eight place values, or " + dq + "bits" + dq + ", makes up one " + dq + "byte" + dq + ". Since computers represent information digitally, the lowest level components of information are bits.")

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Try Out Your Flippy Do!")
        activityWebTable:AddRightParagraphBoldFront("Do This:"," Use your Flippy Do to try out these problems:")
        activityWebTable:AddRightParagraph("Represent these decimal numbers in binary:")

        UnorderedList problems1
        problems1:AddListItem("7")
        problems1:AddListItem("20")

        activityWebTable:AddRight(problems1)
        activityWebTable:AddRightParagraph("Represent these binary numbers in decimal:")

        UnorderedList problems2
        problems2:AddListItem("0001 0010")
        problems2:AddListItem("0001 1111")

        activityWebTable:AddRight(problems2)
        activityWebTable:AddRightParagraphBoldFront("Note:"," It may be necessary to demonstrate how values can be calculated by flipping up a " + dq + "1" + dq + " for each value required to arrive at the sum of values equal to the decimal number.")
        activityWebTable:AddRightParagraph("Represent these decimal numbers in binary:")
        activityWebTable:AddRightParagraphBoldFront("Slide:"," Try Out Your Flippy Do!")
        activityWebTable:AddRightParagraphBoldFront("Do This:"," Use your Flippy Do to try out these problems:")
        activityWebTable:AddRightParagraph("For example, To convert the decimal number 10, I would flip up a one in the 8's position, because eight can fit in 10 (The next bit to the left is 16, which is too big). Then I have 2 left. I flip up a one in the 2's position. This gives me the binary number " + dq + "1010" + dq + ", which means 10 in decimal.")
        activityWebTable:AddRightParagraph("If students are having a difficult time understanding the rules of the system, remind them of the concept of place value and relate to base 10.")

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:"," Flippy Do Activity Guide")
        activityWebTable:AddRightParagraphBoldFront("Say:"," Let's continue to practice with our own two number bases, decimal and binary. After you finish each of the four parts of the Activity Guide, I want you to check your work with your partner. Feel free to use your Flippy Do as you work. ")
        activityWebTable:AddRightParagraphBoldFront("Distribute:"," Activity Guide")
        activityWebTable:AddRightParagraphBoldFront("Note:"," Encourage students to use their Flippy Do as a resource.")

        UnorderedList challenges
        challenges:AddListItem(AddTextBoldFront("Challenge 1 - All 4-bit Numbers:"," Students should produce all binary numbers with a length of 4 bits, from 0000 to 1111. They should see that all odd numbers end in 1 and even numbers end in 0. Students may also notice that the binary digits increasingly " + dq + "roll-over" + dq + " to 1's (from right to left) as numbers become larger and larger."))
        challenges:AddListItem(AddTextBoldFront("Challenge 2 - Binary Numbers with Exactly One 1:"," The goal here is for students to systematically find all binary numbers that have all zeros, except for one bit. Students should notice that the resulting decimal values are all powers of 2."))
        challenges:AddListItem(AddTextBoldFront("Challenge 3 - Conversion Practice:"," This section gives students more practice converting between number bases. The last two decimal numbers, 256 and 513, are too big to represent using the Flippy Do, however students should make the connection that more bits could be added to the left of the Flippy Do using increasing powers of 2."))
        challenges:AddListItem(AddTextBoldFront("Challenge 4 - Putting it all Together:"," The last three questions on the Activity Guide ask students to apply their understanding to new situations. The first question asks them to consider odd values. The last two questions ask students to think about how many bits are required to represent specific values in binary."))
        
        activityWebTable:AddRight(challenges)
        activityWebTable:AddRightParagraphBoldFront("Note:"," As you circulate, take an opportunity to be a Lead Learner. Help students discover the items below using the suggested questions:")
        
        UnorderedList noteList
        noteList:AddListItem(AddTextBoldFront("Reading a number vs. Placing a Number:"," Do we fill in the places on the Flippy Do starting on the left or right? Does it matter? (Yes. If we have a 5-bit number, we actually use the 5 bits on the far right. If we were to use the bits on the far left, this changes the value of the number. This is similar to adding more zeros to a decimal number.)"))
        noteList:AddListItem(AddTextBoldFront("Highest value possible with a given number of bits:"," What is the largest number we can make with 4 bits? Is the last number we can make always odd? (A meaningful pattern is that we can count as high as one less than the next bit on the left. If we have four bits, we can count up to the number 15, because the next bit has a value of 16.) "))
        noteList:AddListItem(AddTextBoldFront("Number of numbers we can make:"," How many total unique numbers are possible with 4 bits? (This is a base 2 number system. With each new bit, we double the amount of unique numbers we can make. With four bits, we can make the decimal numbers 0 to 15 (0000 to 1111), for a total of 16 unique numbers.)"))
        activityWebTable:AddRight(noteList)

        bodyDiv:Add(activityWebTable)

        bodyDiv:AddHeading("Wrap Up (5 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList closingRemarks
        closingRemarks:AddListItem("It's important to know the differences between binary and decimal number systems. As a review, the decimal number system is base-10. There are ten different symbols used to represent numbers (0-9). The binary numbers system is base-2. There are two different symbols used to represent numbers (0-1). Using our Flippy Do, we can convert between Binary and Decimal number systems.")
        closingRemarks:AddListItem("While it is easier for humans to use the decimal number system in our everyday lives, we will see later in this unit how electrical signals inside computers can be best represented by using the the binary number system.")
        bodyDiv:Add(closingRemarks)

        bodyDiv:Add(break)
        Division closingTip
        closingTip:AddClassAttribute("cool-box")
        closingTip:AddHeading("Teaching Tip", 4)
        closingTip:AddParagraphBoldFront("Number Bases:"," Number bases help us express data and reason about quantities. With ten digits on our hands and feet, the decimal (base 10) number base was natural for humans to develop. The ten symbols we use for this number base are the digits 0-9. For a computer, however, it makes more sense that data be represented in binary (base 2), as this can easily be interpreted with electrical switches set to two states: ON or OFF. The two symbols we use for this number base are the digits 0 and 1.")
        closingTip:AddParagraph("Both number bases take advantage of the concept of place value. In decimal, numbers are composed of powers of 10, increasing in value from right to left. Binary is similar, however we use powers of 2 (1, 2, 4, 8, 16, etc.). Expressed in binary, these values are 1, 10, 100, 1000, 10000, and so on. These make up the incremental place values in the binary number system.")
        closingTip:AddParagraphBoldFront("Why Binary?:"," Students will see in a later lesson how computers use binary numbers as a representation of electrical signals on a wire. The wire is always set to one of two different options: on or off. Off can be reprsented with a 0 and on with a 1.")
        bodyDiv:Add(closingTip)

        bodyDiv:AddParagraphBoldFront("Prompt:"," Now that we've had a chance to practice, let's find out what we've learned and what we still have questions about. Write down:")
        UnorderedList closingPrompt
        closingPrompt:AddListItem("3 things you learned today")
        closingPrompt:AddListItem("2 things you found interesting")
        closingPrompt:AddListItem("1 question you still have.")
        bodyDiv:Add(closingPrompt)

        bodyDiv:Add(break)
        BoxTip closingGoal
        closingGoal:AddHeading("Discussion Goal")
        closingGoal:AddParagraph("Use this exercise to help assess what students learned and what needs to be clarified.")
        bodyDiv:Add(closingGoal)

        bodyDiv:AddParagraphBoldFront("Journal:"," Add to your journal the vocab definition for bit and byte.")
        UnorderedList vocabulary
        vocabulary:AddListItem(AddItalicFront("bit:"," A contraction of " + dq + "Binary Digit" + dq + ";  the single unit of information in a computer, typically represented as a 0 or 1"))
        vocabulary:AddListItem(AddItalicFront("byte:"," 8 bits (For example 10010101)"))
        bodyDiv:Add(vocabulary)

        bodyDiv:AddHeading("Assessment: Check for Understanding", 2)
        bodyDiv:AddParagraphBoldFront("Question:"," How many bits would be needed to count all of the students in class today?")
        bodyDiv:AddParagraphBoldFront("Question:"," Each time we add another bit, what happens to the amount of numbers we can make?")
        bodyDiv:AddParagraphBoldFront("Question:"," What are the similarities and differences between the binary and decimal systems?")

        bodyDiv:AddHeading("Standards Alignment", 2)

            UnorderedList list
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): DA", " - Data & Analysis: 3A-DA-09 - Translate between different bit representations of real-world phenomena, such as characters, numbers, and images.")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "DAT-1.A.2, DAT-1.A.3, DAT-1.A.4, DAT-1.C.1, DAT-1.C.2, DAT-1.C.3, DAT-1.C.4, DAT-1.C.5")
        bodyDiv:Add(list)

        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learning the Number Systems as a part of Computer Science Principles curriculum in Quorum Computer Science Principles curriculum page (this page correspond to the Code.org high school Computer Science Principles curriculum page). This page is accessible for the blind and visually imapaired."
    end

    action GetSummaryName returns text
        return "CSP Internet Lesson 4 Sending Binary Messages with Internet Simulator"
    end
    action GetName returns text
        return "CSP Internet Lesson 4"
    end
    action GetShortDescription returns text
        return "Understanding number systems"
    end
    action GetLocation returns text
        return "lessons/code/internet/InternetLesson4.html"
    end
end