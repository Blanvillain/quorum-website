use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgDigitalInfoLesson3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 2 Lesson 3: The Need for Addressing")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("The Internet - Lesson 3: The Need for Addressing", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "The Internet - Lesson 3: The Need for Addressing")
        AddToHeadingArray(h_heading)

        bodyDiv:Add(headDiv)
        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)

        section_intro:AddParagraph("Students complete a scheduling challenge three times to explore the need for addressing messages online. Students first complete a challenge where they are allowed to talk to one another to fill out a weekly schedule. They then complete the challenge again, but this time they can only communicate using messages which are " + dq + "broadcasted" + dq + " or sent to everyone in the same group. This challenge forces students to develop shared rules for communicating to complete the scheduling activity a second and then third time. The wrap up helps students connect their experiences to real-life rules, or protocols, used on the Internet for addressing messages.")

        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
        UnorderedList goals
        goals:AddClassAttribute("list-disc list-outside pl-8")
        goals:AddListItem("Explain the need for open and shared protocols for communicating on the Internet")
        goals:AddListItem("Describe the way the Internet Protocol helps uniquely identify one another on the Internet")
        section_intro:Add(goals)

        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("Now that students have explored what it takes to link devices on a network, they are ready to learn how devices communicate with each other. Prior to this lesson, students have only interacted with point-to-point communication. In this lesson, students will instead " + dq + "broadcast" + dq + " every message to every person in the same group. This closely mimics a real life problem that computer scientists had to solve: With all the bits passing through many computers on a network, how would a computer know if it was the intended recipient? Which computer should get a reply? Internet Protocol (IP) solves a portion of this problem by assigning a unique IP address to each device and standardizing how sender and recipient are identified.")

        AddHeading(section_intro, "Resources", 3)
        UnorderedList resources
        resources:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")
        resources:AddListItemLink("The Internet: IP Addresses and DNS (Video)", "https://youtu.be/5o8CwafCxnU")
        resources:AddListItemLink("The Need For Addressing (Activity Guide)", "https://docs.google.com/document/d/1JbZgvlloovjaV5UfewWj-E1-S5zmwgiv-r8_5cASoPY/edit?usp=sharing")
        section_intro:Add(resources)       

        Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)

        AddHeading(section_gettingStarted, "Prompt", 3)
        section_gettingStarted:AddParagraph("Imagine you were in a room with 5 other people, all with the same name as you. What might happen when you start communicating? How could you solve these problems?")
        AddHeading(section_gettingStarted, "Discuss", 3)
        section_gettingStarted:AddParagraph("Have students brainstorm silently, then discuss with a neighbor, and finally share with the whole class.")

        Division warmUpGoal  = AddDisscussionGoal(section_gettingStarted)
        warmUpGoal:AddParagraph("This prompt is meant to foreshadow some of the issues students will face when they use the Internet Simulator. Key points to draw out:")
        UnorderedList warmUpList
        warmUpList:AddClassAttribute("list-disc list-outside pl-8")
        warmUpList:AddListItem("There might be confusion about who the person is trying to talk to because everyone has the same name.")
        warmUpList:AddListItem("Multiple people might be talking at once, making it hard to tell what people are talking about.")
        warmUpList:AddListItem("People may stop communicating because of the confusion.")
        warmUpGoal:Add(warmUpList)
        section_gettingStarted:Add(break)

        AddHeading(section_gettingStarted, "Remarks", 3)
        UnorderedList warmUpRemarks
        warmUpRemarks:AddClassAttribute("list-disc list-outside pl-8")
        warmUpRemarks:AddListItem("Yesterday, you created a network that had strengths and weaknesses. Today, we are going to use a tool where one of the strengths is that everyone is connected and can get communications quickly at the same time. From our discussion, you might be starting to understand some of the weaknesses of this type of network. ")
        section_gettingStarted:Add(warmUpRemarks)

        Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (30 minutes)", 2)
        
        AddHeading(section_activity, "Challenge - Week 1 (10 minutes)", 3)
        
        section_activity:AddParagraph(AddStrongTag("Group") + ": This activity works best with groups of 6, though groups of 5 and 4 are also possible. Rather than a group of 6 and a group of 4, make two groups 5.")
        Paragraph distributeParagraph
        distributeParagraph:AddText(AddStrongTag("Distribute: "))
        distributeParagraph:AddLink("The Need For Addressing (Activity Guide)", "https://docs.google.com/document/d/1JbZgvlloovjaV5UfewWj-E1-S5zmwgiv-r8_5cASoPY/edit?usp=sharing")
        section_activity:Add(distributeParagraph)

        Division activityTip = AddTeachingTip(section_activity)
        activityTip:AddParagraph(AddStrongTag("Running Each Week") + ": This lesson has students completing the same activity three times. Each time students need to create a schedule for the week that allows them to see every other member of their group on one of the days. Each time this activity should take roughly 3 - 5 minutes.")
        activityTip:AddParagraph(AddStrongTag("Running The First Week") + ": This first run of the activity gives students a feel for how it runs. This will make sure that any confusion when they do the later weeks is caused by the lack of identifying information in the messages and not simply misunderstanding what to do.")
        section_activity:Add(break)
        
        section_activity:AddParagraph(AddStrongTag("Distribute: ") + " With your group follow the directions given in the box for Week 1")
        UnorderedList temp
        temp:AddClassAttribute("list-disc list-outside pl-8")
        temp:AddListItem("If you are a group of 5, everyone cross out Sunday.")
        temp:AddListItem("If you are a group of 4, everyone cross out Sunday and Saturday.")
        temp:AddListItem("Before starting to schedule each week, choose a random day of that week when you're busy and cross it out.")
        section_activity:Add(temp)
        section_activity:AddParagraph(AddStrongTag("Run Week 1: ") + " Have students work on filling out their schedules, agreeing with one another on the days when they will meet. This should take 3 - 5 minutes for all groups to finish. When they're done ask students to quickly check that their schedules actually line up.")
        section_activity:AddParagraph(AddStrongTag("Prompt: ") + " With your group check that everyone's schedules match. Then discuss what worked well, what made this tricky, if there's anything you want to try differently in Week 2.")
        section_activity:AddParagraph(AddStrongTag("Discuss: ") + " Students do not need to share out their conversations with the class but circulate the room and listen as they discuss.")
        
        AddHeading(section_activity, "Challenge - Week 2 (10 minutes)", 3)
        section_activity:AddParagraph(AddStrongTag("Do This: ") + " Have students set up their boards for week two in the same way as last time:")
        UnorderedList subActivity2
        subActivity2:AddClassAttribute("list-disc list-outside pl-8")
        subActivity2:AddListItem("If you're a group of 4 or 5 cross out Saturday and/or Sunday.")
        subActivity2:AddListItem("Randomly cross out a day in Week 2.")
        subActivity2:AddListItem("Once you're ready you can start on Week 2, but no talking is allowed at all.")
        section_activity:Add(subActivity2)
        section_activity:AddParagraph(AddStrongTag("Do This: ") + " Complete Week 2 without talking! Instead, messages need to be " + dq + "broadcasted" + dq + " to the entire group.")

        Division broadcastTip = AddTeachingTip(section_activity)
        broadcastTip:AddParagraph(AddStrongTag("Broadcasting Messages: ") + " The important part of the challenge is making sure that any information students try to convey <i>must</i> be conveyed to the entire group simultaneously, and it isn't obvious who the sender and recipient are by the method of broadcasting. There are many ways to do this, and we've included a few examples below. Choose a way that works best for your classroom and tell your students what method they'll be using. Here are some example methods:")
        UnorderedList broadcastList
        broadcastList:AddClassAttribute("list-disc list-outside pl-8")
        broadcastList:AddListItem("Students write messages on sticky notes or scrap paper and place them in the middle of a table where everyone in the group can read them.")
        broadcastList:AddListItem("Give each group a whiteboard and markers of the same color.")
        broadcastList:AddListItem("Have each group type all of their messages in a shared Google document.")
        broadcastTip:AddParagraph(AddStrongTag("Week 4: ") + " A fourth week is included on the activity guide in case your classroom wants to run the activitiy another time at some point in the lesson. If not feel free to ignore it.")
        section_activity:Add(break)


        section_activity:AddParagraph(AddStrongTag("Prompt: ") +  " Fill out the table on the back side of your sheet. What problems did you have when communicating this time around? What solutions did you create or would you like to try for Week 3?")
        section_activity:AddParagraph(AddStrongTag("Discuss: ") + " Have students share out some of the challenges they encountered and ways they're going to try to address them the second time around.")
        AddHeading(section_activity, "Challenge - Week 4 (10 minutes)", 3)


        section_activity:AddParagraph(AddStrongTag("Do This: ") + " Agree with your group on the set of rules you'd like to try this time around for how to communicate. Then complete Week 3 like the previous two weeks. No talking!")
        section_activity:AddParagraph(AddStrongTag("Do This: ") + " Based on your experience, take 5 minutes to write down in the rules section the collective rules you and your team would advise using going forward.")
        section_activity:AddParagraph(AddStrongTag("Discuss: ") + " Have a few volunteers share the rules that their group developed.")

        Division activityGoal = AddDisscussionGoal(section_activity)
        activityGoal:AddParagraph("Use the share out to highlight common features across multiple sets of rules. Namely that:")
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Regardless of the rule, it needs to be clear and everyone needs to agree to them")
        goalList:AddListItem("The sender and receiver need to be included in all messages to be understood")
        activityGoal:Add(goalList)
        activityGoal:AddParagraph("The goal of this discussion should be to set up the wrap up discussion where students connect their experiences in this lesson to computer science concepts that will be introduced.")
        section_activity:Add(break)

        Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap up (10 Minutes)", 2)
        AddHeading(section_wrap, "Remarks", 3)
    
        UnorderedList wrapUpRemarks
        wrapUpRemarks:AddClassAttribute("list-disc list-outside pl-8")
        wrapUpRemarks:AddListItem("Today we saw a lot of really important principles that are important on the Internet. The first is that if we want to talk to each other we need to know who messages are going from and to. The other is that we all are going to need to be using the same set of rules if we want to communicate with one another. Let us watch a video about these concepts.")
        section_wrap:Add(wrapUpRemarks)

        Paragraph videoParagraph
        videoParagraph:AddText(AddStrongTag("Display: "))
        videoParagraph:AddLink("The Internet: IP Addresses and DNS (Video)", "https://youtu.be/5o8CwafCxnU")
        videoParagraph:AddText(". You can stop the video at the 3:23 mark. We watch the second half of this video in a later lesson on DNS.")
        section_wrap:Add(videoParagraph)

        AddHeading(section_wrap, "Prompt", 3)
        section_wrap:AddParagraph("What are the similarities and differences between Internet Protocol (IP) and the addressing rules our class made? Would rules like ours or IP work if they were secret?")
        AddHeading(section_wrap, "Discuss", 3)
        section_wrap:AddParagraph("Have students share their responses with a neighbor before discussing with the whole class.")

        Division wrapUpGoal = AddDisscussionGoal(section_wrap)
        wrapUpGoal:AddParagraph("Students should walk away with an understanding that both the class rules and IP are shared, open protocols. Key points:")
        UnorderedList wrapUpList
        wrapUpList:AddClassAttribute("list-disc list-outside pl-8")
        wrapUpList:AddListItem("All devices and computers on the Internet use IP to connect and communicate with each other.")
        wrapUpList:AddListItem("Devices are assigned unique numbers (converted to binary sequences) called IP addresses.")
        wrapUpList:AddListItem("All devices format the sender and receiver information the same way so that devices on different networks can still communicate.")
        wrapUpList:AddListItem("These shared rules are called protocols. The Internet as we know it is actually these sets of protocols that are used to communicate over networks.")
        wrapUpGoal:Add(wrapUpList)
       wrapUpGoal:Add(break)

        AddHeading(section_wrap, "Journal", 3)
        section_wrap:AddParagraph("Add the following vocab words and definitions to your journal: protocol, IP address, Internet Protocol.")

        AddHeading(section_wrap, "Remarks", 3)
        UnorderedList closingRemarks
        closingRemarks:AddClassAttribute("list-disc list-outside pl-8")
        closingRemarks:AddListItem("Today we took an important step in learning about the Internet. We saw that it's not just important to build a network connecting all these devices, but we need open and shared rules, or protocols, for how these devices will communicate. In coming lessons we'll be learning more about the protocols on the Internet.")
        section_wrap:Add(closingRemarks)

        Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Check for Understanding", 2)

        AddHeading(section_assessment, "For Students", 3)
        section_assessment:AddParagraph("Open a word doc or google doc and copy/paste the following 2 questions.")

        AddHeading(section_assessment, "Question 1", 3)
        section_assessment:AddParagraph("Pick the two statements from the following list that are true about the Internet Protocol (IP):")
        UnorderedList assessmentList
        assessmentList:AddClassAttribute("list-disc list-outside pl-8")
        assessmentList:AddListItem("Each device or computer on the Internet is assigned a unique IP address.")
        assessmentList:AddListItem("Each network on the Internet uses its own protocol to address messages.")
        assessmentList:AddListItem("In order to communicate two devices on the Internet must have the same IP address.")
        assessmentList:AddListItem("IP is the shared way that all devices and computers label their messages with the sender and receiver's addresses.")
        assessmentList:AddListItem("IP is a secret protocol shared between the sender and receiver.")
        section_assessment:Add(assessmentList)
        AddHeading(section_assessment, "Question 2", 3)
        section_assessment:AddParagraph("Describe how the Internet Protocol (IP) allows devices to easily connect and communicate on the Internet.")

        Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "2-NI-04, 3A-NI-04")
        AddListItemWithBoldAtFront(list, "CSP2021: ", "CSN-1.B.1, CSN-1.B.2, CSN-1.B.3, CSN-1.B.4")
        section_standards:Add(list)


        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "A lesson about protocols and sending messages on the Internet"
    end

    action GetSummaryName returns text
        return "CSP The Internet Lesson 3 The Need for Addressing"
    end

    action GetName returns text
        return "The Internet Lesson 3"
    end

    action GetShortDescription returns text
        return "Learn about IP addresses and how they're used"
    end

    action GetLocation returns text
        return "lessons/code/Digital-Information/Lesson3.html"
    end

        action GetLinkName returns text
        return "The Need for Addressing"
    end

    action GetSectionName returns text
        return "The Internet"
    end
end