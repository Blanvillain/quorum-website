use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.BlockQuote
use Libraries.Web.Page.InlineFrame

class CodeOrgUnit1L08 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 1 Lesson 8: Color Images")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")

        headDiv:AddHeading("Digital Information - Lesson 8: Color Images ", 1)
        headDiv:AddText("Plugged")

        Add(headDiv)
        Division bodyDiv

        bodyDiv:SetClassAttribute("bodyContainer")
//        bodyDiv:AddHeading("Background:", 2)
//        bodyDiv:AddParagraph("So far in this class you have solved a few problems
//        by creating and using small protocols for transmitting data over a wire, 
//        but the Internet is obviously much bigger than a single wire connecting 
//        two people. It connects billions of people and even more billions of 
//        machines. For it to work there must be open standards and protocols that
//        anyone can follow, so that any machine can communicate with any other. 
//        Without protocols it would be like machines speaking different languages. 
//        We're going to look at some of the technical issues involved with having 
//        lots of machines trying to communicate at the same time in the next several 
//        lessons. In order to set the stage we want to consider some of the big 
//        societal questions about the importance of the Internet and issues and 
//        threats to its existence.")

        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("This is a second opportunity for students to interact with the Pixelation Widget, but this time they will work with color pixels. Students start off learning that each pixel uses red, green, and blue lights that can be turned on or off using bits. They will create more color variants using an increasing amount of bits per pixel, and apply their learning by approximating an analog color image using the widget.")

        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")

        UnorderedList goals
        goals:AddListItem("Explain how bits can be used to represent the individual pixels of a color image")
        goals:AddListItem("Explain how digital data is used to approximate real-world analog data")
        bodyDiv:Add(goals)

        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("This lesson continues the story of how bits are used to represent digital images. Much like in the last lesson, students will use the Pixelation Widget to attempt to make digital approximations of analog images, this time in color. These images are produced using layers of abstraction, with each layer relying on the other to perform its process.")
        bodyDiv:AddParagraph("Students will begin to realize that analog color images have values that change smoothly and subtly, while digital images do not. The number of digital colors is also limited by the number of bits per pixel, whereas analog colors are unlimited.")

        bodyDiv:AddHeading("Resources", 2)
        UnorderedList resos
        resos:AddListItemLink("How Computers Work", "https://www.youtube.com/watch?v=USCBCmwMCDA")
        bodyDiv:Add(resos)

        bodyDiv:AddHeading("Getting Started (5 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Prompt:"," How many different shades of the color blue can you name? How many do you think there are in total?")
        bodyDiv:AddParagraphBoldFront("Discuss:"," Have students share with a partner. Then, invite a few students to share what their partner said.")
        bodyDiv:AddParagraphBoldFront("Discussion Goal:"," Start with having students name shades, but quickly transition to how many they think exist altogether. The goal here is to have students begin to wonder if computers can represent all of the vast number of shades of colors in our world. This should be a quick discussion. You can move on as soon as this point is made.")

        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList warmupRemarks
        warmupRemarks:AddListItem("Great job! We came up with many different shades of blue. As we continue today, let's keep thinking about whether there is a limit to the number of shades of blue there are in the world, and whether a computer can display all of those shades.")
        bodyDiv:Add(warmupRemarks)

        bodyDiv:AddHeading("Activity (30 minutes)", 2)
        bodyDiv:AddParagraph("For today's activity, students will again use the Pixelation Widget, which can be found in the <a href=" + dq + "https://github.com/qorf/CSP-Widgets" + dq + ">CSP-Widgets Repository</a>. While using the widget, students should use the " + dq + "Full Color" + dq + " setting for the challenges.")
        bodyDiv:AddParagraphBoldFront("Note:"," This lesson includes color images in a number of places. See the teaching tip on the right for some additional guidance that may be useful when supporting students who are color-blind.")

        bodyDiv:Add(break)
        Division colorBlindTip
        colorBlindTip:AddClassAttribute("cool-box")
        colorBlindTip:AddHeading("Teaching Tip", 4)
        colorBlindTip:AddParagraphBoldFront("In Levels 2, 4, and 5:"," The directions are written in so that students who are color-blind do not need to be able to distinguish between colors to be able to complete the task. That being said, students who are color-blind may not be able to visually check their work in the same way as other students. You can suggest that students who are color-blind ask a partner to check their work at the end of each of these levels.")
        colorBlindTip:AddParagraphBoldFront("In Levels 6 and 7:"," It is recommended that students who are color-blind do the black and white gradient image.")
        bodyDiv:Add(colorBlindTip)

        bodyDiv:AddHeading("Challenge 1", 3)
        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList explanationRemarks
        explanationRemarks:AddListItem("Last lesson, we used 1 bit for each pixel. That meant we had only two choices for each pixel -- when the bit was " + dq + "off" + dq + " the pixel was black, and when the bit was " + dq + "on" + dq + " the pixel was white.")
        explanationRemarks:AddListItem("Today, we will use 3 bits for each pixel. Each bit will control a different color of light: red, green, and blue.")
        explanationRemarks:AddListItem("With 3 bits, this means we will have 8 choices of color for each pixel. Let's see if you can make all 8 colors!")
        bodyDiv:Add(explanationRemarks)
        bodyDiv:AddParagraphBoldFront("Do This:"," Each student should try to make all 8 unique colors using 3 bits per pixel.")
        UnorderedList challenge1List
        challenge1List:AddListItem("In the Pixelation Widget, the Color Mode should be set to " + dq + "Full Color" + dq + ".")
        challenge1List:AddListItem("The Bits per Color field should be at 1.")
        challenge1List:AddListItem("Hint: Students should try turning on more than one bit at a time.")
        bodyDiv:Add(challenge1List)

        bodyDiv:AddHeading("Challenge 2", 3)
        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList challenge2Remarks
        challenge2Remarks:AddListItem("Now let's use 2 bits to control each color of light. This means there will be 6 bits total for each pixel.")
        bodyDiv:Add(challenge2Remarks)

        bodyDiv:AddParagraphBoldFront("Do This:"," In the Pixelation Widget, make three rows of pixels. Generate all the shades of red in the first row, and then do the shades of green and blue in the last two rows.")
        UnorderedList challenge2List
        challenge2List:AddListItem("Students should set the Bits per Color field to 2 in the widget.")
        challenge2List:AddListItem("With two bits per color, there are 4 possible options for each color. To show every shade of each color, students will need 3 rows of 4 pixels each.")
        bodyDiv:Add(challenge2List)

        bodyDiv:Add(break)
        Division binaryTip
        binaryTip:AddClassAttribute("cool-box")
        binaryTip:AddHeading("Teaching Tip", 4)
        binaryTip:AddParagraph("Students who are struggling with the binary sequences should be encouraged to take out their Flippy-Do to help them count.")
        bodyDiv:Add(binaryTip)

        bodyDiv:AddHeading("Challenge 3", 3)
        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList challenge3Remarks
        challenge3Remarks:AddListItem("Let's gain even more control by using 3 bits per color this time, or 9 bits per pixel!")
        bodyDiv:Add(challenge3Remarks)
        bodyDiv:AddParagraphBoldFront("Do This:"," Students should again generate each shade of red, green, and blue in separate rows, this time using 3 bits per color.")
        UnorderedList challenge3List
        challenge3List:AddListItem("Students should set the Bits per Color field to 3 in the widget.")
        challenge3List:AddListItem("With three bits per color, there are 8 possible options for each color.")
        bodyDiv:Add(challenge3List)

        bodyDiv:AddHeading("Challenge 4", 3)
        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList challenge4Remarks
        challenge4Remarks:AddListItem("Let's see if we can take a sampling from a piece of an image. Try your best to match the colors using the widget and reproduce the gradient. Don't worry if it doesn't match exactly! Remember, you can adjust the settings of the widget and experiment!")
        bodyDiv:Add(challenge4Remarks)
        bodyDiv:AddParagraphBoldFront("Do This:"," Show students the images below. Then, each student tries to reproduce an image of their choice using the Pixelation Widget. They can try to reproduce the whole image or just a part of it.")

        bodyDiv:Add(break)
        Division imageTip
        imageTip:AddClassAttribute("cool-box")
        imageTip:AddParagraphBoldFront("Teaching Tip","")
        imageTip:AddParagraph("Not all students can see images, so this lesson embeds alternate descriptions that can describe the images to these students. Students that can see the images may explore these alts or come up with their own to see how they work.")
        bodyDiv:Add(imageTip)
        bodyDiv:Add(break)

        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit1/Unit1-8_Activity_Image1.png", "A picture of the sky with wispy clouds. The image is a blending of white and light blue pixels.")
        bodyDiv:Add(break)
        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit1/Unit1-8_Activity_Image2.png", "A gradient that looks to be drawn with markers. The top of the image is magenta, which transitions smoothly into yellow at the bottom.")
        bodyDiv:Add(break)
        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit1/Unit1-8_Activity_Image3.png", "A painting that is splattered with pink, red, orange, and purple paint.")
        bodyDiv:Add(break)
        bodyDiv:Add(break)
        bodyDiv:AddImage("/media/lessons/csp/unit1/Unit1-8_Activity_Image4.png", "A black and white photo of a landscape. A cloudy sky stretches over mountains on the horizon, and in the foreground, a lake reflects the mountains and sky.")

        bodyDiv:Add(break)
        bodyDiv:Add(break)
        Division samplingTip
        samplingTip:AddClassAttribute("cool-box")
        samplingTip:AddHeading("Teaching Tip", 4)
        samplingTip:AddParagraph("Students may become frustrated if they feel they cannot match the analog images. Reassure them this is fine. Remind them about the discussion from the warm up and ask if it's possible that digital images ever look exactly like analog images. You may also ask the students if their representation would be improved if they use more bits per pixel.")
        bodyDiv:Add(samplingTip)

        bodyDiv:AddHeading("Wrap Up (10 minutes)", 2)
        bodyDiv:AddParagraphBoldFront("Remarks","")
        UnorderedList wrapupRemarks
        wrapupRemarks:AddListItem("So as we saw in the last two lessons, the digital versions of images we produce differ from the original analog images. Analog images change smoothly and continuously. With digital images, we are limited by the number of bits we use. Even if we use a lot of bits, we can still only represent a finite number of colors, and gradual color changes can only happen discretely through a finite set of pixels.")
        bodyDiv:Add(wrapupRemarks)
        bodyDiv:AddParagraphBoldFront("Prompt:"," How is an image represented on a computer?")
        bodyDiv:AddParagraphBoldFront("Discussion Goal:"," Students should understand how sampling, pixels, and binary work together to make a digital approximation of an analog image. They should also understand that while analog images are able to change color values smoothly and continuously, digital images rely on pixels to change from a fixed number of color values discretely using squares of equal size.")
        bodyDiv:AddParagraphBoldFront("Journal:"," Students record the layers of abstraction in their journals.")
        UnorderedList wrapUpList
        wrapUpList:AddListItem(AddItalicFront("Digital Image Layer:"," Displays a digital approximation based on a sampling of an analog image."))
        wrapUpList:AddListItem(AddItalicFront("Sampling Layer",""))
        wrapUpList:AddListItem(AddItalicFront("Pixel Layer",""))
        wrapUpList:AddListItem(AddItalicFront("Binary Layer",""))
        bodyDiv:Add(wrapUpList)


        bodyDiv:AddParagraphBoldFront("Remarks","")

        UnorderedList finalRemarks
        finalRemarks:AddListItem("We can see that a digital image is made up of several layers that work together to represent the analog image. This is an example of abstraction because we don't always look at the details of what's going on in all of these layers, but they are working behind the scenes. Let's watch a video of how this works.")
        bodyDiv:Add(finalRemarks)

        bodyDiv:AddHeading("Assessment: Check for Understanding", 2)
        bodyDiv:AddParagraphBoldFront("Question:"," Which statement about analog and digital images is true?")

        UnorderedList assessList
        assessList:AddListItem("With advances in technology, digital images look exactly like the analog images they represent.")
        assessList:AddListItem("Sampling an analog image more frequently produces a digital image with a better representation.")
        assessList:AddListItem("Analog images come from data that is measured at regular intervals.")
        assessList:AddListItem("Digital images come from data that is measures continuously.")
        bodyDiv:Add(assessList)

        bodyDiv:AddParagraphBoldFront("Question:"," Describe how the process of sampling, RGB pixels, and binary sequences work together to display a digital color image.")
        
        bodyDiv:AddHeading("Standards Alignment", 2)

            UnorderedList list
            AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): CS", " - Computing Systems: 3A-CS-02 - Compare levels of abstraction and interactions between application software, system software and hardware layers.")
            AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): DA", " - Data & Analysis: 2-DA-07 - Represent data using multiple encoding schemes, 3A-DA-09 - Translate between different bit representations of real-world phenomena, such as characters, numbers, and images.")
            AddListItemWithBoldAtFront(list, "CSP2021: ", "DAT-1.A.9 - The use of digital data to approximate real-world analog data is an example of abstraction.")
            bodyDiv:Add(list)


      WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn benefits and risks of a free and open internet"
    end

    action GetSummaryName returns text
        return "CSP Internet Lesson 8 The Internet is for Everyone"
    end
    action GetName returns text
        return "CSP Internet Lesson 8"
    end
    action GetShortDescription returns text
        return "benefits and risks of a free and open internet"
    end
    action GetLocation returns text
        return "lessons/code/internet/InternetLesson8.html"
    end
end
