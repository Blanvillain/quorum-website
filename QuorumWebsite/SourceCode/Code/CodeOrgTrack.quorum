use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.Link
use Libraries.Web.Page.Heading
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.Attribute
use Libraries.Web.Page.TableBody

class CodeOrgTrack is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper


    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Code.org Computer Science Principles using Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:AddAttribute("style","background-image: url('/media/basics/coreBanner.jpg'); background-size: cover; height: 25em; background-position: center center;")
        headDiv:SetClassAttribute("pageHeader outermostContainer")

        Division headTextDiv
        headTextDiv:SetClassAttribute("pageHeaderText")
        headTextDiv:AddHeading("Computer Science Principles", 1)
        headTextDiv:AddText("Accessible curriculum based on the Code.org AP Computer 
            Science Principles curriculum.")
        headDiv:Add(headTextDiv)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")

        bodyDiv:AddHeading("Unit 1: Digital Information", 1)
//        bodyDiv:AddParagraph("This unit explores the technical challenges and questions 
//                that arise from the need to represent digital information in computers 
//                and transfer it between people and computational devices. The unit 
//                then explores the structure and design of the internet and the implications of those design decisions.")
        TableCodeOrg tableDiv1a1
        tableDiv1a1:SetTableID("Unit 1 Chapter 1 Table")
        tableDiv1a1:SetTableHeading("Chapter 1: Representing and Transmitting Information")
        
        tableDiv1a1:AddLesson("Welcome to CSP", "code/internet/InternetLesson1.html")
        tableDiv1a1:AddLesson("Representing Information", "code/internet/InternetLesson2.html")
        tableDiv1a1:AddLesson("Circle Square Patterns", "code/internet/InternetLesson3.html")
        tableDiv1a1:AddLesson("Binary Numbers", "code/internet/InternetLesson4.html")
        tableDiv1a1:AddLesson("Overflow and Rounding", "code/internet/InternetLesson5.html")
        tableDiv1a1:AddLesson("Representing Text", "code/internet/InternetLesson6.html")
        tableDiv1a1:AddLesson("Black and White Images", "code/internet/InternetLesson7.html")
        tableDiv1a1:AddLesson("Color Images", "code/internet/InternetLesson8.html")
        tableDiv1a1:AddLesson("Lossless Compression", "code/internet/InternetLesson9.html")
        tableDiv1a1:AddLesson("Lossy Compression", "code/internet/InternetLesson10.html")
        tableDiv1a1:AddLesson("Intellectual Property", "code/internet/InternetLesson11.html")
        tableDiv1a1:AddLesson("Project - Digital Information Dilemmas Part 1", "code/internet/InternetLesson12.html")
        tableDiv1a1:AddLesson("Project - Digital Information Dilemmas Part 2", "code/internet/InternetLesson13.html")


        tableDiv1a1:AddBigQ("Why do computers use binary to represent digital information?")
        tableDiv1a1:AddBigQ("Are the ways data is represented and transmitted with computers laws of nature or laws of man?")


        tableDiv1a1:AddEnduringU("<b>DAT-1:</b> The way a computer represents data internally is different from the way the data is interpreted and displayed for the user. Programs are used to translate data into a representation more easily understood by people.")
        tableDiv1a1:AddEnduringU("<b>IOC-1:</b> while computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences")

        
        tableDiv1a1:AddOptionalLesson("None", "")
        
        tableDiv1a1:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv1a1)

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Unit 2: The Internet", 1)

        TableCodeOrg tableDiv2a1
        tableDiv2a1:SetTableID("Unit 2 Chapter 1 Table")
        tableDiv2a1:SetTableHeading("Chapter 1: Messages and Protocols on the Internet")

        
        tableDiv2a1:AddLesson("Welcome To the Internet", "code/Digital-Information/Lesson1.html")
        tableDiv2a1:AddLesson("Building a Network", "code/Digital-Information/Lesson2.html")
        tableDiv2a1:AddLesson("The Need for Addressing", "code/Digital-Information/Lesson3.html")
        tableDiv2a1:AddLesson("Routers and Redundancy", "code/Digital-Information/Lesson4.html")
        tableDiv2a1:AddLesson("Packets", "code/Digital-Information/Lesson5.html")
        tableDiv2a1:AddLesson("HTTP and DNS", "code/Digital-Information/Lesson6.html")
        tableDiv2a1:AddLesson("Project - Internet Dilemmas Part 1", "code/Digital-Information/Lesson7.html")
        tableDiv2a1:AddLesson("Project - Internet Dilemmas Part 2", "code/Digital-Information/Lesson8.html")
        
        tableDiv2a1:AddBigQ("What are the protocols that are used on the Internet, and how do they work?")
        tableDiv2a1:AddBigQ("How were these protocols developed, and how can we make our own?")

        tableDiv2a1:AddEnduringU("<b>DAT-1:</b> Computer systems and networks facilitate how data are transferred")
        tableDiv2a1:AddEnduringU("<b>IOC-1:</b> While computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences")        

        tableDiv2a1:AddOptionalLesson("None", "")

        tableDiv2a1:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv2a1)


        bodyDiv:Add(break)
        bodyDiv:AddHeading("Unit 3: Intro to App Design", 1)

        TableCodeOrg tableDiv3
        tableDiv3:SetTableID("Unit 3 Table")
        tableDiv3:SetTableHeading("Chapter 1: Understanding and Designing Apps")

        tableDiv3:AddLesson("Introduction to Apps", "code/Algorithm-Programming/Lesson1.html")
        tableDiv3:AddLesson("Introduction to Interface Design", "code/Algorithm-Programming/Lesson2.html")
        tableDiv3:AddLesson("Project - Designing an App Part 1", "code/Algorithm-Programming/Lesson3.html")
        tableDiv3:AddLesson("Project - Designing an App Part 2", "code/Algorithm-Programming/Lesson4.html")
        tableDiv3:AddLesson("The Need for Programming Languages", "code/Algorithm-Programming/Lesson5.html")
        tableDiv3:AddLesson("Intro to Programming", "code/Algorithm-Programming/Lesson6.html")
        tableDiv3:AddLesson("Debugging", "code/Algorithm-Programming/Lesson7.html")
        tableDiv3:AddLesson("Project - Designing an App Part 3", "code/Algorithm-Programming/Lesson8.html")
        tableDiv3:AddLesson("Project - Designing an App Part 4", "code/Algorithm-Programming/Lesson9.html")
        tableDiv3:AddLesson("Project - Designing an App Part 5", "code/Algorithm-Programming/Lesson10.html")

        tableDiv3:AddBigQ("How do apps work, and how do we make them?")
        tableDiv3:AddBigQ("What is programming and how do we do it?")

        tableDiv3:AddEnduringU("CRD-1: Incorporating multiple perspectives through collaboration improves computing innovations as they are developed.")
        tableDiv3:AddEnduringU("CRD-2: Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.")
        tableDiv3:AddEnduringU("AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.")
        tableDiv3:AddEnduringU("AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.")
        
        tableDiv3:AddOptionalLesson("None", "")
        tableDiv3:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv3)

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Unit 4: Variables, Conditionals, and Functions", 1)

        TableCodeOrg tableDiv4
        tableDiv4:SetTableID("Unit 4 Table")
        tableDiv4:SetTableHeading("Chapter 1: Storing Info, Making Decisions, and Organizing Code")

        tableDiv4:AddLesson("Variables Explore", "code/BigDataAndPrivacy/Lesson1.html")
        tableDiv4:AddLesson("Variables Investigate", "code/BigDataAndPrivacy/Lesson2.html")
        tableDiv4:AddLesson("Variables Practice", "code/BigDataAndPrivacy/Lesson3.html")
        tableDiv4:AddLesson("Variables Make", "code/BigDataAndPrivacy/Lesson4.html")
        tableDiv4:AddLesson("Conditionals Explore", "code/BigDataAndPrivacy/Lesson5.html")
        tableDiv4:AddLesson("Conditionals Investigate", "code/BigDataAndPrivacy/Lesson6.html")
        tableDiv4:AddLesson("Conditionals Practice", "code/BigDataAndPrivacy/Lesson7.html")
        tableDiv4:AddLesson("Conditionals Make", "code/BigDataAndPrivacy/Lesson8.html")     
        tableDiv4:AddLesson("Functions Explore / Investigate", "code/BigDataAndPrivacy/Lesson9.html")
        tableDiv4:AddLesson("Functions Practice", "code/BigDataAndPrivacy/Lesson10.html")
        tableDiv4:AddLesson("Functions Make", "code/BigDataAndPrivacy/Lesson11.html")
        tableDiv4:AddLesson("Project - Decision Maker App Part 1", "code/BigDataAndPrivacy/Lesson12.html")
        tableDiv4:AddLesson("Project - Decision Maker App Part 2", "code/BigDataAndPrivacy/Lesson13.html")
        tableDiv4:AddLesson("Project - Decision Maker App Part 3", "code/BigDataAndPrivacy/Lesson14.html")

        tableDiv4:AddBigQ("How do programs store and retrieve information?")
        tableDiv4:AddBigQ("How do programs make decisions and change how they react to input?")
        tableDiv4:AddBigQ("How can we organize and reuse our code?")

        tableDiv4:AddEnduringU("<b>CRD-2:</b> Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.")
        tableDiv4:AddEnduringU("<b>AAP-1:</b> To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.")
        tableDiv4:AddEnduringU("<b>AAP-2:</b> The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.")
        tableDiv4:AddEnduringU("<b>AAP-3:</b> Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.")

        tableDiv4:AddOptionalLesson("None", "")
        tableDiv4:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv4)

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Unit 5: Lists, Loops, and Traversals", 1)

        TableCodeOrg tableDiv5
        tableDiv5:SetTableID("Unit 5 Table")
        tableDiv5:SetTableHeading("Chapter 1: Using Lists, Iteration, and Traversal")

        tableDiv5:AddLesson("Lists Explore", "code/BuildingApps/Lesson1.html")
        tableDiv5:AddLesson("Lists Investigate", "code/BuildingApps/Lesson2.html")
        tableDiv5:AddLesson("Lists Practice", "code/BuildingApps/Lesson3.html")
        tableDiv5:AddLesson("Lists Make", "code/BuildingApps/Lesson4.html")
        tableDiv5:AddLesson("Loops Explore", "code/BuildingApps/Lesson5.html")
        tableDiv5:AddLesson("Loops Investigate", "code/BuildingApps/Lesson6.html")
        tableDiv5:AddLesson("Loops Practice", "code/BuildingApps/Lesson7.html")
        tableDiv5:AddLesson("Loops Make", "code/BuildingApps/Lesson8.html")
        tableDiv5:AddLesson("Traversals Explore", "code/BuildingApps/Lesson9.html")
        tableDiv5:AddLesson("Traversals Investigate", "code/BuildingApps/Lesson10.html")
        tableDiv5:AddLesson("Traversals Practice", "code/BuildingApps/Lesson11.html")
        tableDiv5:AddLesson("Traversals Make", "code/BuildingApps/Lesson12.html")
        tableDiv5:AddLesson("Project - Hackathon Part 1", "code/BuildingApps/Lesson13.html")
        tableDiv5:AddLesson("Project - Hackathon Part 2", "code/BuildingApps/Lesson14.html")
        tableDiv5:AddLesson("Project - Hackathon Part 3", "code/BuildingApps/Lesson15.html")
        tableDiv5:AddLesson("Project - Hackathon Part 4", "code/BuildingApps/Lesson16.html")
        tableDiv5:AddLesson("Project - Hackathon Part 5", "code/BuildingApps/Lesson17.html")

        tableDiv5:AddBigQ("How can we store lots of information in an organized way?")
        tableDiv5:AddBigQ("How can we repeat code multiple times?")
        tableDiv5:AddBigQ("How can we iterate through lists?")

        tableDiv5:AddEnduringU("<b>CRD-2:</b> Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.")
        tableDiv5:AddEnduringU("<b>AAP-1:</b> To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.")
        tableDiv5:AddEnduringU("<b>AAP-2:</b> The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.")
        tableDiv5:AddEnduringU("<b>AAP-3:</b> Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.")

        tableDiv5:AddOptionalLesson("None", "")
        tableDiv5:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv5)

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Unit 6: Algorithms", 1)

        TableCodeOrg tableDiv6
        tableDiv6:SetTableID("Unit 6 Table")
        tableDiv6:SetTableHeading("Chapter 1: Learning About Algorithms")

        tableDiv6:AddLesson("Algorithms Solve Problems", "code/Algorithms/Lesson1.html")
        tableDiv6:AddLesson("Algorithm Efficiency", "code/Algorithms/Lesson2.html")
        tableDiv6:AddLesson("Unreasonable Time", "code/Algorithms/Lesson3.html")
        tableDiv6:AddLesson("The Limits of Algorithms", "code/Algorithms/Lesson4.html")
        tableDiv6:AddLesson("Parallel and Distributed Algorithms", "code/Algorithms/Lesson5.html")

        tableDiv6:AddBigQ("What is an algorithm?")
        tableDiv6:AddBigQ("How do we compare algorithms?")
        tableDiv6:AddBigQ("Can we solve every problem in a reasonable time with algorithms?")

        tableDiv6:AddEnduringU("<b>AAP-2:</b> The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.")
        tableDiv6:AddEnduringU("<b>AAP-4:</b> There exist problems that computers cannot solve, and even when a computer can solve a problem, it may not be able to do so in a reasonable amount of time.")
        tableDiv6:AddEnduringU("<b>CSN-2:</b> Parallel and distributed computing leverage multiple computers to more quickly solve complex problems or process large data sets.")

        tableDiv6:AddOptionalLesson("None", "")
        tableDiv6:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv6)

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Unit 7: Parameters, Return, and Libraries", 1)

        TableCodeOrg tableDiv7
        tableDiv7:SetTableID("Unit 7 Table")
        tableDiv7:SetTableHeading("Chapter 1: Using Parameters, Return, and Libraries")

        tableDiv7:AddLesson("Parameters and Return Explore", "code/ParametersReturnLibraries/Lesson1.html")
        tableDiv7:AddLesson("Parameters and Return Investigate", "code/ParametersReturnLibraries/Lesson2.html")
        tableDiv7:AddLesson("Parameters and Return Practice", "code/ParametersReturnLibraries/Lesson3.html")
        tableDiv7:AddLesson("Parameters and Return Make", "code/ParametersReturnLibraries/Lesson4.html")
        tableDiv7:AddLesson("Libraries Explore", "code/ParametersReturnLibraries/Lesson5.html")
        tableDiv7:AddLesson("Libraries Investigate", "code/ParametersReturnLibraries/Lesson6.html")
        tableDiv7:AddLesson("Libraries Practice", "code/ParametersReturnLibraries/Lesson7.html")
        tableDiv7:AddLesson("Project - Make a Library Part 1", "code/ParametersReturnLibraries/Lesson8.html")
        tableDiv7:AddLesson("Project - Make a Library Part 2", "code/ParametersReturnLibraries/Lesson9.html")
        tableDiv7:AddLesson("Project - Make a Library Part 3", "code/ParametersReturnLibraries/Lesson10.html")

        tableDiv7:AddBigQ("How do we design clean and reusable code?")
        tableDiv7:AddBigQ("What is a parameter?")
        tableDiv7:AddBigQ("What is the purpose of a return?")
        tableDiv7:AddBigQ("What is a library?")

        tableDiv7:AddEnduringU("<b>CRD-2:</b> Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.")
        tableDiv7:AddEnduringU("<b>AAP-2:</b> The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.")
        tableDiv7:AddEnduringU("<b>AAP-3:</b> Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.")

        tableDiv7:AddOptionalLesson("None", "")
        tableDiv7:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv7)

        bodyDiv:Add(break)
        bodyDiv:AddHeading("Unit 8: Create Performance Task Prep", 1)

        Division tableDiv8
            tableDiv8:SetClassAttribute("lessonTable")
            tableDiv8:SetIdentifier("Unit 8 Table")

            Division createPTLessons
                createPTLessons:SetClassAttribute("leftLessonBox")

                Division tablePTHeadingDivision1
                    tablePTHeadingDivision1:SetClassAttribute("tableHeader")
                    Heading tablePTHeader1
                    tablePTHeader1:SetClassAttribute("tableHeading")
                    tablePTHeader1:AddText("Create Performance Task Prep")
                    tablePTHeader1:SetScale(1)
                    Paragraph p1PT
                    p1PT:AddText("")
                    tablePTHeadingDivision1:Add(tablePTHeader1)
                    tablePTHeadingDivision1:Add(p1PT)
                createPTLessons:Add(tablePTHeadingDivision1)

                    OrderedList createPTList
                        createPTList:AddListItemLink("Create Performance Task - Review the Task", "code/create/PTLesson1.html")
                        createPTList:AddListItemLink("Create Performance Task - Deep Dive", "code/create/PTLesson2.html")
                        createPTList:AddListItemLink("Create Performance Task - Make a Plan", "code/create/PTLesson3.html")
                        createPTList:AddListItemLink("Create Performance Task - Complete the Task", "code/create/PTLesson4.html")
                    createPTLessons:Add(createPTList)

            tableDiv8:Add(createPTLessons)
        bodyDiv:Add(tableDiv8)
        bodyDiv:Add(break)

        bodyDiv:AddHeading("Unit 9: Data", 1)
        TableCodeOrg tableDiv9a1
        tableDiv9a1:SetTableID("Unit 9 Chapter 1 Table")
        tableDiv9a1:SetTableHeading("Chapter 9: Programming with Data Structures")
        tableDiv9a1:AddLesson("Learning from Data", "code/Data/Lesson1.html")
        tableDiv9a1:AddLesson("Exploring One Column", "code/Data/Lesson2.html")
        tableDiv9a1:AddLesson("Filtering and Cleaning Data", "code/Data/Lesson3.html")  
        tableDiv9a1:AddLesson("Exploring Two Columns", "code/Data/Lesson4.html")
        tableDiv9a1:AddLesson("Big, Open, and Crowdsourced Data", "code/Data/Lesson5.html")
        tableDiv9a1:AddLesson("Machine Learning and Bias", "code/Data/Lesson6.html")
        tableDiv9a1:AddLesson("Tell a Data Story Part 1", "code/Data/Lesson7.html")
        tableDiv9a1:AddLesson("Tell a Data Story Part 2", "code/Data/Lesson8.html")

        tableDiv9a1:AddBigQ("What is the data analysis process?")
        tableDiv9a1:AddBigQ("What makes a visualization effective?")

        tableDiv9a1:AddEnduringU("<b>DAT-2:</b> Programs can be used to process data, which allows users to discover information and create new knowledge.")
        tableDiv9a1:AddEnduringU("<b>IOC-1:</b> While computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences.")

        tableDiv9a1:AddOptionalLesson("None", "")
        tableDiv9a1:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv9a1)
        bodyDiv:Add(break)

        bodyDiv:AddHeading("Unit 10: Cybersecurity and Global Impacts", 1)

        TableCodeOrg tableDiv10
        tableDiv10:SetTableID("Unit 10 Table")
        tableDiv10:SetTableHeading("Chapter 1: Cybersecurity and Global Impacts")

        tableDiv10:AddLesson("Project - Part 1", "code/Cybersecurity/Lesson1.html")
        tableDiv10:AddLesson("Project - Part 2", "code/Cybersecurity/Lesson2.html")
        tableDiv10:AddLesson("Data Policies and Privacy", "code/Cybersecurity/Lesson3.html")
        tableDiv10:AddLesson("The Value of Privacy", "code/Cybersecurity/Lesson4.html")
        tableDiv10:AddLesson("Project - Part 3", "code/Cybersecurity/Lesson5.html")
        tableDiv10:AddLesson("Security Risks Part 1", "code/Cybersecurity/Lesson6.html")
        tableDiv10:AddLesson("Security Risks Part 2", "code/Cybersecurity/Lesson7.html")
        tableDiv10:AddLesson("Project - Part 4", "code/Cybersecurity/Lesson8.html")
        tableDiv10:AddLesson("Protecting Data Part 1", "code/Cybersecurity/Lesson9.html")
        tableDiv10:AddLesson("Protecting Data Part 2", "code/Cybersecurity/Lesson10.html")
        tableDiv10:AddLesson("Project - Part 5", "code/Cybersecurity/Lesson11.html")
        tableDiv10:AddLesson("Project - Part 6", "code/Cybersecurity/Lesson12.html")
        tableDiv10:AddLesson("Project - Part 7", "code/Cybersecurity/Lesson13.html")

        tableDiv10:AddBigQ("What are the security risks of computing innovations?")
        tableDiv10:AddBigQ("What type of data is collected by modern computing innovations?")
        tableDiv10:AddBigQ("How do security risks impact society?")

        tableDiv10:AddEnduringU("<b>IOC-1:</b> While computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences.")
        tableDiv10:AddEnduringU("<b>IOC-2:</b> The use of computing innovations may involve risks to your personal safety and identity.")
        
        tableDiv10:AddOptionalLesson("None", "")
        tableDiv10:GenerateTableCodeOrg()
        bodyDiv:Add(tableDiv10)

        bodyDiv:Add(break)

        //Special table for CSP Resources (the widgets page
        bodyDiv:AddHeading("CSP Resources", 1)
        Division resourcesTable
            resourcesTable:SetClassAttribute("lessonTable")
            resourcesTable:SetIdentifier("Computer Science Principles Resources")

            Division resourcesLessons
                resourcesLessons:SetClassAttribute("leftLessonBox")

                Division tableHeadingDivision
                    tableHeadingDivision:SetClassAttribute("tableHeader")
                    Heading tableHeader
                    tableHeader:SetClassAttribute("tableHeading")
                    tableHeader:AddText("Computer Science Principles Resources")
                    tableHeader:SetScale(1)
                    Paragraph p
                    p:AddText("")
                    tableHeadingDivision:Add(tableHeader)
                    tableHeadingDivision:Add(p)
                resourcesLessons:Add(tableHeadingDivision)

                    OrderedList resources
                    resources:AddListItemLink("Widgets Page", "code/CodeOrgWidgetTutorial.html")
                    //resources:AddListItemLink("Widgets Page", "code/CodeOrgWidgets.html")
                    resourcesLessons:Add(resources)

            resourcesTable:Add(resourcesLessons)
        bodyDiv:Add(resourcesTable)

        //end of CSP Resources table

//        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Learn Computer Science Principles and prepare for the College Board
            Advanced Placement Exam"
    end

    action GetSummaryName returns text
        return ""
    end
    action GetName returns text
        return "Code.org Computer Science Principles using Quorum Programming Language"
    end
    action GetShortDescription returns text
        return ""
    end
    action GetLocation returns text
        return "lessons/code.html"
    end
end
