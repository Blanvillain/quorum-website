use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit5Lesson14 is Lesson
    text iText = ""
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 5 Lesson 14: Project - Hackathon Part 2")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Lists, Loops, and Traversals - Lesson 14: Project - Hackathon Part 2", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Lists, Loops, and Traversals - Lesson 14: Project - Hackathon Part 2")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)


        Paragraph ov1
        ov1:AddText("This is the second day of a five-day unit project. Students continue to plan for the project by filling out tables of information on element IDs and programming constructs before each tackling a different role in the project as a designer or a programmer. ")
        section_intro:Add(ov1)


        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Translate a paper prototype to screens")
        goalList:AddListItem("Begin programming an app which uses a database")
        section_intro:Add(goalList)

        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("Students will demonstrate their app design and programming skills throughout this five day project. In addition, students work with a dataset as this ensures students will be using the types of programming constructs required for the Create Performance Task, which this project is designed as a practice for. Students complete the project by individually filling out a Written Response, modeled after the Create PT. ")
        section_intro:AddParagraph("This project can be used as a unit project, or as an end cap to the first semester of the course. ")


         AddHeading(section_intro, "Resources", 3)
        UnorderedList resources
        resources:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")
        resources:AddListItemLink("CSP-Widgets repository", "https://github.com/qorf/CSP-Widgets")
        resources:AddListItemLink("CSP Unit 5 Hackathon Project - Planning Guide", "https://docs.google.com/document/d/1Hc8LF0AsiPK_JyRaieKC6Kint6savoassU4ncz6GuTc/edit?usp=sharing")
        section_intro:Add(resources)

       
        Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (0 minutes)", 2)
        section_gettingStarted:AddParagraphBoldFront("Do This:", " Move quickly to the activity portion of the lesson.")

                        Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (40 minutes)", 2)
        AddHeading(section_activity, "Hackathon Project", 3)
        section_activity:AddParagraphBoldFront("Step 4:", " Students work with their partners to fill out the tables on pages 4-6 in the Planning Guides. In these tables, students plan out all of the element IDs, functions, variables, conditionals, and loops. This step will help students smoothly transition into the programming phase. ")
        section_activity:AddParagraphBoldFront("Step 5 (3 mins):", " On one computer, partners quickly build their screens, to be used by the programmer to test their code. Emphasize that these are NOT the final screens. Students place elements on the screen and give them the agreed upon names from Step 4. The design does not matter here.")
        section_activity:AddParagraphBoldFront("Do This:", " Partners select their primary roles.")
        UnorderedList roles
        roles:AddClassAttribute("list-disc list-outside pl-8")
        roles:AddListItem("Programmers: Responsible for the majority of the programming. Needs to communicate decisions with the designer.")
        roles:AddListItem("Designers: Responsible for the design of the app. Pair programs with the programmer as needed.")
        section_activity:Add(roles)

        section_activity:AddParagraphBoldFront("Step 6:", " Students work on building their apps, guided by their roles.")
        UnorderedList roleDuties
        roleDuties:AddClassAttribute("list-disc list-outside pl-8")
        roleDuties:AddListItem("Programmers: Use the table to guide you in adding programming statements to your project.")
        roleDuties:AddListItem("Designers: Use the chart to guide you in adding screen elements to your program. You can work on a separate computer from your partner.")
        section_activity:Add(roleDuties)
      

        Division designerTip = AddTeachingTip(section_activity)
      
        designerTip:AddParagraph("If the designer finishes their screens early, they can start pair programming with the programmer. ")
   

        section_activity:AddParagraphBoldFront("Do This:"," When the designer is ready to share their screens with the programmer, there are specific steps that must be followed after the designer clicks share and copies the link to their app. The programmer:")

        OrderedList numList
        numList:AddClassAttribute("list-decimal list-outside pl-8")
        numList:AddListItem("Programmer: Add a blank screen")
        numList:AddListItem("Programmer: Delete the old project screens.")
        numList:AddListItem("Programmer: Click the screen dropdown, then click " + dq + "Import screen" + dq + "")
        numList:AddListItem("Designer: Click to share your project. Copy the link and send to the Programmer")
        numList:AddListItem("Programmer: Paste in the link from the designer.")
        numList:AddListItem("Programmer: Select to import all of the screens.")
        numList:AddListItem("Delete the blank screen.")
        numList:AddListItem("Set the home screen to be the default screen (Hint: Go to design mode and click on the screen)")

        section_activity:Add(numList)

        
               Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap Up (5 minutes)", 2)
     
        section_wrap:AddParagraphBoldFront("Do This:", " Take some time to answer student questions.")

                        Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Optional", 2)
        section_wrap:AddParagraphBoldFront("Planning Guide:", " As an optional completion assessment, you can look at the table in Step 4 of the Planning Guide.")

        Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)
        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ","3A-AP-14, 3A-AP-22, 3A-AP-23")
        section_standards:Add(list)


        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Begin designing and programming screens of the project app"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 5 Lesson 14: Project - Hackathon Part 2"
    end

    action GetName returns text
        return "Code.Org Unit 5 Lesson 14"
    end

    action GetShortDescription returns text
        return "Project Day 2"
    end

    action GetLocation returns text
        return "lessons/code/BuildingApps/Lesson14.html"
    end

    action GetLinkName returns text
        return "Project - Hackathon Part 2"
    end

    action GetSectionName returns text
        return "Lists, Loops, and Traversals"
    end 
end   
