use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableCaption
use Libraries.Web.Page.TableRow
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.BoxTip

class CodeOrgUnit5Lesson9 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 5 Lesson 9: Traversals Explore")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Lists, Loops, and Traversals - Lesson 9: Traversals Explore", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")


        bodyDiv:AddHeading("Overview", 2)
        bodyDiv:AddParagraph("The lesson begins with a quick review of lists and loops before moving into the main activity. Here students explore the concept using pseudocode and optionally the Traversal Machine, a physical model of traversal using a for loop. ")


        bodyDiv:AddHeading("Goals", 2)
        bodyDiv:AddParagraph("Students will be able to:")
            UnorderedList goalList
                goalList:AddListItem("Use appropriate vocabulary to describe traversals.")
                goalList:AddListItem("Understand how to use a loop to traverse a list")
                goalList:AddListItem("Trace simple programs with loop traversals")
        bodyDiv:Add(goalList)


        bodyDiv:AddHeading("Purpose", 2)
        bodyDiv:AddParagraph("Students are introduced to the concept of traversal using pseudocode and (optionally) the Traversal Machine. This unplugged lesson provides students a physical mental model they will be able to use when they transition to programming traversals in actual code.")           



        bodyDiv:AddHeading("Resources",2)
        UnorderedList rs
        rs:AddListItemLink("CSP Unit 5 - Lists, Loops, and Traversals (Presentation)", "https://docs.google.com/presentation/d/1qQPTgZxJnYZRl-9Do2UB_hM882QtouLclWfCsw8jDBw/copy")
        rs:AddListItemLink("CS Principles: Processing Lists (Video)", "https://youtu.be/RQ6GJt9f2vg")
        bodyDiv:Add(rs)
        bodyDiv:AddHeading("Code.org supplemental material", 4)
        UnorderedList resources
        resources:AddListItemLink("Traversal Machine", "https://docs.google.com/document/d/155CFeFELE2dfoQCip9CwLb6KbJqDeUcvhumCRecCU-Y/view")
        bodyDiv:Add(resources)
        bodyDiv:Add(break)

        BoxTip alternatives
        alternatives:AddHeading("Teaching Tip", 3)
        alternatives:AddParagraphBoldFront("Optional Materials and Substitutions:", " Like the previous explore lessons, this lesson is a guided activity with optional accompanying slides. The activity makes use of the Traversal Machine, a paper cut-out with a for loop and a sliding track. Whether or not you use the handout, the core of this activity is in writing and running pseudocode. The slides show Javascript-style pseudocode, and we have included Quorum-style pseudocode here. You can direct students to use either.")
        alternatives:AddParagraph("Instead of using the Traversal Machine, you can instead ask students to write pseudocode directly on paper or in a text editor. You can even have them write actual code in a blank project in Quorum Studio, but if you do, it's okay if student's code doesn't compile. For this lesson, it's only important that students explore the concept, rather than worry about the exact syntax of code.")                
        bodyDiv:Add(alternatives)

        bodyDiv:AddHeading("Getting Started (5 mins)", 2)
        bodyDiv:AddParagraphBoldFront("Discuss:", " Review key vocabulary for lists and loops with students:")
        UnorderedList discussList
        discussList:AddListItem("List - an ordered sequence of elements.")
        discussList:AddListItem("Element - an individual value in a list that is assigned a unique index.")
        discussList:AddListItem("Index - a common method for referencing the elements in a list or string using natural numbers.")
        discussList:AddListItem("Iteration - a repetitive portion of an algorithm. Iteration repeats until a given condition is met.")
        bodyDiv:Add(discussList)


        bodyDiv:AddHeading("Activity (30 mins)", 2)
        bodyDiv:AddHeading("Traversals", 3)
        bodyDiv:AddParagraphBoldFront("Display:", " Use the activity slides for this lesson to guide the unplugged activity on Traversals.")
        BoxTip activityTip
        activityTip:AddHeading("Teaching Tip", 3)
        activityTip:AddParagraphBoldFront("Running the Activity:", " This activity asks students to follow along as a number of core concepts for programming are introduced. The model is typically that a term or concept is introduced and modeled and then afterwards students are encouraged to try it out on their own. Trying it out typically means they are writing information down and sharing it with another group before discussing the results with the whole class.")
        activityTip:AddParagraph("Slides with animations have an icon in the bottom left corner to let you know you need to click to reveal more of the slide's content. ")
        activityTip:AddParagraph("To help you more easily prepare the activity and keep track of your instructions, detailed instructions have been included as speaker notes in the presentation. Here are some tips to help you throughout the presentation.")
        UnorderedList activityList
        activityList:AddListItem("There are opportunities throughout the presentation for students to actively engage. At these moments students should be making things with their manipulatives or using them to answer questions. Use these opportunities to check progress.")
        activityList:AddListItem("There is a fair amount of new vocabulary introduced but it is introduced gradually and with intentional repetition. Make a point of actively modeling the use of new terms.")
        activityList:AddListItem("The most important goal here is building a mental model. It is ok if students have some open questions that will get resolved over the subsequent conditional lessons.")
        activityList:AddListItem("Both you and students can use the " + dq + "Key Takeaways" + dq + " to check your understanding at the end.")
        activityTip:Add(activityList)
        bodyDiv:Add(activityTip)

        bodyDiv:AddParagraphBoldFront("Guided Activity:", " The focus of today's lesson is an unplugged guided activity. You can optionally use the Code.org presentation slides for this lesson. Prompts below indicate when to move to a new slide. If you aren't using the slides, you can ignore these prompts.")
        bodyDiv:AddParagraphBoldFront("Distribute:", " If you are using the Traversal Machine, hand them out to students and ensure they have the supplies listed on the slide. Otherwise, make sure students have access to pencil and paper, a text editor, or whatever alternative tools you choose to use for this lesson.")
        bodyDiv:AddParagraphBoldFront("Say:", " Today we are going to learn about Traversals. Make sure you and your partner have all the supplies you need.")
        bodyDiv:AddParagraphBoldFront("Note to Teacher:", " If you are using the Traversal Machines and are concerned about time or material management, the Traversal Machines can be prepared ahead of time. You only need one Traversal Machine per pair of students, and machines can be shared between classes. ")
        bodyDiv:AddParagraph("There are three places to make cuts:")
        UnorderedList machinePrep
        machinePrep:AddListItem("The dotted line at the top of the sheet")
        machinePrep:AddListItem("The box with the list index")
        machinePrep:AddListItem("The box inside of the variable baggy")
        bodyDiv:Add(machinePrep)

        bodyDiv:Add(break)
        
        LessonTable activityWebTable
        activityWebTable:Setup()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Write down this list:")
        PreformattedText code1
        code1:AddText("<code>temps = [77, 85, 89, 65]</code>")
        activityWebTable:AddRight(code1)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " What if...")
        activityWebTable:AddRightParagraphBoldFront("Prompt:", " What if I want to know if a value is in a list? With a partner, discuss the method you would use to look for an item in a list. ")
        activityWebTable:AddRightParagraphBoldFront("Answer:", " Most likely, you would scan your list looking at each item until you found the correct one.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Computers are really good at checking things one by one.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Computers are really good at checking things one by one. To do this, let's use a loop.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Get ready! Set up the Traversal Machine ")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Set up the Traversal Machine, or write down this pseudocode. Make sure to leave plenty of space open in the middle of the loop!")
        activityWebTable:AddRightParagraphBoldFront("Note:", " Students use scissors make cuts as directed on the Traversal Machines. As noted before, this can all be done before class to save time.")
        PreformattedText code2
        code2:AddText("<code>integer i = 0
repeat while i < list:GetSize()
    integer element = list:Get(i)





    i = i + 1
end</code>")
        activityWebTable:AddRight(code2)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " This is where we assign the starting value...")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Direct students attention to the Traversal Machines or to the first line of pseudocode as you describe the parts.")
        PreformattedText code3
        code3:AddText("<code>integer i = 0</code>")
        activityWebTable:AddRight(code3)
        activityWebTable:AddRightParagraphBoldFront("Say:", " This is where we assign the starting value to the counter variable i. Usually we assign it to 0. What else starts with 0? The index of a list! ")
        activityWebTable:AddRightParagraphBoldFront("Note:", " In Javascript and Quorum, the index of a list starts at 0. You may want to remind students that on the AP Exam, pseudocode starts the index at 1.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " This is the Boolean expression...")
        PreformattedText code4
        code4:AddText("<code>i < list:GetSize()</code>")
        activityWebTable:AddRight(code4)
        activityWebTable:AddRightParagraphBoldFront("Say:", " This is the Boolean expression that is checked to see if the loop should continue to run. When working with a list, we want to access every element in the list, so we are going to keep the loop going until we have hit the size of the list.")
        activityWebTable:AddRightParagraphBoldFront("Note:", " You may want to remind students that list:GetSize() evaluates to the length of a list, which will be different than the last index number. For example, in a list of three, the length is 3 and the index numbers are 0, 1, 2")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: replace list...")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Replace " + dq + "list" + dq + " with the name of your list. In this case, we would replace it with " + dq + "temps" + dq)
        UnorderedList replaceList
        replaceList:AddListItem("If students are using the Traversal Machine, they should take two small pieces of a sticky note and write <b>temps</b> on them. Then, place the sticky note pieces over the two instances of <b>list</b> on the machine.")
        replaceList:AddListItem("If students are using pseudocode, they can erase and replace the instances of <b>list</b> in the text.")
        activityWebTable:AddRight(replaceList)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " The counter variable i...")
        PreformattedText code5
        code5:AddText("<code>i = i + 1</code>")
        activityWebTable:AddRight(code5)
        activityWebTable:AddRightParagraphBoldFront("Say:", " The counter variable i increases after each loop runs.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " To access each element in the list...")
        activityWebTable:AddRightParagraphBoldFront("Say:", " To access each element in the list, we are going to store the element in a variable inside the for loop. Let's try this out.")
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " If you're using the Traversal Machine, set up a variable baggy and give it the name element.")
        activityWebTable:AddRightParagraph("Whether you're using the Traversal Machine or pseudocode, you may opt to not use variable baggies at all in this lesson and instead have students keep track of variables separately, such as on a scrap piece of paper. In this case, the variable element is tracking the local variable that is inside of the for loop. With every round of the for loop, the variable will update.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddRightParagraphBoldFront("NOTE:", " <i>If you are not using the Traversal Machine, you can skip this slide and its related section.</i>")
        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do this: Pull the index sheet up to assign i to 0.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Pull the index sheet up to assign i to 0.")
        activityWebTable:AddRightParagraphBoldFront("Click for animation.", "")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Notice how the variable in the baggy has changed Each time the loop is executed, the variable i increases by one.")
        activityWebTable:AddRightParagraphBoldFront("Note:", " For the following six slides, students will follow along with what's happening on the screen with their own Traversal Machines. Give students a few seconds to pull up the index sheet at each step.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Look at the list below.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Look at our list. Right now, i = 0.")
        PreformattedText code6
        code6:AddText("<code>temps = [77, 85, 89, 65]</code>")
        activityWebTable:AddRight(code6)
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Evaluate the statement in the for loop to see what value is stored by the variable element.")
        activityWebTable:AddRightParagraphBoldFront("Click through animation:", " There are six steps to click through. <code>temps:Get(0)</code> evaluates to 77 which is stored in the variable <code>element</code>.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Now pull the index sheet up one spot.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Now, evaluate the next iteration of the loop. If you're using the Traversal Machine, pull the index sheet up one spot. i now equals 1. Evaluate the statement inside the loop.")
        activityWebTable:AddRightParagraphBoldFront("Click through animation:", " There are seven steps to click through. <code>temps:Get(1)</code> evaluates to 85 which is stored in the variable <code>element</code>.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Pull the sheet up again")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Evaluate the next iteration again. If you're using the Traversal Machine, pull the index sheet up again. i now equals 2. Evaluate the statement inside the loop.")
        activityWebTable:AddRightParagraphBoldFront("Click through animation:", " There are seven steps to click through. <code>temps:Get(2)</code> evaluates to 89 which is stored in the variable <code>element</code>.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Pull the sheet up again")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Evaluate the next iteration again. If you're using the Traversal Machine, pull the index sheet up again. i now equals 3. Evaluate the statement inside the loop.")
        activityWebTable:AddRightParagraphBoldFront("Click through animation:", " There are seven steps to click through. <code>temps:Get(3)</code> evaluates to 65 which is stored in the variable <code>element</code>.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Now pull up the index sheet one last time.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", " Evaluate the loop one last time, pulling up the index sheet again if you're using the Traversal Machine. i now equals 4.")
        activityWebTable:AddRightParagraphBoldFront("Click through animation:", " There are three steps to click through.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Is 4 less than 4 (the length of the list)? No - so we exit out of the loop.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Are you starting to see a pattern here?")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Are you starting to a see a pattern here?")
        UnorderedList patternList
        patternList:AddListItem("We are able to access each item in a list by using a loop.")
        patternList:AddListItem("This is called traversal. We are traveling or traversing through a list one element at a time.")
        activityWebTable:AddRight(patternList)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do this: Let's look for a number in the temps list.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Let's look for a number in the temps list. It's easy for you to scan the list quickly with your own eyes, but for this exercise, let's pretend you are a computer and must use code to look for the number.")
        activityWebTable:AddRightParagraphBoldFront("Do this:", "")
        UnorderedList process1
        process1:AddListItem("Write down the code below and put it in your loop.")
        process1:AddListItem("If you're using the Traversal Machine, pull the index sheet up each time you go through the loop.")
        process1:AddListItem("Run the loop until it is finished.")
        process1:AddListItem("Write output to the " + dq + "console" + dq + " -- a scrap piece of paper, a separate blank document, etc.")
        process1:AddListItem("When done, compare your console with another group.")
        activityWebTable:AddRight(process1)
        PreformattedText code7
        code7:AddText("<code>integer element = temps:Get(i)
if element = 85
    output " + dq + "Element found at index " + dq + " + i
else
    output " + dq + "Not here!" + dq + "
end
i = i + 1</code>")
        activityWebTable:AddRight(code7)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " My Console")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Check your console. Does it look like this?")
        PreformattedText code8
        code8:AddText("<code>Not here!
Element found at index 1
Not here!
Not here!</code>")
        activityWebTable:AddRight(code8)
        activityWebTable:AddRightParagraphBoldFront("Say:", " The number 85 was found at index 1, the second number in the list. Notice that i currently has the value 4. This is because we stopped after four rounds. Element is currently storing 65, the last element that we accessed, at index 3.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do this: Now I want to find the smallest number in my list.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Now I want to find the smallest number in a list. I am going to reduce the list to the smallest number.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", "")
        UnorderedList process2
        process2:AddListItem("We're going to add a new global variable to our program, <code>integer min = temps:Get(0)</code>. You can add this to the top of your pseudocode or store it on a scrap piece of paper.")
        process2:AddListItem("Evaluate that statement to find the first value stored in min.")
        process2:AddListItem("Replace the inside of your loop with the new code below.")
        process2:AddListItem("Run the program.")
        process2:AddListItem("Update the variable min as needed.")
        activityWebTable:AddRight(process2)
        PreformattedText code9
        code9:AddText("<code>integer element = temps:Get(i)
if element < min
    min = element
end
i = i + 1</code>")
        activityWebTable:AddRight(code9)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " The smallest number in the list is 65.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " The smallest number in the list is 65. Again, this is easy for you to quickly scan with your eyes when your list is short, but imagine if your list contained 1,000 or 1,000,000 elements? This is where a computer using a loop really shines.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do this: Let's make it more challenging.")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Let's make it more challenging.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", "")
        UnorderedList process3
        process3:AddListItem("With your partner, update the code inside the for loop to now find the largest number (max)")
        process3:AddListItem("One partner creates a new list of 8 random numbers and keeps them hidden.")
        process3:AddListItem("The other partner runs the Traversal Machine to find the largest number in the list by asking for each number one at a time. ")
        process3:AddListItem("Before beginning: "
+ "<ul>"
    + "<li>Store a new global variable: <code>integer max = temps:Get(0)</code></li>"
    + "<li>Evaluate that statement to find the value stored in max. Ask your partner what is stored at " + dq + "temps index 0" + dq + "</li>"
+ "</ul>")
        process3:AddListItem("Run the loop.")
        process3:AddListItem("Check your answer at the end with your partner!")
        activityWebTable:AddRight(process3)
        activityWebTable:AddRightParagraphBoldFront("Note:", "Read this example out loud so students understand how they should interact while doing the challenge.")
        PreformattedText code10
        code10:AddText("<code><i>" + dq + "Marnie, what number is at temps index 0?" + dq + "</i>
- Run one round of the loop. If the value is greater than what is already stored in max, update max. If it is not greater than, continue on.
<i>" + dq + "Marnie, what number is at temps index 1?" + dq + "</i>
- And so on and so forth ... until you get to the end of the list.</code>")
        activityWebTable:AddRight(code10)
        activityWebTable:AddRightParagraph("Allow students five or so minutes to fully complete the task. Here's a sample of what their updated code might look like:")
        PreformattedText code11
        code11:AddText("<code>if element > max
    max = element
end</code>")
        activityWebTable:AddRight(code11)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do this: I have a list of animals...")
        activityWebTable:AddRightParagraphBoldFront("Say:", " Now I have a list of animals from which I want to filter some elements and store them in another list.")
        activityWebTable:AddRightParagraphBoldFront("Do This:", "")
        UnorderedList setup
        setup:AddListItem("One partner creates a list of eight random animal names and stores it in the list <code>animals</code>. Keep this list hidden.")
        setup:AddListItem("The other partner separately keep track of a new list called <code>animalsListA</code>.")
        setup:AddListItem("Change the name of the list in your code to animals.")
        setup:AddListItem("Copy the code below and place it in your loop.")
        activityWebTable:AddRight(setup)
        PreformattedText code12
        code12:AddText("<code>text element = animals:Get(i)
if element:GetSubtext(0, 1) = " + dq + "a" + dq + "
    listAnimalsA:Add(element)
    output " + dq + "Added " + dq + " + element + " + dq + " list" + dq + " 
else
    output " + dq + "Nothing to see here!" + dq + "
end
i = i + 1</code>")
        activityWebTable:AddRight(code12)
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        activityWebTable:AddLeftParagraphBoldFront("Slide:", " Do This: Run the code")
        activityWebTable:AddRightParagraphBoldFront("Do This:", "")
        UnorderedList process4
        process4:AddListItem("Run the code")
        process4:AddListItem("Keep track of your console")
        process4:AddListItem("When finished, trade your animal list with another group, run the code, and compare your console outputs")
        activityWebTable:AddRight(process4)
        activityWebTable:AddRightParagraphBoldFront("Note:", " Expect this activity to take around 5 minutes. When students have finished, move on to the Takeaways in the Wrap Up.")
        //bodyDiv:Add(break) 

        activityWebTable:NextRow()

        bodyDiv:Add(activityWebTable)

        bodyDiv:AddHeading("Wrap Up", 2)
        bodyDiv:AddParagraphBoldFront("Do This:", " Review key takeaways with the class.")
        
        bodyDiv:AddHeading("Key Takeaways", 4)
        UnorderedList takeaways
        takeaways:AddListItem("We use a <strong>loop</strong> to traverse a list, visiting each element one at a time.")
        takeaways:AddListItem("Each pass through the loop, the counting variable changes - usually by one. We can access each element by evaluating <code>list:Get(i)</code> in the loop.")
        takeaways:AddListItem("Once we know the element at each spot in a list, we can do different things with it:"
+ "<ul>"
    + "<li><strong>Filter</strong> (create a subset of elements from the original list)</li>"
    + "<li><strong>Reduce</strong> (reduce the list down to a single element, for example: the smallest number in the list)</li>"
+ "</ul>")
        bodyDiv:Add(takeaways)

        Paragraph video
        video:AddText("<strong>Video:</strong> As a class, watch the ")
        video:AddLink("CS Principles: Processing Lists", "https://youtu.be/RQ6GJt9f2vg")
        video:AddText(" video.")
        bodyDiv:Add(video)
        
        bodyDiv:AddParagraphBoldFront("Journal:", " Have students add the definition for the word traversal to their journal:")
        UnorderedList vocab
        vocab:AddListItem("<i>Traversal:</i> the process of accessing each item in a list one at a time")
        bodyDiv:Add(vocab)

        bodyDiv:AddParagraphBoldFront("Remarks", "")
        UnorderedList finalRemarks
        finalRemarks:AddListItem("We can use traversals to modify data in several different ways that we will investigate tomorrow including transforming or changing each element in a list, filtering a dataset, and combining or comparing data. ")
        bodyDiv:Add(finalRemarks)

        bodyDiv:AddHeading("Assessment: Check for Understanding", 2)

        bodyDiv:AddParagraphBoldFront("For Students:"," Open a word doc or google doc and copy/paste the following question.")

        bodyDiv:AddParagraphBoldFront("Question:", " Why is a traversal with a loop a good method for accessing and updating items in a lengthy list?")

        bodyDiv:AddHeading("Standards Alignment", 2)
            UnorderedList list
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "3A-AP-14, 3B-AP-10")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.O.1, AAP-2.O.2, AAP-2.O.4")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "DAT-2.D.6")
        bodyDiv:Add(list)

        WriteNextTutorial(bodyDiv)
        Add(bodyDiv)
        PageFooter footer
        Add(footer)
    end

    action GetMetaDescription returns text
        return "Explore the use of loops to traverse a list"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 5 Lesson 9: (Traversals Explore)"
    end
    action GetName returns text
        return "Code.Org Unit 5 Lesson 9"
    end
    action GetShortDescription returns text
        return "Explore list traversals"
    end
    action GetLocation returns text
        return "lessons/code/BuildingApps/Lesson9.html"
    end

end

 
    
