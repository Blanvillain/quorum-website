use Libraries.Web.Page.all
use Libraries.Containers.Array

class CodeOrgUnit5Lesson3 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
   
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Unit 5 Lesson 3: Lists Practice")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)


        //page header
        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        Heading h_heading = headDiv:AddHeading("Lists, Loops, and Traversals - Lesson 3: Lists Practice", 1)
        h_heading:AddClassAttribute("text-3xl font-bold")
        h_heading:AddAttribute("data-text", "Lists, Loops, and Traversals - Lesson 3: Lists Practice")
        AddToHeadingArray(h_heading)

       bodyDiv:Add(headDiv)

        
        Section section_intro
        section_intro:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_intro)
        AddHeading(section_intro, "Overview", 2)


        section_intro:AddParagraph("Practice the basics of lists including creating lists and accessing, inserting, and removing elements from lists. ")

        AddHeading(section_intro, "Goals", 3)
        section_intro:AddParagraph("Students will be able to:")
        UnorderedList goal
        goal:AddClassAttribute("list-disc list-outside pl-8")
        goal:AddListItem("Correctly set up a list in a program")
        goal:AddListItem("Debug programs with lists")
        goal:AddListItem("Accurately use list operations including accessing, inserting, and removing elements")
        section_intro:Add(goal)

        AddHeading(section_intro, "Purpose", 3)
        section_intro:AddParagraph("This lesson is students primary opportunity to get hands on with lists in code prior to the Make activity in the following lesson. Give students as much class time as you can to work through these. For this lesson it's recommended that you place students in pairs as a support and to encourage discussion about the challenges or concepts they're seeing. ")

        AddHeading(section_intro, "Resources", 3)
        section_intro:AddParagraph("For the students")
        UnorderedList resources
        resources:AddClassAttribute("list-disc list-outside pl-8 underline text-quorum-blue-150")
        resources:AddListItemLink("CSP-Widgets repository", "https://github.com/qorf/CSP-Widgets")
        section_intro:Add(resources)

        Section section_gettingStarted
        section_gettingStarted:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_gettingStarted)
        AddHeading(section_gettingStarted, "Getting Started (5 minutes)", 2)
        section_gettingStarted:AddParagraphBoldFront("Do This:", " Run a quick vocabulary review with students.")
        UnorderedList vocabulary
        vocabulary:AddClassAttribute("list-disc list-outside pl-8")
        vocabulary:AddListItem("<strong>List</strong> - an ordered collection of elements")
        vocabulary:AddListItem("<strong>Element</strong> - an individual value in a list that is assigned a unique index")
        vocabulary:AddListItem("<strong>Index</strong> - a common method for referencing the elements in a list or string using numbers")
        section_gettingStarted:Add(vocabulary)

        AddHeading(section_gettingStarted, "Remarks", 3)
      
        UnorderedList openingRemarks
        openingRemarks:AddClassAttribute("list-disc list-outside pl-8")
        openingRemarks:AddListItem("Today we're going to have a chance to practice programming with a lot of the concepts and patterns we've explored over the last two lessons. I encourage you to go through these with a partner, but pay close attention to what each other is doing. In our next lesson you're going to have to use a lot of these on an independent project, and these activities are good practice for what you'll find there! Alright, let's get to it!")
        section_gettingStarted:Add(openingRemarks)

        Section section_activity
        section_activity:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_activity)
        AddHeading(section_activity, "Activity (35 minutes)", 2)
         AddHeading(section_activity, "Practice Time", 3)

        Division supportTip = AddTeachingTip(section_activity)
        supportTip:AddParagraphBoldFront("Providing Support:", " Circulate around the room through the lesson encouraging students to use the strategies introduced at the beginning of the lesson. Students have a number of supports at their fingertips, so a big part of your role is helping build their independence in using those resources.")
        supportTip:AddParagraphBoldFront("Common Errors:", " The following are common errors students may encounter in this lesson:")
        UnorderedList errors
        errors:AddClassAttribute("list-disc list-outside pl-8")
        errors:AddListItem("The last index in an array is at <code>array:GetSize() - 1</code> because the first index is 0. One of the most common errors with arrays, therefore, is trying to access indexes that are out of bounds, most notably <code>array:GetSize()</code>.")
        errors:AddListItem("Syntax errors are common with arrays because the syntax is new. In particular, students might be confused how the <code>Add</code> command can accept different inputs to add to the end or the middle of a list.")
        errors:AddListItem("When using the patterns students may become overly reliant on simply copying and pasting without thinking through what the code from the patterns does. They may reference variables that don't exist in their program, for example, because it is in the example code of the pattern.")
        supportTip:Add(errors)

        section_activity:AddParagraphBoldFront("Display:", " Remind students of the debugging process, including some of these important skills:")
        UnorderedList debugging
        debugging:AddClassAttribute("list-disc list-outside pl-8")
        debugging:AddListItem("Try to zoom in on precisely where you're getting stuck.")
        debugging:AddListItem("Talk to your partner! That's what they're there for!")
        debugging:AddListItem("Talk to the group next to you. If another group asks for help make sure to take some time to talk it through with them.")
        section_activity:Add(debugging)

        section_activity:AddParagraphBoldFront("Display:", " Highlight important debugging skills specifically for lists including ways to use the Watch panel and the Debug Console with lists.")

        Paragraph display
        display:AddText("<strong>Display:</strong> Quickly introduce the fact that strings have indexes too. Students will see <code>text:GetSize()</code> and <code>text:GetSubtext(start, end)</code> during the lesson so this is just calling out a concept that students will need to recognize when they get to it. You may optionally use slide 46 from ")
        Link link = display:AddLink("CSP Unit 5 Presentation Slides", "https://docs.google.com/presentation/d/1qQPTgZxJnYZRl-9Do2UB_hM882QtouLclWfCsw8jDBw/copy")
        link:SetClassAttribute("underline text-quorum-blue-150")
        display:AddText(" to present this information. While the slide uses Javascript instead of Quorum, the concept is the same in both languages.")
        section_activity:Add(display)
        
        section_activity:AddParagraphBoldFront("Open a Project:", " Students will be using a number of projects to practice today. Direct students to begin with " + AddTextBoldFront("Lesson3_App1"," of Unit 5 in the CSP-Widgets repository."))

        section_activity:AddParagraphBoldFront("Apps 1-2 Setting Up Lists:", " These levels involve setting up a list and printing the list to the console.")
        UnorderedList activityList1
        activityList1:AddClassAttribute("list-disc list-outside pl-8")
        activityList1:AddListItem("Level 1 App 1: A list of numbers")
        activityList1:AddListItem("Level 2 App 2: A list of strings")
        section_activity:Add(activityList1)

        section_activity:AddParagraphBoldFront("Apps 3-5 Accessing Elements in a List:", " Students practice accessing elements in a list using the index. These levels also practice the random list access and list scrolling pattern students saw in the Investigate lesson.")
        UnorderedList activityList2
        activityList2:AddClassAttribute("list-disc list-outside pl-8")
        activityList2:AddListItem("Level 3 App 3: Students practice printing specific elements to the console using the <code>Get(index)</code> command.")
        activityList2:AddListItem("Level 4 App 4: Students build a " + dq + "Magic 8 Ball" + dq + " app that uses the Random List Access pattern.")
        activityList2:AddListItem("Level 5 App 5: Students build a " + dq + "Class Schedule" + dq + " app that uses the List Scrolling pattern.")
        section_activity:Add(activityList2)
        

        Division extensions = AddTeachingTip(section_activity)
        section_activity:AddParagraphBoldFront("Extension activities","")
        UnorderedList extensionList
        extensionList:AddClassAttribute("list-disc list-outside pl-8")
        extensionList:AddListItem("App 5: Ask students to add the ability to add new classes to the list in the Class Schedule app.")
        extensionList:AddListItem("App 10: Ask students to add the ability to remove items in the Food Diary app.")
        extensionList:AddListItem("App 11: Ask students to add a button that will " + dq + "Undo" + dq + " adding the most recent song to the list. This is pretty tricky and requires keeping track of some new information.")
        extensions:Add(extensionList)
       

        section_activity:AddParagraphBoldFront("App 6-7 Strings and Indexes:", " Students practice accessing characters in a string.")
        UnorderedList activityList3
        activityList3:AddClassAttribute("list-disc list-outside pl-8")
        activityList3:AddListItem("Level 6 App 6: Students practice printing the length and first characters of strings.")
        activityList3:AddListItem("Level 7 App 7: Students debug code that uses <code>text:GetSubtext(start, end)</code> to grab different parts of a date stored as a string.")
        section_activity:Add(activityList3)

        section_activity:AddParagraphBoldFront("Apps 8-11 List Operations:", " In these levels, students work with list operations: <code>Add(element)</code>, <code>RemoveAt(index)</code>, and <code>Add(index, element)</code>.")
        UnorderedList activityList4
        activityList4:AddClassAttribute("list-disc list-outside pl-8")
        activityList4:AddListItem("Level 8 App 8: Students practice using <code>Add(element)</code> to increase the size of a list.")
        activityList4:AddListItem("Level 9 App 9: Students modify a " + dq + "Food Diary" + dq + " app so that the user can add new elements to a list.")
        activityList4:AddListItem("Level 10 App 10: Students practice using <code>RemoveAt(index)</code> and <code>Add(index, element)</code> to modify lists.")
        activityList4:AddListItem("Level 11 App 11: Students modify a " + dq + "Top Ten Songs" + dq + " app so that the user can add new items into the middle of a list while keeping the total length of the list to 10.")
        section_activity:Add(activityList4)


        
        Section section_wrap
        section_wrap:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_wrap)
        AddHeading(section_wrap, "Wrap up (5 Minutes)", 2)
        AddHeading(section_wrap, "Discussion", 3)
        section_wrap:AddParagraphBoldFront("Prompt:", " What aspects of working with lists do you feel like clicked today? What do you still feel like you have trouble with?")
        section_wrap:AddParagraphBoldFront("Discuss:", " Have students share with one another before sharing with the whole class.")
        section_wrap:AddParagraphBoldFront("Goal:", " Use this opportunity to address any lingering questions or misconceptions in the room. You can also use this as a source of discussion topics to kick off the following lesson. As you lead the discussion, call out the many resources students have access to help when they're getting stuck. ")     
        
        AddHeading(section_wrap, "Remarks", 3)
        UnorderedList closingRemark
        closingRemark:AddClassAttribute("list-disc list-outside pl-8")
        closingRemark:AddListItem("Working with lists can be tricky - especially working with the index. We will get more practice tomorrow by making an app that uses lists to store information. ")
        section_wrap:Add(closingRemark)

                       Section section_assessment
        section_assessment:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_assessment)
        AddHeading(section_assessment, "Assessment: Check for Understanding - AP Practice", 2)

   
       section_assessment:AddParagraph("Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.")
       
            AddHeading(section_assessment, "For Students", 3)
        section_assessment:AddParagraph("Open a word doc or google doc and copy/paste the following question.")

        AddHeading(section_assessment, "Question 1", 3)
        section_assessment:AddParagraph(" What will be displayed after this code snippet is run?")
        section_wrap:Add(preformatter:GeneratePreformattedCode("gems <- [" + dq + "ruby" + dq + ", " + dq + "sapphire" + dq + ", " + dq + "garnet" + dq + "]
gems <- [" + dq + "opal" + dq + ", " + dq + "emerald" + dq + "]
DISPLAY(gems[1])"))
        PreformattedText question1
        question1:AddText("<code>gems <- [" + dq + "ruby" + dq + ", " + dq + "sapphire" + dq + ", " + dq + "garnet" + dq + "]
gems <- [" + dq + "opal" + dq + ", " + dq + "emerald" + dq + "]
DISPLAY(gems[1])</code>")
        //section_assessment:Add(question1)

         AddHeading(section_assessment, "Question 2", 3)
        section_assessment:AddParagraph(" What will be displayed after this code snippet is run?")
        section_wrap:Add(preformatter:GeneratePreformattedCode("luckyNumbers <- [15, 33, 25]
INSERT(luckyNumbers, 2, 13)
APPEND(luckyNumbers, 3)
REMOVE(luckyNumbers, 1)
DISPLAY(LENGTH(luckyNumbers))"))
        PreformattedText question2
        question2:AddText("<code>luckyNumbers <- [15, 33, 25]
INSERT(luckyNumbers, 2, 13)
APPEND(luckyNumbers, 3)
REMOVE(luckyNumbers, 1)
DISPLAY(LENGTH(luckyNumbers))</code>")
        //section_assessment:Add(question2)
        

        Section section_standards
        section_standards:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_standards)
        AddHeading(section_standards, "Standards Alignment", 2)
            UnorderedList list
            list:AddClassAttribute("list-disc list-outside pl-8")
                AddListItemWithBoldAtFront(list, "CSTA K-12 Computer Science Standards (2017): ", "3A-AP-14")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-1.D.7, AAP-1.D.8")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.D.2")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.N.1, AAP-2.N.2")
                AddListItemWithBoldAtFront(list, "CSP2021: ", "AAP-2.0.3")
        section_standards:Add(list)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Practice writing and debugging apps with lists"
    end

    action GetSummaryName returns text
        return "Code.Org Unit 5 Lesson 3 (Lists Practice)"
    end
    action GetName returns text
        return "Code.Org Unit 5 Lesson 3"
    end
    action GetShortDescription returns text
        return "Practice using lists"
    end
    action GetLocation returns text
        return "lessons/code/BuildingApps/Lesson3.html"
    end

    action GetLinkName returns text
        return "Lists Practice"
    end

    action GetSectionName returns text
        return "Lists, Loops, and Traversals"
    end   
end

 
    
