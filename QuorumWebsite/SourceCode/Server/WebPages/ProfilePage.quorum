use Libraries.Web.Page.all
use Libraries.Containers.Array
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.System.DateTime


class ProfilePage is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    text scriptsLocation = "/script/"

    /*
        This page can't connect to the database so the response page will get the projects
        and pass the projects as a DataFrame so the page can generate correctly.
    */
    DataFrame projectTable = undefined
    text username = ""

    action SetProjects(DataFrame table)
        me:projectTable = table
    end

    action SetUsername(text username)
        me:username = username
    end

    action Setup
        //html header stuff
        SetWebPageTitle("Quorum Lessons - Quorum Programming Language")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division leftDiv = divs:Get(0)
        Division bodyDiv = divs:Get(1)
        Division rightDiv = divs:Get(2)

        leftDiv:SetClassAttribute("hidden sm:block w-1/5 sticky top-8 h-0")
        bodyDiv:SetClassAttribute("flex flex-col w-5/5 sm:w-4/5 mx-4 overflow-auto gap-y-4")
        rightDiv:SetClassAttribute("hidden")

        //page header
        Division headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("My Projects", 1)
        headDiv:AddText("On this page you can create, edit, share, and delete projects.")
        Add(headDiv)

        // add table
        Division projectTable
        projectTable:SetClassAttribute("projectTable")
        projectTable:Add(GetProjectTable())
        bodyDiv:Add(projectTable)

        Script checkboxScript
        checkboxScript:SetCode("$('.publicCheckbox').change(function() {
var public = this.checked ? 1 : 0;
var value = this.value;
    $.ajax({
        type: 'POST',
        url: '/ChangePrivacy.quorum',
        data: {public: public, file: value},
        success: function (result) {
        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('I could not connect to the server at quorumlanguage.com: ' + thrownError);
        }
    });
});")

        bodyDiv:Add(checkboxScript)
        // new project button
        Division buttonDiv
        Form newProjectButton
        newProjectButton:SetFormAction("Project.quorum")
        Input submit
        submit:SetType("submit")
        submit:SetClassAttribute("newProjectButton")
        submit:SetDefaultValue("Create a New Project")
        newProjectButton:Add(submit)
        buttonDiv:Add(newProjectButton)
        bodyDiv:Add(buttonDiv)

    end

    action GetName returns text
        return "Profile"
    end

    action GetShortDescription returns text
        return "Profile"
    end

    action GetProjectTable returns WebTable
        WebTable table = AddWebTable("Project Table")
        TableBody body = AddTableBody()

        // make header row

        Array<text> tableHeaders
        tableHeaders:Add("Project Name")
        tableHeaders:Add("Last Modified")
        tableHeaders:Add("Public")
        tableHeaders:Add("Load")
        tableHeaders:Add("Share")
        tableHeaders:Add("Delete")
        TableHeader thead = AddTableHeaderRow(tableHeaders)
        table:Add(thead)

        DataFrameColumn projectNames = projectTable:GetColumn("project_name")
        DataFrameColumn modifiedDates = projectTable:GetColumn("modified")
        DataFrameColumn publicList = projectTable:GetColumn("public")
        integer i = 0
        
        repeat while i < projectNames:GetSize()
            text projectName = projectNames:GetAsText(i)
            text modified = modifiedDates:GetAsText(i)
            check
                DateTime modifiedDate = modifiedDates:GetAsDateTime(i)
                modified = modifiedDate:GetMonthName()+" "+ modifiedDate:GetDayOfMonth()+", "+modifiedDate:GetYear()
            detect e

            end
            isPublic = publicList:GetAsText(i)

            boolean checked = (isPublic = "1")
            text shareLink = "quorumlanguage.com/Project.quorum?user=" + SanitizeForHTML(username) + "&file=" + SanitizeForHTML(projectName)

            Array<text> projectRow


            // projectName
            projectRow:Add(projectName)
            // lastModified
            projectRow:Add(modified)
            // public checkbox
            Input checkbox
            checkbox:SetClassAttribute("publicCheckbox")
            checkbox:SetType("checkbox")
            checkbox:SetChecked(checked)
            checkbox:SetIdentifier("publicBox"+i)
            checkbox:SetName("public")
            checkbox:SetDefaultValue(SanitizeForHTML(projectName))
            projectRow:Add(checkbox:ToText())
            // load
            Form loadButton
            loadButton:SetFormAction("Project.quorum")

            Input userInput
            userInput:SetType("hidden")
            userInput:SetName("user")
            userInput:SetDefaultValue(SanitizeForHTML(username))

            Input fileInput
            fileInput:SetType("hidden")
            fileInput:SetName("file")
            fileInput:SetDefaultValue(SanitizeForHTML(projectName))

            Input profileButton
            profileButton:SetClassAttribute("profileButton")
            profileButton:SetType("submit")
            profileButton:SetDefaultValue("Load")
            loadButton:Add(userInput)
            loadButton:Add(fileInput)
            loadButton:Add(profileButton)
            projectRow:Add(loadButton:ToText())

            // share
            Button shareButton
            shareButton:SetClassAttribute("profileButton")
            shareButton:SetOnClick("showShareModal('"+shareLink+"')")
            shareButton:AddText("Share")
            projectRow:Add(shareButton:ToText())

            // delete
            Button deleteButton
            deleteButton:SetClassAttribute("profileButton")
            deleteButton:AddAttribute("value", SanitizeForHTML(projectName))
            deleteButton:SetOnClick("deleteRow(this)")
            deleteButton:AddText("Delete")
            projectRow:Add(deleteButton:ToText())
            body:Add(AddTableBodyRow(projectRow))

            i = i + 1
        end
        table:Add(body)
        return table
    end

    action SanitizeForHTML(text string) returns text
        string = string:Replace("&", "&amp;")
        string = string:Replace(dq, "&quot;")
        string = string:Replace("'", "&#039;")
        string = string:Replace("<", "&lt;")
        string = string:Replace(">", "&gt;")
        return string
    end



    action AdjustMain(MainContent mainRegion)
        mainRegion:AddAttribute("role","main")
        mainRegion:SetIdentifier("main")
        mainRegion:SetTabIndex("-1")
    end

    action GetMediaStyleSheet(text name, text media) returns HeaderLink
        HeaderLink link
        link:SetAddress(name)
        link:SetType("text/css")
        link:SetRelationship("stylesheet")
        link:SetMedia(media)
        return link
    end

    action AddKeywords
        MetaData keywords
        keywords:AddAttribute("name", "keywords")
        keywords:AddAttribute("content", "programming for beginners, game programming, 
        lego programming, computer courses, programming 3D, programming,
        animation, graphics, multimedia, games, accessibility, computer science for all,
        computer science, computer languages, Quorum programming language, robot programming,
        online programming")
        AddMetaData(keywords)
    end

    action GetMetaDescription returns text
        return "Create, edit, share, and delete projects."
    end

end
