use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph

class HoCAstro5 is HourOfCodeAstro
    integer ACTIVITY = 5
    text SUBTITLE = "Create an integer variable"

    action Setup()
        Setup(ACTIVITY, SUBTITLE, GetInstructions(), GetChallenge())
    end

    action GetInstructions() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division instructions
        Preformatter pre
        
        instructions:AddParagraph("As we just learned variables are containers in the memory of a computer to hold values. There are different types of containers though to hold different types of values. We already learned about text variables, but there are other kinds of variables as well. In this activity, we are going to learn how to create an integer variable which can be used to hold a numeric value. An integer is any number which is positive or negative, including zero which does not have any decimal places. Variables types like <b>integer</b> that can hold numeric values are important in computers because we use them to calculate formulas and to change values. Later we will learn about numeric values that have decimal places and about how to you can change the type of a variable in some cases.")

        instructions:AddParagraph("One of the things astronomers need to communicate to a robotic telescope is how long to take an image. In Skynet, we specify this time in the number of seconds. For the next activity, let's create an <b>integer</b> variable called <b>seconds</b> and assign it a value of 5, like this:")

        CodeBlock cb1
        cb1:AddText("integer seconds = 5")
        instructions:Add(pre:GeneratePreformattedCode(cb1))

        instructions:AddParagraph("On the final line, use the <b>output</b> command to display the variable's value:")

        CodeBlock cb2
        cb2:AddText("output seconds")
        instructions:Add(pre:GeneratePreformattedCode(cb2))

        instructions:AddParagraph("When you are ready, select the green Run Program button below the editor on the right (second in the tab order).")

        return instructions
    end

    action GetChallenge() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division challenge
        challenge:AddHeading("Exploration Challenge (Optional):", 2)
        Paragraph challengeText       
        challengeText:SetIdentifier("astro-challenge")
        challengeText:AddText("In the previous Exploration Challenges, we have added text variables and strings in quotations in the output line. We can also mix different types of variables in output statements as well as use more than two variables in the same line. For this challenge, create two more integer variables called hours and minutes and assign values to them like you did with seconds in this activity. In the output line, use the variables and text strings with colons (" + dq + ":" + dq + ") to output them in a typical time format like: <i>1:48:23</i>.")
        challenge:Add(challengeText)
        return challenge
    end
end