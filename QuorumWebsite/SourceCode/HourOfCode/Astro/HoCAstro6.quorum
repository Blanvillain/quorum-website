use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph

class HoCAstro6 is HourOfCodeAstro
    integer ACTIVITY = 6
    text SUBTITLE = "Adding a value to a variable"
    action Setup()
        Setup(ACTIVITY, SUBTITLE, GetInstructions(), GetChallenge())
    end

    action GetInstructions() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division instructions
        Preformatter pre
        
        instructions:AddParagraph("Now that we know about <b>integer</b> variables, we are going to use one in a computation. In this activity, we are going to create an <b>integer</b> variable, add 1 to it and then output the answer to our screen. The solution will use 3 lines of code. On the first line, create an <b>integer</b> called <b>seconds</b> and assign it a value of 5 to start with.")

        CodeBlock cb1
        cb1:AddText("integer seconds = 5")
        instructions:Add(pre:GeneratePreformattedCode(cb1))

        instructions:AddParagraph("On the next line, add 1 to <b>seconds</b> by assigning <b>seconds + 1</b> to it. Notice we can use the variable <b>seconds</b> twice in the same equation (on the left and right side of the equation) because the computer will use the original value in the computer's memory in the calculation on the right side of the equation first and then write the new value into memory on the left side of the equation after the calculation is complete.  So we can add one to a variable value like this:")

        CodeBlock cb2
        cb2:AddText("seconds = seconds + 1")
        instructions:Add(pre:GeneratePreformattedCode(cb2))

        instructions:AddParagraph("On the next line, use the <b>output</b> command to display the variable's value:")

        CodeBlock cb3
        cb3:AddText("output seconds")
        instructions:Add(pre:GeneratePreformattedCode(cb3))

        instructions:AddParagraph("When you are ready, select the green Run Program button below the editor on the right (second in the tab order).")

        return instructions
    end

    action GetChallenge() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division challenge
        Paragraph challengeText       
        challengeText:SetIdentifier("astro-challenge")
        challengeText:AddText("Output the values from 1 to 5 by incrementing the seconds variable each time and then sending the value to the console. You can do this in five separate output statements or by using a <b>repeat</b> loop. For more information on repeat loops in Quorum look at the <a href=https://quorumlanguage.com/tutorials/language/repeat.html target="+dq+"_blank"+dq+">Repeat Tutorial</a>.")
        challenge:Add(challengeText)
        return challenge
    end

    action GetLocation returns text
        return "hourofcode/astro" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return "Part " + ACTIVITY + ": " + SUBTITLE
    end

    action GetSectionName returns text
        return "Astronomy"
    end
end
