use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph

class HoCAstro16 is HourOfCodeAstro
    integer ACTIVITY = 16
    text SUBTITLE = "Using the Game Engine"

    action Setup()
        Setup(ACTIVITY, SUBTITLE, GetInstructions(), GetChallenge())
    end

    action GetInstructions() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        text cr = ""
        cr = cr:GetCarriageReturn()
        Division instructions
        Preformatter pre
        
        instructions:AddParagraph("Our overall goal in this Hour of Code is to create a virtual telescope in our browser that we can control like a real robotic telescope. Now that we've learned some of the basics of computer programming we are going to start putting the pieces together. In order to have a virtual world environment we are going to use the Quorum Game Engine. The first thing we will do is to create our <b>Audio</b> object inside a program that runs the Game Engine.")
        
        instructions:AddParagraph("We don't need to get into all the details of how the Game Engine works in order to take this first step, so we will use the " + dq + "skeleton" + dq + " of a Game Engine to allow us to play our sound file. The starting code in the code window marks two places where we need to insert code to make our sound play.  At the top, we'll put in our library reference:")

        CodeBlock cb1
        cb1:AddText("use Libraries.Sound.Audio")
        instructions:Add(pre:GeneratePreformattedCode(cb1))

        instructions:AddParagraph("The <b>CreateGame</b> action in the starting code is automatically called by the Game Engine when the program runs, so any code we put in that section is run one time when the program starts. This is the section where we will create our <b>Audio</b> object and play it. We can use the code that we wrote in the previous section:")

        CodeBlock cb2
        cb2:AddText("Audio clickSound" + cr)
        cb2:AddText("clickSound:Load(" + dq + "media/astro/click.wav" + dq + ")" + cr)
        cb2:AddText("clickSound:Play()")
        instructions:Add(pre:GeneratePreformattedCode(cb2))

        instructions:AddParagraph("When you finish and click the Run Program button, you should hear the click sound play once automatically.")

        return instructions
    end

    action GetChallenge() returns Division
        text dq = ""
        dq:GetDoubleQuote()
        Division challenge
        Paragraph challengeText       
        challengeText:SetIdentifier("astro-challenge")
        challengeText:AddText("There is another different click sound on the server at: <b>media/astro/click2.wav</b>. Create another <b>Audio</b> object with a different name and play that sound also. Then write the code to ask the user which sound they want to hear (1 or 2) and play the correct one by using an <b>if/else</b> statement. If you want to go further, use an <a href=https://quorumlanguage.com/tutorials/language/if.html target=" + dq + "_blank" + dq + ">if/elseif/else</a> statement to either play a sound or display an error if the user did not type a 1 or 2 when you asked for input.")
        challenge:Add(challengeText)
        return challenge
    end

    action GetLocation returns text
        return "hourofcode/astro" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return "Part " + ACTIVITY + ": " + SUBTITLE
    end

    action GetSectionName returns text
        return "Astronomy"
    end
end
