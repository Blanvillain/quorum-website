use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Image
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableBody
use Libraries.Containers.Array
use Libraries.Web.Page.TableHeader


class HoCDataScience2 is HourOfCodeDataScience
    integer ACTIVITY = 2
    text SUBTITLE = "Labeling a Chart"

    action Setup()
// set values for the block ide on this page
        SetPaletteFileName("palette/dataScience2.xml")
        SetCodeForBlocks("html/hourofcode/datascience/datascience2.quorum")
        Setup(ACTIVITY, SUBTITLE, GetIntro(), GetInstructions(), GetBlockIDE())
    end

    action GetIntro() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division intro
        Preformatter pre

        // tracking pixel for code.org
        //intro:AddImage("https://code.org/api/hour/begin_quorum_astronomy.png", "")
        intro:AddParagraph("")
        intro:AddParagraph("Good Job! Now we can investigate our data using a Scatter Plot instead of just looking at columns and rows in a spreadsheet. This can be helpful in exploring the relationship between two variables by plotting them on the X and Y axes. But before we move on, we should make sure we are using good labels on our chart. Looking at the same Penguins1 dataset, you might notice that the headers are sort of funny to read; 'bill_length' and 'flipper_length'. These headers are used for the labels of the X and Y axes when we make our chart, but we can make them (and the title at the top) say whatever we want.")
        intro:AddParagraph("")

        WebTable table = AddWebTable("Sample of Penguins1.CSV file")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("bill_depth")
        tableHeaderArray:Add("bill_length") 

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> penguinData1
        penguinData1:Add("18.7") 
        penguinData1:Add("39.1") 
        tableBody:Add(AddTableBodyRow(penguinData1))

        Array<text> penguinData2
        penguinData2:Add("18.3") 
        penguinData2:Add("37.8") 
        tableBody:Add(AddTableBodyRow(penguinData2))

        Array<text> penguinData3
        penguinData3:Add("18.5") 
        penguinData3:Add("36.8") 
        tableBody:Add(AddTableBodyRow(penguinData3))

        Array<text> penguinData4
        penguinData4:Add("13.2") 
        penguinData4:Add("46.1") 
        tableBody:Add(AddTableBodyRow(penguinData4))

        Array<text> penguinData5
        penguinData5:Add("17.9") 
        penguinData5:Add("46.5") 
        tableBody:Add(AddTableBodyRow(penguinData5))
    
        table:Add(tableBody)
        intro:Add(table)

        
        return intro

    end

    action GetInstructions() returns Division
        Division instructions

        instructions:AddParagraph("")
        instructions:AddParagraph("In the code editor below, we have a program that creates a Chart with default labels. Take code blocks from the palette and place them below where we make the Chart object but before we Display it.")
        instructions:AddParagraph("<b>Make up a new Chart title, Chart subtitle, X axis title and Y axis title.</b>")
        instructions:AddParagraph("")

        return instructions
    end

//    action GetIDE() returns IDE
//        CodeForIDE code
//        code:AddFileUrl("Main.quorum", "html/hourofcode/datascience/datascience2.quorum")
//        IDE ide = AddIDE()
//        ide:SetLightTheme()
//        ide:SetCodeForIDE(code:GetJsonArray())
//        ide:SetIdeTitle("Type your code below...")
//        
//        return ide
//    end

    action GetLocation returns text
        return "hourofcode/datascience" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return  SUBTITLE
    end

    action GetSectionName returns text
        return "Data Science"
    end

    action GetName returns text
        return SUBTITLE
    end

    action GetShortDescription returns text
        return "how to custimze the labels on a Chart."
    end
end
