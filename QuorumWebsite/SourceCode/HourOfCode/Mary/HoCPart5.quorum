use Libraries.Web.Page.all
use Libraries.Containers.Array

class HoCPart5 is HourOfCode
    text dq = ""
    dq = dq:GetDoubleQuote()

    text MEDIA_FOLDER = "/media/hourofcode/"
    text TITLE = "Hour of Code: Part 5 | Quorum Programming Language"
    text HEADER = "Hour of Code: Part 5"
    text SUBTITLE = "Choose My Clothing!"
    text MOVE_ON_TEXT = "Move on to Part 6"
    text YOUTUBE_ADDRESS = "//www.youtube.com/embed/xZJCkKSXmq4?rel=0"
    text SLIDES_HEADER = "Putting it all together!"
    integer ACTIVITY = 5

    action Setup()
        Array<Division> slides
        slides:Add(Slide1())
        slides:Add(Slide2())
        slides:Add(Slide3())
        slides:Add(Slide4())
        slides:Add(Slide5())
        Setup(TITLE, HEADER, SUBTITLE, SLIDES_HEADER, MOVE_ON_TEXT, YOUTUBE_ADDRESS, ACTIVITY, slides)
    end

    action Slide1 returns Division
      Division div
        div:AddAttribute("data-heading", "Putting It All Together")

        div:AddParagraph("We've learned quite a bit up to this point and now it's time use all of our new skills to write a program that will detect if a number is even or odd.")
        div:AddParagraph("We are going to test a range of numbers, so we need to loop from a starting number to a stopping number.")
        div:AddHeading("Try it!", 3)
        div:AddParagraph("First create a number variable called <code>testNumber</code> and set it to your starting number.")
        div:AddParagraph("Next, set up a repeat loop using <code>repeat until</code> and for the condition specify the number to stop at.")
        div:AddParagraph("Finally, don't forget to include <code>end</code> to mark the end of the loop. Move on to the next slide when you're done.")

      return div
    end

    action Slide2 returns Division
      Division div
        div:AddAttribute("data-heading", "Implementing the Logic: Part 1")

        div:AddParagraph("Now that we have the <code>repeat</code> loop set up, we need to complete the code block to repeat inside the loop.")
        div:AddParagraph("We will use the modulus operator <code>mod</code> to determine if a number is even or odd. Remember that the modulus operator returns the remainder when dividing two numbers, so any even number divided by two will have a remainder of 0 and any odd number will have a remainder of 1.")
        div:AddHeading("Try it!", 3)
        div:AddParagraph("Create an <code>if</code> statement inside the <code>repeat</code> loop checking the modulus of the variable:")
        div:AddParagraph("<code>if testNumber mod 2 = 0</code>")
        div:AddParagraph("<code>end</code> <code>end</code>")
        div:AddParagraph("(Then move to the next slide)")

      return div
    end

    action Slide3 returns Division
      Division div
        div:AddAttribute("data-heading", "Implementing the Logic: Part 2")

        div:AddParagraph("Our <code>if</code> statement is now set up for even numbers.  If we want alternative instructions to run if the number is odd, we need some kind of <code>else</code> condition as well.")
        div:AddParagraph("Since there are only two possibilities (even or odd), we can use the simple default <code>else</code> statement here.")
        div:AddHeading("Try it!", 3)
        div:AddParagraph("Before the <code>end</code> in the <code>if</code> statement, insert a line with <code>else</code> to set up the block for odd numbers.")
        div:AddParagraph("Now, to increment our testing variable by one on each pass of the loop, insert a line <code>testNumber = testNumber + 1</code> just after the end of the <code>if</code> block.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(Then move to the next slide)")

      return div
    end

    action Slide4 returns Division
      Division div
        div:AddAttribute("data-heading", "Being Creative")

        div:AddParagraph("So now we have a logical code structure set up to execute different instructions if a number is even or if it is odd inside a repeat loop that will test a range of numbers.")
        div:AddParagraph("All we need to do now is write some instructions inside the code blocks!")
        div:AddParagraph("For this example, let's just use an <code>output</code> statement to print a message depending on whether the number is even or odd. You can also try a <code>say</code> statement if you want to hear it. Try something like <code>output testNumber + "+dq+" is even."+dq+"</code> in the first block and then Run it.")
        div:AddParagraph("The next slide has the full code for this section...experiment with other ideas yourself.")

      return div
    end

    action Slide5 returns Division
      Division div
        div:AddAttribute("data-heading", "Example Code")
        div:AddParagraph("number testNumber = 0")
        div:AddParagraph("repeat until testNumber = 10")
        div:AddParagraph("&nbsp&nbsp&nbsp&nbsp if testNumber mod 2 = 0")
        div:AddParagraph("&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp output testNumber + "+dq+" is even"+dq+"")
        div:AddParagraph("&nbsp&nbsp&nbsp&nbsp else")
        div:AddParagraph("&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp output testNumber + "+dq+" is odd"+dq+"")
        div:AddParagraph("&nbsp&nbsp&nbsp&nbsp end")
        div:AddParagraph("&nbsp&nbsp&nbsp&nbsp testNumber = testNumber + 1")
        div:AddParagraph("end")
        div:AddParagraph("Mary's full version of the clothing picker can be found <a href="+dq+"projects/clothing_picker.zip"+dq+">here</a>.")

      return div
    end



    action GetSummaryName returns text
        return "Hour of Code Part 5"
    end

    action GetImageLocation returns text
        return ""
    end

    action GetName returns text
        return "Hour of Code Part 5"
    end

    action GetShortDescription returns text
        return "first steps in Quorum"
    end

    action GetLocation returns text
        return "hourofcode/part5.html"
    end

    action GetLinkName returns text
        return "Part " + ACTIVITY + ": " + SUBTITLE
    end

    action GetSectionName returns text
        return "Code With Mary"
    end
end

//  slideArray[0] = "<h5 class=\"slideHeader\"role=\"heading\">Putting It All Together</h5>\n\
//        <ul>\n\
//        <li>We've learned quite a bit up to this point and now it's time use all of our new skills to write a program that will detect if a number is even or odd.</li>\n\
//        <li>We are going to test a range of numbers, so we need to loop from a starting number to a stopping number.</li>\n\
//        <span class=\"title\">Try it!</span>\n\
//        <div class =\"task\"><p>First create a number variable called <code>testNumber</code> and set it to your starting number.<br>Next, set up a repeat loop using <code>repeat until</code> and for the condition specify the number to stop at.<br>Finally, don't forget to include <code>end</code> to mark the end of the loop. Move on to the next slide when you're done.</p></div>\n\
//        </ul>";
//
//  slideArray[1] = "<h5 class=\"slideHeader\"role=\"heading\">Implementing the Logic: Part 1</h5>\n\
//        <ul>\n\
//        <li>Now that we have the <code>repeat</code> loop set up, we need to complete the code block to repeat inside the loop.</li>\n\
//        <li>We will use the modulus operator <code>mod</code> to determine if a number is even or odd. Remember that the modulus operator returns the remainder when dividing two numbers, so any even number divided by two will have a remainder of 0 and any odd number will have a remainder of 1.</li>\n\
//        <span class=\"title\">Try it!</span>\n\
//        <div class =\"task\"><p>Create an <code>if</code> statement inside the <code>repeat</code> loop checking the modulus of the variable:<br><code>if testNumber mod 2 = 0</code><br><code>end</code> <code>end</code>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(Then move to the next slide).</div>\n\
//        </ul>";
//
//  slideArray[2] = "<h5 class=\"slideHeader\"role=\"heading\">Implementing the Logic: Part 2</h5>\n\
//        <ul>\n\
//        <li>Our <code>if</code> statement is now set up for even numbers.  If we want alternative instructions to run if the number is odd, we need some kind of <code>else</code> condition as well.</li>\n\
//        <li>Since there are only two possibilities (even or odd), we can use the simple default <code>else</code> statement here.</li>\n\
//        <span class=\"title\">Try it!</span>\n\
//        <div class =\"task\"><p>Before the <code>end</code> in the <code>if</code> statement, insert a line with <code>else</code> to set up the block for odd numbers.<br>\n\
//Now, to increment our testing variable by one on each pass of the loop, insert a line <code>testNumber = testNumber + 1</code> just after the end of the <code>if</code> block.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(Then move to the next slide)</p></div>\n\
//        </ul>";
//
//  slideArray[3] = "<h5 class=\"slideHeader\"role=\"heading\">Being Creative</h5>\n\
//        <ul>\n\
//        <li>So now we have a logical code structure set up to execute different instructions if a number is even or if it is odd inside a repeat loop that will test a range of numbers.</li>\n\
//        <li>All we need to do now is write some instructions inside the code blocks!</li>\n\
//        <li>For this example, let's just use an <code>output</code> statement to print a message depending on whether the number is even or odd. You can also try a <code>say</code> statement if you want to hear it. Try something like <code>output testNumber + \" is even.\"</code> in the first block and then Run it.</li>\n\
//        <li>The next slide has the full code for this section...experiment with other ideas yourself.</li>\n\
//        </ul>";
//
//  slideArray[4] = "<h5 class=\"slideHeader\"role=\"heading\">Example Code</h5><p class =\"code\">number testNumber = 0<br>\n\
//        repeat until testNumber = 10<br>\n\
//        &nbsp&nbsp&nbsp&nbsp if testNumber mod 2 = 0<br>\n\
//        &nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp output testNumber + \" is even\"<br>\n\
//        &nbsp&nbsp&nbsp&nbsp else<br>\n\
//        &nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp output testNumber + \" is odd\"<br>\n\
//        &nbsp&nbsp&nbsp&nbsp end<br>\n\
//        &nbsp&nbsp&nbsp&nbsp testNumber = testNumber + 1<br>\n\
//        end</p><br>\n\
//        <ul><li>Mary's full version of the clothing picker can be found <a href=\"projects/clothing_picker.zip\">here</a>.</li></ul>";

