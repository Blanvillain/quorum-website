use Libraries.Web.Page.all
use Libraries.Containers.Array

class HoCPart3 is HourOfCode
    text dq = ""
    dq = dq:GetDoubleQuote()

    text MEDIA_FOLDER = "/media/hourofcode/"
    text TITLE = "Hour of Code: Part 3 | Quorum Programming Language"
    text HEADER = "Hour of Code: Part 3"
    text SUBTITLE = "This or That"
    text MOVE_ON_TEXT = "Move on to Part 4"
    text YOUTUBE_ADDRESS = "//www.youtube.com/embed/EKOXMt2FeTc?rel=0"
    text SLIDES_HEADER = "Boolean Variables and Conditionals"
    integer ACTIVITY = 3

    action Setup()
        Array<Division> slides
        slides:Add(Slide1())
        slides:Add(Slide2())
        slides:Add(Slide3())
        slides:Add(Slide4())
        slides:Add(Slide5())
        slides:Add(Slide6())

        Setup(TITLE, HEADER, SUBTITLE, SLIDES_HEADER, MOVE_ON_TEXT, YOUTUBE_ADDRESS, ACTIVITY, slides)
    end

    action Slide1 returns Division
      Division div
        div:AddAttribute("data-heading", "Boolean Variables")

        div:AddParagraph("A boolean variable is a special type of variable that contains one of two possible values: true or false.")
        div:AddParagraph("By themselves, boolean variables don't seem to do too much, but they are a powerful tool when working with control structures, as we will soon see.")
        div:AddAttribute("class", "task")
        div:AddParagraph("Try it!")
        div:AddParagraph("Make a boolean variable and assign it a value of true: boolean sayStatement = false.")
        div:AddParagraph("Create a text variable named "+dq+"greeting"+dq+" and assign it a string you like in double quotes: text greeting = "+dq+"Hello!"+dq+"")
        div:AddParagraph("We will use these variables in a couple slides.")

      return div
    end

    action Slide2 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: If (Structure)")

        div:AddParagraph("One powerful ability of a computer is to evaluate a condition and make a decision about which instructions to execute. These decisions can be made with a simple conditional statement, which in Quorum uses the keyword if.")
        div:AddParagraph("An if statement has three parts: the keyword if followed by a condition, followed by the block of code to execute if the condition is true, followed by end.")
        div:AddParagraph("boolean variables are often used to specify the condition.")
        div:AddAttribute("class", "task")
        div:AddParagraph("Try it!")
        div:AddParagraph("Create an if statement using the boolean from the last slide: if sayStatement = true and then type end on a new line and then move to the next slide.")

      return div
    end

    action Slide3 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: If (Conditional Logic)")

        div:AddParagraph("When determining whether to execute the block of code within the if statement the computer checks the condition part of the statement to see whether it is true or false.")
        div:AddParagraph("You can specify the condition using a boolean variable or any other expression that evaluates to true or false")
        div:AddParagraph("For example, if you typed if 1 + 1 = 4 the condition 1 + 1 = 4 evaluates to false, so the code is skipped.")
        div:AddParagraph("If code is skipped, the computer jumps to the end keyword for the next instruction.")
        div:AddAttribute("class", "task")
        div:AddParagraph("Try it!")
        div:AddParagraph("Inside the previous if block type: say greeting and then Run your code.")

      return div
    end

    action Slide4 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: If (elseif)")

        div:AddParagraph("You can also specify an alternatve condition to evaluate if the condition in the first part of the if statement is false by using the keyword elseif before the end.")
        div:AddParagraph("We can include as many elseif conditions as we want and include code blocks to execute in each case.")
        div:AddParagraph("There is a single end statement at the conclusion.")
        div:AddAttribute("class", "task")
        div:AddParagraph("Try it!")
        div:AddParagraph("Continuing the example from the last slide, insert a new condition before the line end and then a line containing the code to execute: elseif sayStatement = false<br>output greeting and then Run your code.")

      return div
    end

    action Slide5 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: If (else)")

        div:AddParagraph("There is one other optional part of an if statement called the default condition, which will execute if no other condition in the statement is true.  In Quorum, this block is designated with the keyword else")
        div:AddParagraph("In our example, there are only two states: true and false, so there are no other possible conditions, although the elseif line could be converted to an else without a second condition.")
        div:AddParagraph("In other cases, you might have a list of conditions like: <br> if x = 1 {code block}<br>elseif x = 2 {code block}<br>else {code block}<br>end<br>&nbsp(You can experiment or move on when ready)")

      return div
    end

    action Slide6 returns Division
      Division div
        div:AddAttribute("data-heading", "If Statements: Additional Information")

        div:AddParagraph("More documentation on if statements can be found <a href="+dq+"http://quorumlanguage.com/documents/syntax/if.php"+dq+">here</a>.")

      return div
    end

    action GetSummaryName returns text
        return "Hour of Code Part 3"
    end

    action GetImageLocation returns text
        return ""
    end

    action GetName returns text
        return "Hour of Code Part 3"
    end

    action GetShortDescription returns text
        return "first steps in Quorum"
    end

    action GetLocation returns text
        return "hourofcode/part3.html"
    end

    action GetLinkName returns text
        return "Part " + ACTIVITY + ": " + SUBTITLE
    end

    action GetSectionName returns text
        return "Code With Mary"
    end
end

