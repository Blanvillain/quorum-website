use Libraries.Web.Page.all
use Libraries.Containers.Array

class HoCPart4 is HourOfCode
    text dq = ""
    dq = dq:GetDoubleQuote()

    text MEDIA_FOLDER = "/media/hourofcode/"
    text TITLE = "Hour of Code: Part 4 | Quorum Programming Language"
    text HEADER = "Hour of Code: Part 4"
    text SUBTITLE = "Clothing Picker"
    text MOVE_ON_TEXT = "Move on to Part 5"
    text YOUTUBE_ADDRESS = "//www.youtube.com/embed/j4Bjfu1TaEE?rel=0"
    text SLIDES_HEADER = "Repeat"
    integer ACTIVITY = 4

    action Setup()
        Array<Division> slides
        slides:Add(Slide1())
        slides:Add(Slide2())
        slides:Add(Slide3())
        slides:Add(Slide4())
        slides:Add(Slide5())
        Setup(TITLE, HEADER, SUBTITLE, SLIDES_HEADER, MOVE_ON_TEXT, YOUTUBE_ADDRESS, ACTIVITY, slides)
    end

    action Slide1 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: Repeat")

        div:AddParagraph("If we want the computer to repeat a task multiple times, we can use a loop in our program.  This is usually a lot less work than typing the instruction repeatedly and more flexible because we can have the instructions executed a variable number of times.")
        div:AddParagraph("In Quorum, we create a loop using the keyword <code>repeat</code>.")
        div:AddParagraph("We mark the end of a loop in the same way we marked the end of an <code>if</code> statement, by using the keyword <code>end</code>.")
        div:AddParagraph("In this example, we will explore three different ways to control loops using the statements: <code>repeat {number} times</code>, <code>repeat while {condition}</code> and <code>repeat until {condition}</code>.")

      return div
    end

    action Slide2 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: Repeat Times")

        div:AddParagraph("The most basic type of loop involves just telling the computer how many times to repeat something.")
        div:AddParagraph("In Quorum, if we want to do something 5 times, we can type: <code>repeat 5 times</code> or if we have a numeric variable, we can place that in the "+dq+"5"+dq+" position like: <code>repeat x times</code>.")
        div:AddParagraph("Try it!")
////        div:AddParagraph("number evenNumber = 2 repeat 5 times    output evenNumber", "    evenNumber = evenNumber + 2 end")

      return div
    end

    action Slide3 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: Repeat While")

        div:AddParagraph("An alternative type of loop is to repeat a block of code while a certain condition is met.")
        div:AddParagraph("In Quorum we do this by using a <code>repeat while</code> statement. After the keyword <code>while</code>, we include a condition, just like we did with an <code>if</code> statement.")
        div:AddParagraph("If we want to mimic the last example, we could just repeat while our variable is less than or equal to 10.")
        div:AddParagraph("Note that the value of the variable will be 12, but the output statement is skipped when the repeat condition is false.")
        div:AddParagraph("Try it!")
//        div:AddParagraph("number evenNumber = 2", "repeat while evenNumber <= 10", "    output evenNumber", "    evenNumber = evenNumber + 2 end")

      return div
    end

    action Slide4 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: Repeat Until")

        div:AddParagraph("The final way of representing a loop in Quorum is to use a <code>repeat until</code> statement, which is very similar to the <code>repeat while</code> loop.")
        div:AddParagraph("The difference is that the <code>repeat until</code> loop stops when a specific condition is met instead of repeating while a condition is met.")
        div:AddParagraph("You can represent the same logical control with either format, so it is your choice which one you use, but sometimes one is more natural than the other.")
        div:AddParagraph("Try it!")
//        div:AddParagraph("number evenNumber = 2", "repeat until evenNumber > 10", "    output evenNumber", "    evenNumber = evenNumber + 2 end")

      return div
    end

    action Slide5 returns Division
      Division div
        div:AddAttribute("data-heading", "Control Structures: Additional Information")

        div:AddParagraph("More documentation on <code>repeat</code> can be found <a href="+dq+"http://quorumlanguage.com/documents/syntax/repeat.php"+dq+">here</a>.")

      return div
    end

    action GetSummaryName returns text
        return "Hour of Code Part 4"
    end

    action GetImageLocation returns text
        return ""
    end

    action GetName returns text
        return "Hour of Code Part 4"
    end

    action GetShortDescription returns text
        return "first steps in Quorum"
    end

    action GetLocation returns text
        return "hourofcode/part4.html"
    end

    action GetLinkName returns text
        return "Part " + ACTIVITY + ": " + SUBTITLE
    end

    action GetSectionName returns text
        return "Code With Mary"
    end
end


