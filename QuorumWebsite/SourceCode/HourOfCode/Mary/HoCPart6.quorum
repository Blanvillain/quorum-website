use Libraries.Web.Page.all
use Libraries.Containers.Array

class HoCPart6 is HourOfCode
    text dq = ""
    dq = dq:GetDoubleQuote()

    text MEDIA_FOLDER = "/media/hourofcode/"
    text TITLE = "Hour of Code: Part 6 | Quorum Programming Language"
    text HEADER = "Hour of Code: Part 6"
    text SUBTITLE = "Mutate the Bugs"
    text MOVE_ON_TEXT = "Move on to Part 7"
    text YOUTUBE_ADDRESS = "//www.youtube.com/embed/qIvXHEhIQI8?rel=0"
    text SLIDES_HEADER = "Actions"
    integer ACTIVITY = 6

    action Setup()
        Array<Division> slides
        slides:Add(Slide1())
        slides:Add(Slide2())
        slides:Add(Slide3())
        slides:Add(Slide4())
        slides:Add(Slide5())
        slides:Add(Slide6())
        Setup(TITLE, HEADER, SUBTITLE, SLIDES_HEADER, MOVE_ON_TEXT, YOUTUBE_ADDRESS, ACTIVITY, slides)
    end

    action Slide1 returns Division
      Division div
        div:AddAttribute("data-heading", "Actions")

        div:AddParagraph("Often times inside a program, we want to run the same code sections many times in different places. We usually want to eliminate this duplicate code to save time, reduce errors and make things easier to change.")
        div:AddParagraph("We do this by writing procedures that we call whenever we want code to run.  In Quorum, these are called actions.")
        div:AddParagraph("You didn't realize it, but we have already been using an action called Main. The computer always starts running our program from our Main action.  We haven't had to use it so far, because Quorum automatically puts our code inside a Main action if we don't use any other actions.")
        div:AddParagraph("Now that we are going to use other actions though, we always need to include it.")

      return div
    end

    action Slide2 returns Division
      Division div
        div:AddAttribute("data-heading", "Creating Actions: Part 1")

        div:AddParagraph("In Quorum to create an action, we use the keyword action followed by the name of the action.  We usually capitalize the first letter of an action name, but it is not required. Naming rules for actions are the same as variables, it must start with a letter.")
        div:AddParagraph("Since we are going to have a code block inside the action, we also need to include an end to mark where the action ends.")
        div:AddParagraph("Try it!")
//        div:AddCodeBox("action Main", "end")

      return div
    end

    action Slide3 returns Division
      Division div
        div:AddAttribute("data-heading", "Creating Actions: Part 2")

        div:AddParagraph("You can put any type of code that you've learned so far inside the Main action or call other actions from it.")
        div:AddParagraph("We are going to create another action now that we will call from the Main action.")
        div:AddParagraph("To do this, just create a new action after the end statement of the Main action.")
        div:AddParagraph("Try it!")
//        div:AddCodeBox("action PrintMsg", "end")

      return div
    end

    action Slide4 returns Division
      Division div
        div:AddAttribute("data-heading", "Creating Actions: Part 3")

        div:AddParagraph("At the moment, we have two actions in our program, but no code to run inside the actions.  We'll learn how to call an action in a moment, but first, let's write some code inside the PrintMsg action.")
        div:AddParagraph("To keep our example simple, we are going to write a simple output message to the screen.")
        div:AddParagraph("Try it!")
//        div:AddCodeBox("output "+dq+"Programming in Quorum is fun!"+dq+"")

      return div
    end

    action Slide5 returns Division
      Division div
        div:AddAttribute("data-heading", "Calling Actions")

        div:AddParagraph("Now, in order to complete this program we need to call our PrintMsg action from our Main action so that it will execute.")
        div:AddParagraph("In Quorum, this is very easy to do, we just insert a line of code in the Main action that redirects the computer to the other action.  We do this adding the line PrintMsg() to the Main action.")
        div:AddParagraph("The parentheses are necessary after the action name to notify the computer that it should run an action.")
        div:AddParagraph("Try it!")
//        div:AddCodeBox("PrintMsg()")

      return div
    end

    action Slide6 returns Division
      Division div
        div:AddAttribute("data-heading", "Actions: More Information")

        div:AddParagraph("Here is our full example:")
//        div:AddCodeBox("action Main", "PrintMsg()", "end", "action PrintMsg", "output "+dq+"Programming in Quorum is Fun!"+dq+"", "end")
        div:AddParagraph("Actions are an important and useful concept in programming, but we've only covered the basics so far. You can also do things like pass variables to an action and return values from an action.")
        div:AddParagraph("For more information on actions, click <a href="+dq+"http://quorumlanguage.com/documents/syntax/actions.php"+dq+">here</a>")
        div:AddParagraph("Mary's project covering actions can be found <a href="+dq+"projects/actions_and_classes.zip"+dq+">here</a>.")

      return div
    end

    action GetSummaryName returns text
        return "Hour of Code Part 6"
    end

    action GetImageLocation returns text
        return ""
    end

    action GetName returns text
        return "Hour of Code Part 6"
    end

    action GetShortDescription returns text
        return "first steps in Quorum"
    end

    action GetLocation returns text
        return "hourofcode/part6.html"
    end

    action GetLinkName returns text
        return "Part " + ACTIVITY + ": " + SUBTITLE
    end

    action GetSectionName returns text
        return "Code With Mary"
    end
end

//  slideArray[0] = "<h5 class=\"slideHeader\"role=\"heading\">Actions</h5>\n\
//        <ul>\n\
//        <li>Often times inside a program, we want to run the same code sections many times in different places. We usually want to eliminate this duplicate code to save time, reduce errors and make things easier to change.</li>\n\
//        <li>We do this by writing procedures that we call whenever we want code to run.  In Quorum, these are called actions.</li>\n\
//        <li>You didn't realize it, but we have already been using an action called <code>Main</code>. The computer always starts running our program from our <code>Main</code> action.  We haven't had to use it so far, because Quorum automatically puts our code inside a <code>Main</code> action if we don't use any other actions.</li>\n\
//        <li>Now that we are going to use other actions though, we always need to include it.</li>\n\
//</ul>";
//
//  slideArray[1] = "<h5 class=\"slideHeader\"role=\"heading\">Creating Actions: Part 1</h5>\n\
//        <ul>\n\
//        <li>In Quorum to create an action, we use the keyword <code>action</code> followed by the name of the action.  We usually capitalize the first letter of an action name, but it is not required. Naming rules for actions are the same as variables, it must start with a letter.</li>\n\
//        <li>Since we are going to have a code block inside the action, we also need to include an <code>end</code> to mark where the action ends.</li>\n\
//        <span class=\"title\">Try it!</span><div class =\"task\"><p>Lets start a new program by creating a Main action:<br>\n\
//        <code>action Main</code><br>\n\
//        <code>end</code> (then move to the next slide)</p>\n\
//        </div>\n\
//        </ul>";
//
//  slideArray[2] = "<h5 class=\"slideHeader\"role=\"heading\">Creating Actions: Part 2</h5>\n\
//        <ul>\n\
//        <li>You can put any type of code that you've learned so far inside the <code>Main</code> action or call other actions from it.</li>\n\
//        <li>We are going to create another action now that we will call from the <code>Main</code> action.</li>\n\
//        <li>To do this, just create a new action after the <code>end</code> statement of the <code>Main</code> action.</li>\n\
//            <span class=\"title\">Try it!</span><div class =\"task\"><p>Create an action called <code>PrintMsg</code> after the <code>Main</code> action:<br>\n\
//        <code>action PrintMsg</code>.<br>\n\
//        <code>end</code> (then move to the next slide).</p></div>\n\
//        </ul>";
//
//  slideArray[3] = "<h5 class=\"slideHeader\"role=\"heading\">Creating Actions: Part 3</h5>\n\
//        <ul>\n\
//        <li>At the moment, we have two actions in our program, but no code to run inside the actions.  We'll learn how to call an action in a moment, but first, let's write some code inside the <code>PrintMsg</code> action. </li>\n\
//        <li>To keep our example simple, we are going to write a simple output message to the screen.</li>\n\
//        <span class=\"title\">Try it!</span>\n\
//        <div class =\"task\"><p>Insert an <code>output</code> statement inside the <code>PrintMsg</code> action:<br>\n\
//        <code>output \"Programming in Quorum is fun!\"</code><br>(then move to the next slide)</div></p>\n\
//        </ul>";
//
//  slideArray[4] = "<h5 class=\"slideHeader\"role=\"heading\">Calling Actions</h5>\n\
//        <ul>\n\
//        <li>Now, in order to complete this program we need to call our <code>PrintMsg</code> action from our <code>Main</code> action so that it will execute.</li>\n\
//        <li>In Quorum, this is very easy to do, we just insert a line of code in the <code>Main</code> action that redirects the computer to the other action.  We do this adding the line <code>PrintMsg()</code> to the <code>Main</code> action.</li>\n\
//        <li>The parentheses are necessary after the action name to notify the computer that it should run an action.</li>\n\
//        <span class=\"title\">Try it!</span>\n\
//        <div class =\"task\"><p>Call <code>PrintMsg</code> from <code>Main</code>:<br>\n\
//        <code>PrintMsg()</code> (then Run your code).</p></div>\n\
//        </ul>";
//
//  slideArray[5] = "<h5 class=\"slideHeader\"role=\"heading\">Actions: More Information</h5>\n\
//        <ul>\n\
//        <li>Here is our full example:<br>\n\
//        <p class=\"code\"> action Main<br>\n\
//        &nbsp&nbsp&nbsp&nbsp PrintMsg()<br>\n\
//        end<br><br>\n\
//        action PrintMsg<br>\n\
//        &nbsp&nbsp&nbsp&nbsp output \"Programming in Quorum is Fun!\"<br>\n\
//        end</p>\n\</li>\n\<li>Actions are an important and useful concept in programming, but we've only covered the basics so far. You can also do things like pass variables to an action and return values from an action.</li>\n\
//        <li>For more information on actions, click <a href=\"http://quorumlanguage.com/documents/syntax/actions.php\">here</a></li>\n\
//        <li>Mary's project covering actions can be found <a href=\"projects/actions_and_classes.zip\">here</a>.</li>\n\
//        </ul>";
