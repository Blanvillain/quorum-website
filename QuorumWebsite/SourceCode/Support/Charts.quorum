use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.Italic
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.Header
use Libraries.Web.Page.Button
use Libraries.Web.Page.Canvas
use Libraries.Web.Page.Script
use Libraries.System.FileReader
use Libraries.System.File
use Libraries.Web.Page.Label
use Libraries.Web.Page.Input

class Charts is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()

    Preformatter preformatter //helper
    // for unique canvas IDs
    integer idNum = 0

    action Setup
        LineBreak break //will be used multiple times
        
        AddDefaultHeaders()

        // The VersionHelper has up-to-date query strings for the source files.
        // The query strings don't modify the file at all, but will prevent the cache from returning an old version of the file.
        VersionHelper versions

        // add necessary scripts
        AddScript("/script/quorumCharts-beta.js" + versions:GetChartsScriptVersionQuery())

        // add necessary styles
        AddStylesheet("/style/quorumCharts-beta.css" + versions:GetChartsStyleVersionQuery())

        //html header stuff
        SetWebPageTitle("Quorum Charts Kitchen Sink Page")
        //Figure out getting main regions properly.
        MainContent mainRegion
        AdjustMain(mainRegion)

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        headDiv:AddHeading("Quorum Charts Kitchen Sink Page", 1)
        Add(headDiv)

        Division bodyDiv
        bodyDiv:SetClassAttribute("bodyContainer")
        
        //These are buttons to test vibrations
        bodyDiv:AddHeading("Vibration Test", 2)
        bodyDiv:AddText("This is a section to test a variety of vibrations. Patterns can be made by providing a frequency and time. The frequency is set by an 'on' 'off' repeating pattern (these values can be different, but for this demo they will be evenly distributed). A full cycle is being set by an on then an off and repeats for as many times as it takes to get the desired length.")

        

        Division vibrationDiv
        vibrationDiv:Add(break)

        Script vibrationScript
        vibrationScript:AddText(
        "
        function stopVibration(intervalId) {
            clearInterval(intervalId);
            window.navigator.vibrate([]);
        };
        
        async function startVibration(){
            var frequency = +document.getElementById('vibrationFrequency').value;
            var time = +document.getElementById('vibrationTime').value;
            if(!time || time === '' || time < 0 || !frequency || frequency === '' || frequency < 0) {
                alert('Both input fields need a positive, non-empty number value.');
                return;
            }
            var time_ms = time * 1000;
            var pulse = (1000 / frequency) / 2;
            var count = 1000 / pulse;
            var vibrationPattern = [pulse, pulse];
;
            console.log('Pattern (' + frequency+  ',' + time + '): [' + vibrationPattern + ']');

            var intervalId = window.setInterval(function(){ window.navigator.vibrate([pulse]) }, 2*pulse);
            setTimeout(function(){ stopVibration(intervalId) },time_ms);
        };")
        
        vibrationDiv:Add(vibrationScript)

        Label frequencyLabel
        frequencyLabel:AddText("Frequency (Hz): ")

        Input frequencyInput
        frequencyInput:SetIdentifier("vibrationFrequency")
        frequencyInput:SetType("number")
        frequencyInput:SetMin("0")

        vibrationDiv:Add(frequencyLabel)
        vibrationDiv:Add(frequencyInput)
        vibrationDiv:Add(break)

        Label timeLabel
        timeLabel:AddText("Time (secs): ")

        Input timeInput
        timeInput:SetIdentifier("vibrationTime")
        timeInput:SetType("number")
        timeInput:SetMin("0")

        vibrationDiv:Add(timeLabel)
        vibrationDiv:Add(timeInput)
        vibrationDiv:Add(break)

        Button vibrationStart
        vibrationStart:AddText("Start")
        vibrationStart:SetIdentifier("vibrationStart")
        vibrationStart:SetOnClick("startVibration();")

        vibrationDiv:Add(vibrationStart)
        bodyDiv:Add(vibrationDiv)
        

        File f
        FileReader reader

        bodyDiv:AddHeading("Bar Charts", 2)
        bodyDiv:AddText("This is a section with examples of Bar Charts")

        bodyDiv:AddHeading("Two Factor", 3)
        Division chart1
        chart1:SetStyle("min-width: 200px; max-width: 800px")
        f:SetPath("html/charts/bar_chart_two_factor.svg")
        reader:OpenForRead(f)
        chart1:AddText(reader:Read())
        reader:Close()
        
        bodyDiv:Add(chart1)

        WriteNextTutorial(bodyDiv)
        mainRegion:Add(bodyDiv)
        Add(mainRegion)

    end

    action GetSummaryName returns text
        return ""
    end
    action GetName returns text
        return ""
    end
    action GetShortDescription returns text
        return ""
    end
    action GetLocation returns text
        return "charts/Example.html"
    end
end