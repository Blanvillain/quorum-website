use Libraries.Web.Page.Division
use Libraries.Web.Page.Heading
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Label
use Libraries.Web.Page.TextArea
use Libraries.Web.Page.Button
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Select
use Libraries.Web.Page.Option
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Canvas
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Span
use Libraries.Web.Page.Script
use Libraries.Web.Page.Form
use Libraries.Web.Page.Input

class SideBySideIDE is Division
    text uniqueIdentifier = ""
    Heading title
    Paragraph subtitle
    UnorderedList subtitleList
    TextArea inputArea
    Button button
    PreformattedText outputArea
    boolean shouldHaveDropDownMenu = false
    boolean shouldUseListSubtitle = false
    Select selectMenu
    text ideLabel = ""
    boolean gameEvironment = false
    boolean hourOfCode = false
    Division gameCanvas
    boolean isOnlyIDE = false
    text ideStyleTag = "allInOneIde"

    action SetStylesheetTag(text value)
        ideStyleTag = value
    end

    action GetStyleSheetTag returns text
        return ideStyleTag
    end

    action IsOnlyIDEOnPage returns boolean
        return isOnlyIDE
    end

    action SetOnlyIDEOnPage(boolean page)
        isOnlyIDE = page
    end

    action GetGameCanvas returns Division
        return gameCanvas
    end

    action IsHourOfCodeEnvironment returns boolean
        return hourOfCode
    end

    action SetHourOfCodeEnvironment(boolean hour)
        hourOfCode = hour
    end

    action GetDevelopmentLabel returns text
        return ideLabel
    end

    action SetDevelopmentLabel(text label)
        ideLabel = label
    end
    
    action NormalSetup
        me:AddClassAttribute("ide")
        me:SetIdentifier(uniqueIdentifier + "Ide")
        
        Division leftSide
        if not hourOfCode
            leftSide:SetClassAttribute("ideLeftSide")
        else 
            leftSide:SetClassAttribute("ideHourOfCodeLeftSide")
        end

        title:SetScale(4)
        if not hourOfCode
            title:SetClassAttribute("ideTitle")
        else
            title:SetClassAttribute("hourOfCodeIDELabel")
        end

        Label labelForIDE
        labelForIDE:AddAttribute("for", uniqueIdentifier + "IdeInput")
        labelForIDE:AddText(ideLabel)
        title:Add(labelForIDE)
        leftSide:Add(title)

        if shouldHaveDropDownMenu
            selectMenu:SetIdentifier(uniqueIdentifier + "IdeDropDownMenu")
            selectMenu:SetClassAttribute("ideDropDownMenu")
            Label selectLabel
            selectLabel:SetElementId(uniqueIdentifier + "IdeDropDownMenu")
            selectLabel:AddText(uniqueIdentifier + " Selection")
            leftSide:Add(selectLabel)
            leftSide:Add(selectMenu)
        end
        if shouldUseListSubtitle = false
            subtitle:SetClassAttribute("ideSubtitle")
            leftSide:Add(subtitle)
        else
            subtitleList:SetClassAttribute("ideSubtitle")
            leftSide:Add(subtitleList)
        end
        
        //accessibility label
        Heading inputLabel
        inputLabel:SetScale(2)
        inputLabel:SetClassAttribute("hidden")
        inputLabel:AddText("Code Area")
        leftSide:Add(inputLabel)
        
        inputArea:SetClassAttribute("ideInput")
        inputArea:SetIdentifier(uniqueIdentifier + "IdeInput")
        inputArea:SetSpellcheck(false)
        inputArea:AddAttribute("role", "textbox")              //aria attribute
        inputArea:AddAttribute("aria-multiline", "true")        //aria attribute
        leftSide:Add(inputArea)
        
        button:SetClassAttribute("ideButton")
        button:SetIdentifier(uniqueIdentifier + "IdeButton")
        button:SetFormTarget("#")
        if hourOfCode
            button:AddText("Click here to Run Your Code")
        else
            button:AddText("Run Program for " + ideLabel)
        end

        leftSide:Add(button)

        Add(leftSide)
        Division ideOutputContainer
        ideOutputContainer:SetClassAttribute("ideOutputContainer")

        Heading outputLabel
        outputLabel:SetScale(2)
        outputLabel:SetClassAttribute("hidden")
        outputLabel:AddText("Output Area")
        ideOutputContainer:Add(outputLabel)

        outputArea:SetClassAttribute("ideOutput")
        outputArea:SetIdentifier(uniqueIdentifier + "IdeOutput")
        outputArea:AddAttribute("role", "region")
        outputArea:AddAttribute("aria-atomic", "true")
        outputArea:AddAttribute("aria-label", "output of " + ideLabel)
        outputArea:AddAttribute("aria-live", "assertive")
        ideOutputContainer:Add(outputArea)

        Add(ideOutputContainer)
        if IsGameEnvironment()
            Canvas canvas
            canvas:SetClassAttribute("ideCanvas")
            canvas:SetIdentifier(uniqueIdentifier + "IdeGameOutput")
            
            text cr = ""
            text dq = cr:GetDoubleQuote()
            cr = cr:GetCarriageReturn()
            Division code
            CodeBlock example1Code
            Span s1
            s1:AddText(     "//Web Games Template for this environment" + cr)
            s1:SetClassAttribute("comment")
            example1Code:Add(s1)
            example1Code:AddText(    "use Libraries.Game.Game" + cr)
            example1Code:AddText(    "use Libraries.Game.WebConfiguration" + cr)
            example1Code:AddText(    "class Main is Game" + cr)
            example1Code:AddText(    "    action Main" + cr)
            
            example1Code:AddText(    "        SetWebCanvasName(" + dq + uniqueIdentifier + "IdeGameOutput" + dq + ")" + cr)
            example1Code:AddText(    "        StartGame()" + cr)
            example1Code:AddText(    "    end" + cr)
            example1Code:AddText(    "end" + cr)
            PreformattedText pre
            pre:Add(example1Code)
            code:Add(pre)

            code:SetClassAttribute("ideCanvasRight")
            
            gameCanvas:Add(code)
            gameCanvas:Add(canvas)
        end
    end

    
    action AllInOneSetup
        me:AddClassAttribute(GetStyleSheetTag())
        me:SetIdentifier(uniqueIdentifier + "Ide")
        
        Label labelForIDE
        labelForIDE:AddAttribute("for", uniqueIdentifier + "IdeInput")
        labelForIDE:AddText(ideLabel)
        title:Add(labelForIDE)
        title:SetScale(2)
        title:SetClassAttribute("allInOneIdeTitle")
        Add(title)

        if shouldHaveDropDownMenu
            selectMenu:SetIdentifier(uniqueIdentifier + "IdeDropDownMenu")
            selectMenu:SetClassAttribute("allInOneIdeDropDownMenu")
            selectMenu:SetTitle(uniqueIdentifier + "IdeDropDownMenu")
            Add(selectMenu)
        end
        if shouldUseListSubtitle = false
            subtitle:SetClassAttribute("allInOneIdeSubtitle")
            Add(subtitle)
        else
            subtitleList:SetClassAttribute("allInOneIdeSubtitle")
            Add(subtitleList)
        end
        Division fileBar
        fileBar:SetClassAttribute("fileBar")

//        Button savebutton
//        savebutton:SetType("button")
//        savebutton:SetIdentifier("saveCodeButton")
//        savebutton:SetClassAttribute("fileBarButton")
//        savebutton:SetOnClick("saveCode('" + uniqueIdentifier + "IdeInput" + "', '" + uniqueIdentifier + "IdeOutput" + "')")
//        savebutton:AddText("Save")
//        fileBar:Add(savebutton)
//
//        Button loadButton
//        loadButton:SetType("button")
//        loadButton:SetIdentifier("loadCodeButton")
//        loadButton:SetClassAttribute("fileBarButton")
//        loadButton:SetOnClick("loadCode('" + uniqueIdentifier + "IdeInput" + "', '" + uniqueIdentifier + "IdeOutput" + "')")
//        loadButton:AddText("Load")
//        fileBar:Add(loadButton)

        Button saveProjectButton
        saveProjectButton:SetType("button")
        saveProjectButton:SetIdentifier("saveProjectButton")
        saveProjectButton:SetClassAttribute("fileBarButton")
        saveProjectButton:SetOnClick("showSaveModal('" + uniqueIdentifier + "')")
        saveProjectButton:AddText("Save")
        fileBar:Add(saveProjectButton)

        Button loadProjectButton
        loadProjectButton:SetType("button")
        loadProjectButton:SetIdentifier("loadProjectButton")
        loadProjectButton:SetClassAttribute("fileBarButton")
        loadProjectButton:SetOnClick("showLoadModal('" + uniqueIdentifier + "')")
        loadProjectButton:AddText("Load")
        fileBar:Add(loadProjectButton)

        AddSaveDialog()
        AddLoadDialog()

        Button embedButton
        embedButton:SetType("button")
        embedButton:SetIdentifier("embedCodeButton")
        embedButton:SetClassAttribute("fileBarButton")
        embedButton:SetOnClick("embedCode('" + uniqueIdentifier + "IdeInput" + "', '" + uniqueIdentifier + "IdeOutput" + "', '" + uniqueIdentifier + "CopyArea" + "')")
        embedButton:AddText("Embed")
        fileBar:Add(embedButton)
        
        Add(fileBar)
        
        //accessibility label
        Heading inputLabel
        inputLabel:SetScale(2)
        inputLabel:SetClassAttribute("hidden")
        inputLabel:AddText("Code Area")
        Add(inputLabel)
        
        Form form
        form:SetPost(true)
        form:SetFormAction("https://quorumlanguage.com/run.php")
        form:SetTarget("_blank")

        inputArea:SetName("code")
        inputArea:SetClassAttribute("allInOneIdeInput")
        inputArea:SetIdentifier(uniqueIdentifier + "IdeInput")
        inputArea:SetSpellcheck(false)
        inputArea:AddAttribute("role", "textbox")              //aria attribute
        inputArea:AddAttribute("aria-multiline", "true")        //aria attribute
        form:Add(inputArea)

        /*
            <button type="button" id= "frontPageIdeBuildButton" class= "allInOneIdeButton" onclick="buildCode('frontPageIdeInput', 'frontPageIdeOutput')">Build</button>
        */

        Input ideName
        ideName:SetName("ideName")
        ideName:SetType("text")
        ideName:SetClassAttribute("hidden")
        ideName:SetDefaultValue(uniqueIdentifier)
        form:Add(ideName)

        Button button
        button:SetType("button")
        button:SetIdentifier("frontPageIdeBuildButton")
        button:SetClassAttribute("BuildButton")
        button:SetOnClick("buildCode('" + uniqueIdentifier + "IdeInput" + "', '" + uniqueIdentifier + "IdeOutput" + "')")
        button:AddText("Build")
        form:Add(button)


        Input in
        in:SetType("submit")
        in:SetClassAttribute("RunButton")
        in:SetIdentifier(uniqueIdentifier + "IdeButton")
        if ideLabel not= undefined and not ideLabel:IsEmpty() and not IsOnlyIDEOnPage()
            in:SetDefaultValue("Run Program for " + ideLabel)
        else
            in:SetDefaultValue("Run Program")
        end
        form:Add(in)
        Add(form)
        
        //accessibility label
        Heading outputLabel
        outputLabel:SetScale(2)
        outputLabel:SetClassAttribute("hidden")
        outputLabel:AddText("Output Area")
        Add(outputLabel)

        outputArea:SetClassAttribute("allInOneIdeOutput")
        outputArea:SetIdentifier(uniqueIdentifier + "IdeOutput")
        outputArea:AddAttribute("role", "region")
        outputArea:AddAttribute("aria-atomic", "true")
        outputArea:AddAttribute("aria-label", "output of Development Environment")
        outputArea:AddAttribute("aria-live", "assertive")
        Add(outputArea)

        Input embedValue
        embedValue:SetType("hidden")
        embedValue:SetIdentifier(uniqueIdentifier + "CopyArea")
        embedValue:AddAttribute("readonly", "readonly")
        Add(embedValue)
//
//        if IsGameEnvironment()
//            Heading gameLabel
//            gameLabel:SetScale(2)
//            gameLabel:SetClassAttribute("ideSubHeading")
//            gameLabel:AddText("Visual Output")
//            Add(gameLabel)
//
//            constant text DEFAULT_CANVAS_NAME = "QuorumGraphicsCanvas"
//            Canvas canvas
//            canvas:SetTabIndex("0")
//            canvas:SetClassAttribute("ideCanvas")
//            canvas:SetIdentifier(DEFAULT_CANVAS_NAME)
//
//            text cr = ""
//            text dq = cr:GetDoubleQuote()
//            cr = cr:GetCarriageReturn()
//            Division code
//            CodeBlock example1Code
//            Span s1
//            s1:AddText(     "//Web Games Template for this environment" + cr)
//            s1:SetClassAttribute("comment")
//            example1Code:Add(s1)
//            example1Code:AddText(    "use Libraries.Game.Game" + cr)
//            example1Code:AddText(    "use Libraries.Game.WebConfiguration" + cr)
//            example1Code:AddText(    "class Main is Game" + cr)
//            example1Code:AddText(    "    action Main" + cr)
//            
//            example1Code:AddText(    "        SetWebCanvasName(" + dq + uniqueIdentifier + "IdeGameOutput" + dq + ")" + cr)
//            example1Code:AddText(    "        StartGame()" + cr)
//            example1Code:AddText(    "    end" + cr)
//            example1Code:AddText(    "end" + cr)
//            PreformattedText pre
//            pre:Add(example1Code)
//            code:Add(pre)
//
//            code:SetClassAttribute("ideCanvasRight")
//            
//            //gameCanvas:Add(code)
//            Add(canvas)
//
//            Script script
//            script:SetCode("var canvas = document.getElementById(" 
//                + dq + DEFAULT_CANVAS_NAME + dq + 
//            "); canvas.width = 800; canvas.height = 600;")
//
//            Add(script)
//        end
    end

    private action AddSaveDialog
        Division saveDiv

        text id = GetUniqueIdentifier()

        saveDiv:SetClassAttribute("modal")
        saveDiv:SetIdentifier(id + "SaveModal")
        saveDiv:AddAttribute("role", "dialog")
        saveDiv:AddAttribute("aria-labelledby", id + "SaveTitleDiv")

        Division modalDialog
        modalDialog:SetClassAttribute("modal-dialog modal-content animate")

        Division saveTitleDiv
        saveTitleDiv:SetClassAttribute("savetitle")
        saveTitleDiv:SetIdentifier(id + "SaveTitleDiv")
        saveTitleDiv:AddText("Save this Project")
        modalDialog:Add(saveTitleDiv)

        Form saveForm

        saveForm:SetClassAttribute("saveform")
        saveForm:AddAttribute("method", "post")

        Division fieldContainerDiv
        fieldContainerDiv:SetClassAttribute("saveFieldContainer")
        
        Division projectNameDiv
        projectNameDiv:SetClassAttribute("projectnamediv formfielddiv")

        Label projectNameLabel
        projectNameLabel:AddText("Project Name: ")
        projectNameDiv:Add(projectNameLabel)
        
        Input projectNameInput
        projectNameInput:SetType("text")
        projectNameInput:SetClassAttribute("SaveField")
        projectNameInput:SetName("projectname")
        projectNameInput:SetIdentifier(id + "projectNameInput")
        projectNameInput:AddAttribute("data-prefix", id)
        projectNameInput:SetRequired(true)
        
        projectNameDiv:Add(projectNameInput)

        fieldContainerDiv:Add(projectNameDiv)

        Division footbar
        footbar:SetClassAttribute("footbar")

        
        Button submitButton
        submitButton:SetClassAttribute("savebtn")
        submitButton:SetType("button")
        submitButton:AddText("Save Project")
        submitButton:SetTabIndex("0")
        submitButton:SetOnClick("saveProject('" + id + "', '" + id + "IdeInput', '" + id + "IdeOutput', '" + id + "projectNameInput', 'false')")

        saveForm:Add(fieldContainerDiv)

        Division buttonContainerDiv
        buttonContainerDiv:SetClassAttribute("saveContainer")

        Button cancelButton
        cancelButton:SetType("button")
        cancelButton:SetOnClick("hideSaveModal('" + id + "')")
        cancelButton:SetClassAttribute("savebtn savecancelbtn")
        cancelButton:AddAttribute("data-prefix", id)
        cancelButton:SetIdentifier(id + "SaveProjectCancel")
        cancelButton:AddText("Cancel")
        cancelButton:SetTabIndex("0")

        buttonContainerDiv:Add(submitButton)
        buttonContainerDiv:Add(cancelButton)

        footbar:Add(buttonContainerDiv)

        saveForm:Add(footbar)

        modalDialog:Add(saveForm)
        saveDiv:Add(modalDialog)

        Add(saveDiv)
    end

    private action AddLoadDialog
        Division loadDiv

        text id = GetUniqueIdentifier()

        loadDiv:SetClassAttribute("modal")
        loadDiv:SetIdentifier(id + "LoadModal")
        loadDiv:AddAttribute("role", "dialog")
        loadDiv:AddAttribute("aria-labelledby", id + "LoadTitleDiv")

        Division modalDialog
        modalDialog:SetClassAttribute("modal-dialog modal-content animate")

        Division loadTitleDiv
        loadTitleDiv:SetClassAttribute("loadtitle")
        loadTitleDiv:SetIdentifier(id + "LoadTitleDiv")
        loadTitleDiv:AddText("Load a Project")
        modalDialog:Add(loadTitleDiv)

        Form loadForm

        loadForm:SetClassAttribute("loadform")
        loadForm:AddAttribute("method", "post")

        Division fieldContainerDiv
        fieldContainerDiv:SetClassAttribute("loadFieldContainer")
        fieldContainerDiv:SetIdentifier(id + "LoadFieldContainer")
        
        Division projectLoadDiv
        projectLoadDiv:SetClassAttribute("projectloaddiv formfielddiv")

        Select projectSelect
        projectSelect:SetClassAttribute("loadProjectSelect")
        projectSelect:SetIdentifier(id + "LoadProjectSelect")
        projectSelect:AddAttribute("data-prefix", id)
        projectSelect:AddAttribute("size", "5")
        projectLoadDiv:Add(projectSelect)

//        Label projectNameLabel
//        projectNameLabel:AddText("Project Name: ")
//        projectLoadDiv:Add(projectNameLabel)
//        
//        Input projectNameInput
//        projectNameInput:SetType("text")
//        projectNameInput:SetClassAttribute("SaveField")
//        projectNameInput:SetName("projectname")
//        projectNameInput:SetIdentifier(id + "projectNameInput")
//        projectNameInput:SetRequired(true)
//        
//        projectNameDiv:Add(projectNameInput)
//
        fieldContainerDiv:Add(projectLoadDiv)

        Division footbar
        footbar:SetClassAttribute("footbar")

        
        Button submitButton
        submitButton:SetClassAttribute("loadbtn")
        submitButton:SetType("button")
        submitButton:AddText("Load Project")
        submitButton:SetTabIndex("0")
        submitButton:SetOnClick("loadProject('" + id + "', '" + id + "LoadProjectSelect', '" + id + "IdeInput', '" + id + "IdeOutput')")

        loadForm:Add(fieldContainerDiv)

        Division buttonContainerDiv
        buttonContainerDiv:SetClassAttribute("loadContainer")

        Button cancelButton
        cancelButton:SetType("button")
        cancelButton:SetOnClick("hideLoadModal('" + id + "')")
        cancelButton:SetClassAttribute("loadbtn loadcancelbtn")
        cancelButton:AddAttribute("data-prefix", id)
        cancelButton:SetIdentifier(id + "LoadProjectCancel")
        cancelButton:AddText("Cancel")
        cancelButton:SetTabIndex("0")

        buttonContainerDiv:Add(submitButton)
        buttonContainerDiv:Add(cancelButton)

        footbar:Add(buttonContainerDiv)

        loadForm:Add(footbar)

        modalDialog:Add(loadForm)
        loadDiv:Add(modalDialog)

        Add(loadDiv)
    end

    action Setup()
        if hourOfCode
            NormalSetup()
        else
            AllInOneSetup()
        end
    end

    action GetUniqueIdentifier() returns text
        return uniqueIdentifier
    end

    action SetUniqueIdentifier(text id)
        uniqueIdentifier = id
    end

    action SetShouldHaveDropDownMenu(boolean b)
        shouldHaveDropDownMenu = b
    end

    action SetShouldUseListSubtitle(boolean b)
        shouldUseListSubtitle = b
    end

    action GetSelectMenu() returns Select
        return selectMenu
    end

    action GetIDETitle() returns Heading
        return title
    end

    action GetIDESubtitle() returns WebTag
        if shouldUseListSubtitle = false
            return subtitle
        else
            return subtitleList
        end
    end


    action IsGameEnvironment returns boolean
        return gameEvironment
    end

    action SetGameEnvironment(boolean game)
        gameEvironment = game
    end

    action SetIDESubtitle(Paragraph p)
        subtitle = p
    end

    action SetIDESubtitle(UnorderedList ul)
        subtitleList = ul
    end

    action GetIDEInputArea() returns TextArea
        return inputArea
    end

    action GetIDEButton() returns Button
        return button
    end

    action GetIDEOutputArea returns PreformattedText
        return outputArea
    end
end